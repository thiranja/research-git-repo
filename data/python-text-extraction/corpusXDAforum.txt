GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
- Launcher supports work profile apps and dual apps from various oems
- Launcher supports Android 10+ gesture system but restricted.
- Groups allow users to create organized folders of apps available in the Groups Sheet
- Personalized search in the Search Sheet
- A revised single screen interface introducing a new layered material design.
- Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
- The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
- The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
- Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
- The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
- Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
- The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
- The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
- The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
- The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
- The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
- Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
- Recent Apps don't have a long click listener (no sheets).
- The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
- The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
- App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
- GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
- Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
- Users can block apps from showing badges and priority notifications.
- Launcher sheets can be accessed from the launcher menu.
- The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
- Widgets can be resized by long clicking on them and a resize module will appear (WIP).
- The launcher settings will theme itself on Android 10 light or dark mode.
- Launcher settings features smart suggestions that appear on certain variables available
- Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
- The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
- Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
- GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
- System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
- Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
- The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
- GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
- Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
Links:
XDA Original Post
V1 XDA Thread
Drywall Wallpaper Manager
Launcher Manager for Testing Launchers
GCA Telegram Channel
GCA Telegram News Channel
Download : GCA V2 Open Beta
(Download will also be available in the Telegram News Channel)Now on functionality of our App:
- Both backup and restore of individual programs one at a time and batch backup and restore of multiple programs are supported.
- Backups can be scheduled with no limit on the number of individual schedules and there is the possibility of creating custom lists from the list of installed apps.
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )Full description: This is a card game
Now, my full description used to be a lot more detailed than that, but I cut it down to the bare minimum to try to narrow down why Google keeps rejecting me.
Obviously they don't like "Cards Against Humanity" being in there. This is the email I keep getting:
"Thanks for submitting your app to Google Play. I reviewed <app name here>, and noticed some keyword spam issues that need to be corrected.
Here’s how you can submit your app for another review:
Sign in to your Developer Console and remove any irrelevant keywords from all translations of your store listing.
Review your app to make sure it’s in compliance with the keyword spam policy and all other policies listed in the Developer Program Policies.
Submit your app."
I searched and there are plenty of apps on the play store with multiple mentions of "Cards Against Humanity" throughout their descriptions. Mine used to be one of them. But now, when I update my app, any mention of "Cards Against Humanity" gets rejected.
Google's support has been absolutely horrendous on this matter. I tried their chat support to which they said we don't handle policy issues through chat and their email suggestions have been very vague as you can see above.
Has anyone else run into anything like this? I feel like I'm screwed. I spent a very long time developing this app and now nobody is going to be able to find it because I can't mention the actual game that it's based on.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWarden
Disclaimer:
Warden uses root permission to enable/disable components & de-bloat. Use at your own risk!
- Detects Trackers & Loggers across whole device
- Allows to disable all trackers/loggers
- Advance profile based app de-bloater
How does it work?
Warden has a static curated list of known trackers (Exodus Privacy) , each app's dex file is read to retrieve the class names, these class names are then matched with the signatures of known trackers & loggers to find them.
A list of currently known trackers & loggers can be found here & here
Loggers in the context of Warden means all utilities which are used to log user activity on an app or logcat in general. Not all loggers are evil.
But few logging tools like ACRA, xLog are very powerful tools that can send user data to devs without user's consent.
So do read the app's Privacy Policy, beforehand.
De-Bloater (Requires Root)
Warden provides a profile based de-bloater where a profile is created in a format specified as in this sample scripts
You need to place this profile/your custom profile at `ExternalStorage/Warden/Profiles` to make them appear in app.
De-Bloater is an experimental feature, will improve it over time.
Default action for debloating is 'disable' you can configure it to 'uninstall' or 'hide' from settings.
Nuke it! (Requires Root)
Nuke it! is another experimental feature that scans all apps on the device and disables all know tracker components automatically.
It also gives an option to export components names per-app basis.
Components here means: Activities, Services, Providers & Receivers
Warden uses `su pm` to manage the components.
Downloads:
Latest:
AppWarden_v1.0.3.apk
Old:
AppWarden_v1.0.2.apk
AppWarden_v1.0.1.apk
Scripts: https://auroraoss.com/Warden/Scripts/
App: https://gitlab.com/AuroraOSS/AppWarden/-/tags
XDA:DevDB Information
Warden, App for all devices (see above for details)
Contributors
WhyOrean
Source Code: https://gitlab.com/AuroraOSS/AppWarden
Version Information
Status: Stable
Current Stable Version: 1.0.1
Stable Release Date: 2020-06-24
Created 2020-06-23
Last Updated 2020-06-23Brief Intro
This is a magisk module, apk included, it is used for adjusting the application volume individually(available for multiple playing, you need to ban Audio Focus permission for some app to achieve multiple play)
Features
1.app volume control
2.left/right channel volume control
3.float window
Screenshots
Installation
1.You need Magisk 20.2 or higher installed(Canary not recommended)
2.Download and flash the module
3.Module has 2 modes to install, use volume key to choose when installing module
- Default
This option will try setenforce 0 on boot as unexpected binder operation is banned by SeLinux
- Try enforcing
This option will do nothing with the SeLinux as the module has added sepolicy.rule to try add allow policy for my binder
This software may work better on system like AOSP, LineageOS, DerpFest, etc(MIUI is suppoted after a huge amount test)
Download module
module has been added to magisk module submission issue,
Github release:https://github.com/Alcatraz323/audiohq_module/releases
Apk file is also available on GooglePlay and Coolapk
Open source
Github:https://github.com/Alcatraz323/audiohq_md2For Los 17 and Crdroid, my device has no backlight after the "Samsung Galaxy Tab A", but official marshmallow works fine.
Let's see if spiramedia reconfirms that my 17.1 build works on his BOE panel.
Register or Login with Google
Nope, I tried this way but no help. I flashed marshmallow firmware then Crdroid6.9 without clean,
it was no display but heated up at boot. I waited for about 10min but it didn't boot complete. Edit: I tried again just now, it booted successfully but still no backlight. Now I'm using official marshmallow.
I don't know why this ROM works with spiramedia's BOE device. I have some friends who have T350/P350 BOE devices and all they have backlight problem with 3-part ROMs, that’s why I am sure that the backlight problem is related to BOE.
For Los 17 and Crdroid, my device has no backlight after the "Samsung Galaxy Tab A", but official marshmallow works fine.
flash any marshmallow rom. install this recovery twrp 3.3.1 before system boot. and it will work just fine. https://yadi.sk/d/0PyIqtmNDZSeUA
here my screenshots and pictures of my tablet. and it is boe panel.
here my screenshots and pictures of my tablet. and it is boe panel.
here my screenshots and pictures of my tablet. and it is boe panel.
sched_enable_hmp=1 console=null androidboot.hardware=qcom user_debug=23 msm_rtb.filter=0x3F ehci-hcd.park=3 androidboot.bootdevice=7824900.sdhci androidboot.selinux=permissive buildvariant=userdebug androidboot.sec_atd.tty=/dev/ttyHSL0 loglevel=4 [email protected] [email protected] androidboot.revision=4 androidboot.warranty_bit=1 androidboot.bootloader=T350XXU1BPI2 lpm_levels.sleep_disabled=1 fg_reset=0 androidboot.boot_recovery=0 sec_debug.reset_reason=0x0 pmic_info=4 androidboot.debug_level=0x4f4c sec_debug.enable=0 sec_debug.enable_user=0 androidboot.cp_debug_level=0x55FF sec_debug.enable_cp_debug=0 vmalloc=340M cordon=5f04934d4ba4827dae1b753264762dcf connie=SM-T350_OPEN_EUR_0a84495e5d4aeff737133a16083ac125 androidboot.security_mode=1526595584 androidboot.emmc=true androidboot.serialno=0b37ead1210a9b57 androidboot.baseband=apq lcd_id=0x5db810 mdss_mdp.panel=1:dsi:0:ss_dsi_panel_S6D7AA0_LSL080AL03_BOE_WXGA:1:none gt58wifi:/is random reboot a feature on the list??
Changelog :
- Buggs Added. (Random Reboot)
Register or Login with Google
Why I can't find module for download there is no release ??
Changelog :
- Buggs Added. (Random Reboot)
Google app??????? Damn maybe I should use 1.3.8 and and stay
You should try the app, works great here on my deviceI have installed a custom rom called Resurrection Remix running Android 7.1.2. I found a feature, under Configurations, where I can change the system animations for the entire operating system, and also prevent apps from overriding transitions.
All the animations are set to 'Default' at this time, but I desire to change the system animations to look like the Samsung Galaxy S7 Edge, or higher S8, S9 or S10. For example, under 'Activity open animation', it can be set to:
- Default
- Fade
- Slide in Right
- Slide in Left
- Slide in Right (No fade)
- Slide in Left (No fade)
- Slide in Bottom
- Slide in Top
- Translucent
- Grow in (Top)
- Grow in (Center)
- Grow in (Bottom)
- Grow in (Left)
- Grow in (Right)
Can anyone indicate, the specific system animations of the Samsung Galaxy S7 or S8 or S9, please?
System Animations
Activity open animation ?
Activity close animation ?
Task open animation ?
Task open behind animation ?
Task close animation ?
Move to front animation ?
Move to back animation ?
Wallpaper open animation ?
Wallpaper close animation ?
Wallpaper intra open animation ?
Wallpaper intra close animation ?
Animation Duration ?
ListView
ListView animation ?
ListView interpolator ?
Thank you very much in advance.After 12 hours of trying to root Galaxy tap A SM-T515, I could root it on the latest update without twrp .
No bootloop!!
No failed on odin
Register or Login with Google
Finally!!
After 12 hours of trying to root Galaxy tap A SM-T515, I could root it on the latest update without twrp .
No bootloop!!
No failed on odinXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
OnePlus 8T
Samsung Galaxy Z Fold2
Samsung Galaxy Note 20 Ultra
Samsung Galaxy Note 20
OnePlus 8 Pro
Huawei P40 Pro
Samsung Galaxy S20
Huawei Mate 30 Pro
OnePlus 7T
Samsung Galaxy Note 10+
Google Pixel 4 XL
OnePlus 7 Pro
OnePlus Nord N100
OnePlus Nord N10 5G
Apple iPhone 12
OPPO Reno4 Z 5G
OPPO Reno4 / 4 Pro 5G
Huawei Mate 40 Pro
Lenovo Legion Duel
Realme 7iNow on functionality of our App:
- Both backup and restore of individual programs one at a time and batch backup and restore of multiple programs are supported.
- Backups can be scheduled with no limit on the number of individual schedules and there is the possibility of creating custom lists from the list of installed apps.
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )Max filesize for the download area is currently 2GB.
Loading Reviews...
Loading Discussion and details...
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI added two pictures where you can see what I mean by "Adrenaline".
Can someone help me by chance?
I would be very happy.
Sorry for my bad English.
package com.0000.00000; import androidx.appcompat.app.AppCompatActivity; import android.app.*; import android.os.*; import android.view.*; import android.view.View.*; import android.widget.*; import android.content.*; import android.graphics.*; import android.media.*; import android.net.*; import android.text.*; import android.util.*; import android.webkit.*; import android.animation.*; import android.view.animation.*; import java.util.*; import java.text.*; import java.util.HashMap; import java.util.ArrayList; import android.widget.LinearLayout; import android.widget.TextView; import com.google.android.gms.ads.AdView; import com.google.android.gms.ads.AdRequest; import android.widget.ListView; import android.widget.ArrayAdapter; import android.widget.BaseAdapter; import android.widget.EditText; import com.google.android.gms.ads.InterstitialAd; import com.google.android.gms.ads.AdListener; import android.content.Intent; import android.net.Uri; import android.app.AlertDialog; import android.content.DialogInterface; import android.text.Editable; import android.text.TextWatcher; import android.widget.AdapterView; import com.google.gson.Gson; import com.google.gson.reflect.TypeToken; public class PerksActivity extends Activity { private ArrayList<Integer> image_list = new ArrayList<>(); private HashMap<String, Object> map_var = new HashMap<>(); private String saved = ""; private double length = 0; private double r = 0; private String value1 = ""; private String value2 = ""; private String value3 = ""; private String value4 = ""; private ArrayList<HashMap<String, Object>> map_list = new ArrayList<>(); private LinearLayout linear1; private LinearLayout linear2; private LinearLayout linear3; private LinearLayout linear10; private LinearLayout linear11; private LinearLayout linear12; private TextView textview4; private AdView adview1; private LinearLayout linear15; private LinearLayout linear16; private LinearLayout linear44; private ListView listview1; private EditText edittext1; private LinearLayout linear929; private TextView textview8; private InterstitialAd admob; private AdListener _admob_ad_listener; private Intent page_intent = new Intent(); private AlertDialog.Builder popup; @Override protected void onCreate(Bundle _savedInstanceState) { super.onCreate(_savedInstanceState); setContentView(R.layout.perks); initialize(_savedInstanceState); initializeLogic(); } private void initialize(Bundle _savedInstanceState) { linear1 = (LinearLayout) findViewById(R.id.linear1); linear2 = (LinearLayout) findViewById(R.id.linear2); linear3 = (LinearLayout) findViewById(R.id.linear3); linear10 = (LinearLayout) findViewById(R.id.linear10); linear11 = (LinearLayout) findViewById(R.id.linear11); linear12 = (LinearLayout) findViewById(R.id.linear12); textview4 = (TextView) findViewById(R.id.textview4); adview1 = (AdView) findViewById(R.id.adview1); linear15 = (LinearLayout) findViewById(R.id.linear15); linear16 = (LinearLayout) findViewById(R.id.linear16); linear44 = (LinearLayout) findViewById(R.id.linear44); listview1 = (ListView) findViewById(R.id.listview1); edittext1 = (EditText) findViewById(R.id.edittext1); linear929 = (LinearLayout) findViewById(R.id.linear929); textview8 = (TextView) findViewById(R.id.textview8); popup = new AlertDialog.Builder(this); listview1.setOnItemClickListener(new AdapterView.OnItemClickListener() { @Override public void onItemClick(AdapterView<?> _param1, View _param2, int _param3, long _param4) { final int _position = _param3; if (_position == 0) { popup.setTitle(map_list.get((int)_position).get("d").toString()); popup.setMessage(map_list.get((int)_position).get("e").toString()); popup.setPositiveButton("Schliessen", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface _dialog, int _which) { } }); popup.create().show(); } if (_position == 1) { popup.setTitle(map_list.get((int)_position).get("d").toString()); popup.setMessage(map_list.get((int)_position).get("e").toString()); popup.setPositiveButton("Schliessen", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface _dialog, int _which) { } }); popup.create().show(); } if (_position == 2) { popup.setTitle(map_list.get((int)_position).get("d").toString()); popup.setMessage(map_list.get((int)_position).get("e").toString()); popup.setPositiveButton("Schliessen", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface _dialog, int _which) { } }); popup.create().show(); } } }); edittext1.addTextChangedListener(new TextWatcher() { @Override public void onTextChanged(CharSequence _param1, int _param2, int _param3, int _param4) { final String _charSeq = _param1.toString(); map_list = new Gson().fromJson(saved, new TypeToken<ArrayList<HashMap<String, Object>>>(){}.getType()); length = map_list.size(); r = length - 1; for(int _repeat17 = 0; _repeat17 < (int)(length); _repeat17++) { value1 = map_list.get((int)r).get("a").toString(); value2 = map_list.get((int)r).get("b").toString(); value3 = map_list.get((int)r).get("c").toString(); if (!(_charSeq.length() > value1.length()) && value1.toLowerCase().contains(_charSeq.toLowerCase())) { } else { if (!(_charSeq.length() > value2.length()) && value2.toLowerCase().contains(_charSeq.toLowerCase())) { } else { if (!(_charSeq.length() > value3.length()) && value3.toLowerCase().contains(_charSeq.toLowerCase())) { } else { map_list.remove((int)(r)); } } } r--; } listview1.setAdapter(new Listview1Adapter(map_list)); ((BaseAdapter)listview1.getAdapter()).notifyDataSetChanged(); } @Override public void beforeTextChanged(CharSequence _param1, int _param2, int _param3, int _param4) { } @Override public void afterTextChanged(Editable _param1) { } }); _admob_ad_listener = new AdListener() { @Override public void onAdLoaded() { admob.show(); } @Override public void onAdFailedToLoad(int _param1) { final int _errorCode = _param1; SketchwareUtil.showMessage(getApplicationContext(), "Werbung konnte nicht Geladen werden!!!".concat(String.valueOf((long)(_errorCode)))); } @Override public void onAdOpened() { } @Override public void onAdClosed() { } }; } private void initializeLogic() { adview1.loadAd(new AdRequest.Builder().addTestDevice("0815") .build()); map_var = new HashMap<>(); map_var.put("a", getResources().getString(R.string.perksstriche)); map_var.put("b", getResources().getString(R.string.perksueberlebende)); map_var.put("c", getResources().getString(R.string.perksstriche02)); map_var.put("d", getResources().getString(R.string.perksinfopopupheadername)); map_var.put("e", getResources().getString(R.string.perksinfopopuptxtname)); map_list.add(map_var); map_var = new HashMap<>(); map_var.put("a", getResources().getString(R.string.perkablenkungname)); map_var.put("b", getResources().getString(R.string.perksueberlebendenadamfrancisname)); map_var.put("c", getResources().getString(R.string.perkslehrbarimblutnetzlevel30name)); map_var.put("d", getResources().getString(R.string.perkablenkungpopupheadername)); map_var.put("e", getResources().getString(R.string.perkablenkungpopuptxt)); map_list.add(map_var); map_var = new HashMap<>(); map_var.put("a", getResources().getString(R.string.perkadrenalinname)); map_var.put("b", getResources().getString(R.string.perksueberlebendenmegthomasname)); map_var.put("c", getResources().getString(R.string.perkslehrbarimblutnetzlevel40name)); map_var.put("d", getResources().getString(R.string.perkadrenalinpopupheadername)); map_var.put("e", getResources().getString(R.string.perkadrenalinpopuptxt)); map_list.add(map_var); listview1.setAdapter(new Listview1Adapter(map_list)); ((BaseAdapter)listview1.getAdapter()).notifyDataSetChanged(); saved = new Gson().toJson(map_list); image_list.add(R.drawable.perk_ueberlebende); image_list.add(R.drawable.adam_francis_perk_ablenkung); image_list.add(R.drawable.meg_thomas_perk_adrenalin); } @Override protected void onActivityResult(int _requestCode, int _resultCode, Intent _data) { super.onActivityResult(_requestCode, _resultCode, _data); switch (_requestCode) { default: break; } } public class Listview1Adapter extends BaseAdapter { ArrayList<HashMap<String, Object>> _data; public Listview1Adapter(ArrayList<HashMap<String, Object>> _arr) { _data = _arr; } @Override public int getCount() { return _data.size(); } @Override public HashMap<String, Object> getItem(int _index) { return _data.get(_index); } @Override public long getItemId(int _index) { return _index; } @Override public View getView(final int _position, View _view, ViewGroup _viewGroup) { LayoutInflater _inflater = (LayoutInflater)getBaseContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE); View _v = _view; if (_v == null) { _v = _inflater.inflate(R.layout.perkssearch, null); } final LinearLayout linear1 = (LinearLayout) _v.findViewById(R.id.linear1); final ImageView imageview1 = (ImageView) _v.findViewById(R.id.imageview1); final LinearLayout linear2 = (LinearLayout) _v.findViewById(R.id.linear2); final LinearLayout linear3 = (LinearLayout) _v.findViewById(R.id.linear3); final TextView textview1 = (TextView) _v.findViewById(R.id.textview1); final TextView textview2 = (TextView) _v.findViewById(R.id.textview2); final TextView textview3 = (TextView) _v.findViewById(R.id.textview3); textview1.setText(map_list.get((int)_position).get("a").toString()); textview2.setText(map_list.get((int)_position).get("b").toString()); textview3.setText(map_list.get((int)_position).get("c").toString()); imageview1.setImageResource(image_list.get((int)_position)); if (textview2.getText().equals(getResources().getString(R.string.perksueberlebende)) ) { textview2.setTextColor(0xFFFFFFFF); } if (textview2.getText().equals(getResources().getString(R.string.perksvonkeinezuordnungname)) ) { textview2.setTextColor(0xFFFFFFFF); } if (textview2.getText().equals(getResources().getString(R.string.perksueberlebendendwightfairfieldname)) ) { textview2.setTextColor(0xFF8BC34A); } return _v; } } @Deprecated public void showMessage(String _s) { Toast.makeText(getApplicationContext(), _s, Toast.LENGTH_SHORT).show(); } @Deprecated public int getLocationX(View _v) { int _location[] = new int[2]; _v.getLocationInWindow(_location); return _location[0]; } @Deprecated public int getLocationY(View _v) { int _location[] = new int[2]; _v.getLocationInWindow(_location); return _location[1]; } @Deprecated public int getRandom(int _min, int _max) { Random random = new Random(); return random.nextInt(_max - _min + 1) + _min; } @Deprecated public ArrayList<Double> getCheckedItemPositionsToArray(ListView _list) { ArrayList<Double> _result = new ArrayList<Double>(); SparseBooleanArray _arr = _list.getCheckedItemPositions(); for (int _iIdx = 0; _iIdx < _arr.size(); _iIdx++) { if (_arr.valueAt(_iIdx)) _result.add((double)_arr.keyAt(_iIdx)); } return _result; } @Deprecated public float getDip(int _input){ return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, _input, getResources().getDisplayMetrics()); } @Deprecated public int getDisplayWidthPixels(){ return getResources().getDisplayMetrics().widthPixels; } @Deprecated public int getDisplayHeightPixels(){ return getResources().getDisplayMetrics().heightPixels; } }Is there a way to fix it?
Im on oos 9.0.8 op5
Edit:Reinstalled from apkmirror
Register or Login with Google
Ok, found a way. For someone who wants to install for example 01-31 version on the latest Pie:
I managed to install an older version by replacing the OnePlusCamera.apk in system/priv-app/onepluscamera with an older apk. I also put an older OnePlusCameraService into priv-app/onepluscameraservice. So for example now I have the HQ option back. Then I again replaced those files from the Camera M magisk module and now I have 01-31 version working on latest Pie. Magisk module is not enabled.
Hullo, would you mind including links to the apks you used ? i ran in the same issues. Thanks
I don't remember what exactly I did, but I assume I used this version of the OnePlus camera https://www.apkmirror.com/apk/oneplu...-5-21-release/ because that was the latest one when 1-31 released.
As for OneplusCameraService it was probably https://www.apkmirror.com/apk/oneplu...-1-12-release/ for the same reason as above.
The CameraM files were probably from https://forum.xda-developers.com/one...9#post76322559.
I'm now on Android 10 and use the stock camera version, but I assume it should work the same.
I tried installing multiple versions and can't even get this module to show up in magisk. Anyone have any ideas?This module - as the description says - saves the stack trace of a crashing app and displays all crashes in a list so you don't have to look through a long logcat anymore. Additionally you get a notification on every crash (configurable) which already displays the most important information.
The app still packs many functionalities like the old module does, with a nice addition. These are the supported features.
- Search in crashed apps
- Search in stack trace
- Crash preview in notification
- Combination of same crashes / apps to avoid long repetetive lists
- Crash blacklist
- Quick actions to copy / share a stack trace
- Uploading to dogbin for convenient sharing.
Downloads
http://paphonb.xyz/android/apps/scoop/
Instructions
For unrooted/ADB users
1. Install ADB on your computer
2. Enable USB debugging on your phone and connect it to your computer
3. Install the app on your phone
4. Open a command prompt
5. Type the command below and press enter
adb shell pm grant xyz.paphonb.scoop android.permission.READ_LOGS
7. You should now see a notification that indicates that the app is running.
8. Go crash an app and it will show up
For rooted users:
1. Install and open the app
2. Grant root permission
3. You should now see a notification that indicates that the app is running.
4. Go crash an app and it will show up
XDA:DevDB Information
Scoop, App for all devices (see above for details)
Contributors
paphonb, MrWasdennnoch
Version Information
Status: Stable
Current Stable Version: 2.0.2
Stable Release Date: 2019-01-03
Created 2019-01-11
Last Updated 2019-01-11EdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
Xposed is a framework for modules that can change the behavior of the system and apps without touching any APKs. That's great because it means that modules can work for different versions and even ROMs without any changes (as long as the original code was not changed too much). It's also easy to undo. As all changes are done in the memory, you just need to deactivate the module and reboot to get your original system back. There are many other advantages, but here is just one more: Multiple modules can do changes to the same part of the system or app. With modified APKs, you to decide for one. No way to combine them, unless the author builds multiple APKs with different combinations.
- Low invasiveness. Based on Riru, so EdXposed no longer need to replace app_process, it is more difficult to detect.(due to some bugs of Magisk, it can still be detected by a few applications)
- Fully open-source and free. We are very concerned about your device security and user privacy, so we are fully open source with GPLv3 license.
- Easy recovered. Based on Magisk, just disable EdXposed in Magisk Manager, you can recover from brick.
- Fast. EdXposed use SandHook and YAHFA as the hook core to provide a faster experience than other cores.
- Fully compatible. The API that is exactly the same as the original Xposed is provided. In general, there is no need to make special adaption to EdXposed.
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Stable：Stable version after passing the test, suitable for general users, update slowly. Download Stable version in Magisk Manager's [Downloads] tab
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If you have any problems, please try to use the latest version of Canary channel, which may fix your problems.
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- All the translators: https://github.com/ElderDrivers/EdXposedManager (if you want to contribute more translations, Please submit Pull Requests to us)
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19I'm a well versed Java programmer and have previously learnt some bit of Android Programming from the 1st edition of the Big Nerd Ranch book. But, a lot of time has elapsed since my first reading, so my knowledge of Android Programming is kind of weak.
I would like to setup a study group of aspiring Android Developers who would like to participate via Google Hangouts.
I expect in the study group, that we will read paragraph-by-paragraph and note down important bits.
Having a study group helps in increased retention of study material. Thus this idea.
If you dont have the copy of Big Nerd Ranch Android Programming with you, I am more than willing to offer you a pdf copy.
If you are interested in joining my study group, lets call it "Catfish's Study Group" you need to be on the following timing everyday in a week except Sunday. Each session will be of 3 hours duration:
IST 9PM to 12AM
GMT 3:30PM to 6:30PM
ET 10:30AM to 1:30PM
PT 7:30AM to 10:30AM
Contact me via [email protected]
or my WhatsApp No. +91 8902265616
I plan on beginning the study sessions as soon as I find a few individuals.The LG-built Google Nexus 4 is powered by a 1.5 GHz quad-core Qualcomm Snapdragon S4 Pro processor, featuring four Krait cores and the class-leading Adreno 320 GPU. In addition to the fast processor, the Nexus 4 also packs 2 GB of RAM and either 8 or 16 GB of internal storage. The device also features a 4.7″ 720p display, delivering 320 ppi. Most importantly, the Nexus 4 is one of the two lead devices for Android 4.2, the revamped version of Jelly Bean. See full specs for the Nexus 4.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceTested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWell i have to access the getRxBytes(String iface) method of TrafficStats.
I want to make a wrapper to pass a name of the interface and get the RX and TX bytes of it.
Current public are
TrafficStats.getMobileRxBytes();
TrafficStats.getMobileTxBytes();
and
TrafficStats.getTotalRxBytes(); TrafficStats.getTotalTxBytes();
I need
TrafficStats.getRxBytes(String iface);
TrafficStats.getTxBytes(String iface);
i need a wrapper like
public long getInterfaceTxBytes(String interface) {
// hidden API getter
TrafficStats.getTxBytes(interface);
}Quote:
Originally Posted by alice131
need some information about xxxxxxx, any of you use it?
When i surfed on the internet about xxxxx and how to install it. I found xxxxxx. I installed it on my device. Also, I love the xxxxx the best live broadcasting app according to me.Mobile app development is slowly becoming a mainstream digital solution and the number of apps on the app stores keeping on increasing rapidly. Today number of businesses are coming up with the need to get mobile apps to build. For them, it poses a critical solution that can be very helpful in expanding their business. Today different technologies and frameworks have come up to meet the ever-changing business needs. The popularity of cross-platform app development is increasing too. However, there is always a point of debate when it comes to choosing the right platform for app development.General Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsTested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveWith PutMask, for the first time, you can obscure faces in videos with your smartphone automatically and manually, with very high efficiency,
to protect your privacy and the privacy of others in the media environment.
Whenever you need to obscure faces or anything else in any video, PutMask with its unique features will help you.
Why is PutMsak a unique solution in this field?
- Very high face detecting power:
PutMask is able to detect any faces, even a small square with dimensions of 10 by 10 pixels and at any angle (full face, half face). This feature is provided to you by PutMask for the first time at smartphone level.
- Two-way video processing:
PutMask can process videos in both directions and detect and obscure the faces that you want, which means that if you command PutMask to hide a face in any frame of your video, From the frame you set, PutMask will start processing video and face detection both in forward and backward direction at the same time (with FPS up to 300), which is also introduced at the smartphone level for the first time by PutMask!
How to use the face-track feature of PutMask
- Hiding Manually:
If you want to obscure something other than a face in a video, or if our app can't detect a face, you can easily obscure it manually by tracking it with your finger !
How to use the recording feature of PutMask
- Using Key Frame:
With key frame you can easily hide everything with smooth movement! In the latest version, a feature is included in the program that allows you to convert all types of filters to keyframe type.
How to use the key-frame feature of PutMask
- Edit Video Based On Frame Number:
We show you the number of every frame so you can edit the frames one by one with our tools. Also, with our tools you can move a frame in a video.
How to use the editing feature of PutMask
- Save The Work You've Done:
You can save the information of editing And whenever you want to change edits or resume unfinished work, you can recover that information as a project in PutMask.
How to use the export-draft feature of PutMask
- PutMask Security:
"Your security is our top priority" As a result, PutMask stores all information about your work only on your mobile phone, so no information is transferred from your phone. PutMask only needs access to read and write videos on your smartphone to open and save videos, but with your direct permission.
- Free & No Ads:
To keep your privacy as secure as possible, using the main features of PutMask is completely free and with No Ads. But you can help us by buying graphic characters in the app.
How can you help us?
You can visit our site for more information and learn how to use PutMask.
also you can always check some video samples we created with the application at our Twitter and YouTube accounts.
and if you want to try just :
In the end it's not that we want your comments, we actually NEED them.The Galaxy S III is the successor to Samsung's best-selling Galaxy S II. It has a bigger, 4.8" 720p display. It also is the first device to have a quad-core Exynos 4412 processor, with each core clocked at a maximum 1.4 GHz. It packs NFC, wireless charging capability, and the latest wireless radios. It ships with Samsung's Nature UX interface, which is the latest version of TouchWiz to date. It's available in 16, 32, and 64GB configurations. It's also available in pebble blue or marble white.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Galaxy S 4 is Samsung's flagship device for 2013. The S 4 ups the ante of its predecessor thanks to a 5" 1080p Super AMOLED display (PenTile 441 ppi), a pseudo octa-core Samsung Exynos 5410 or quad-core Qualcomm Snapdragon 600 (depending on region), 2 gigs of RAM, up to 64 gigs of storage, LTE connectivity, and a 2600 mAh battery. Furthermore, the device features additional features such as floating touch and a 13 MP shooter featuring a revamped camera interface. All this brute force is encased in 7.9 mm of Samsung's well known Hyperglaze plastic finish.The Samsung Galaxy Grand Prime is a mid-range Android smartphone, released by Samsung in September 2014. It features a 5" TFT display, with a resolution of 540 x 960. It's powered by a 1.2GHz quad-core Qualcomm Snapdragon 410 processor and 1GB of RAM. Internal storage comes in at 8GB, with a further 64GB available via microSD. Other features include an 8MP camera, optional dual-SIM and 2600mAh battery.Hello. Sorry I forgot to report my device, it is s8 exynos just in case. But 1.1.1 fixed the issue. Works perfect! Thanks
Can zram be the issue?
Register or Login with Google
To those of you getting freezes, I have identified the cause to be related to ZRAM. I will push an update today that will remove ZRAM tweaking from the script.
The reason I believe this is happening is because ktweak tries to resize the ZRAM. That requires all data that is currently in ZRAM to decompress and enter your main memory unit. If we run out of memory during this process, we will freeze.
The solution is to not adjust the zram size when using ktweak. Sorry for the inconveniences that may have been caused. I'll get straight to fixing this as soon as possible.
How can I root vivo v9 1723?
I tried many methods but nothing work for me.
Please helpXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceHey Guys
Frija is a new tool (successor of now depreciated tool SamFirm) which allows users to download latest firmware for their device which can be flashed with Odin.
Frija can download Firmware for any Samsung Devices at High Speed.
Auto mode detects any Samsung Phone Model and CSC and finds all the required information directly from Samsung Server.
Frija downloads firmware directly from Samsung FUS (Firmware Update Server) without any third party websites being involved. It can pause/resume firmware downloads, even after network interruption, or app restart (if download was interrupted).
Frija comes with built in Support form, through which you can reach out to developer about any issues or bugs. Frija has built in App Updater, whenever new release of Frija is available users will be able to update to latest version of the app.
Frija does not have any Background or Startup services, which some users might be concerned about.
It also comes with Night theme, for those who prefer Night Mode on the app
Fun fact about Frija: Frija is named after wife of Odin who can see future (In Norse Mythology) can download latest firmwares which can be flashed using Odin which uses Heimdall (A protocol that connects to a mobile device over USB) and Loke (low-level software running on the device). It kinda added a missing piece to the naming convention Samsung has.
This tool was created by wssyncmldm with contribution from CrazyApe and eragon5779. Devs receive all the support message directly and they are actively working on the app to fix any bugs or issue.
Updates:
NOTE: Auto Update has bug in version 1.1.1 and will need to manually update by using the new zip file posted today
Changelog:
1.1.2
• Improved firmware search.
• Fixed issue where firmware was not available for valid Device and CSC.
• Updated some message strings displayed to user
1.3.0
• Fixed decryption issue of enc2 type encrypted firmware
• Auto updater finally fixed, will not require downloading update manually after this update
1.4.1
• Added error message if Microsoft Redist packages are missing
• New Settings option
• Removed support message feature and added new Issue Tracker URL
• Overall UI improvement
• Added setting to disable CRC check
1.4.2
• Improved Firmware search method
• Added support for Dual Sim model
• Added Frija sage number in About Page
• Load Samsung dll libraries in efficient way
• Fixed sub text for on/off in Settings PageCan we consider android development as career? Is it have good scope /future in terms of jobs?
Sent from my GT-I9300 using xda premium
In England I've recently been looking for IT based roles and had a look at android developer jobs. To my surprise there are many that I found! The only down side is, is that a lot of them wanted you to know how to develop for more than one platform, which unless I'm mistaken I've not heard of a tremendous amount of people that happen to be able to do both at the same level. It might be a while before they realise this, or I could be completely wrong and there are many, many people who are able to develop for multiple platforms like Android/IOS.
I've also seen a lot of freelance work being offered for not just the Android platform but all other major platforms. So overall I'd say if you are good enough of a developer then you could definitely get a decent wage from being an android developer, either in a permanent role, or as a freelancer.
I work for a software development company in UK. We have different development teams for different platforms. I guess, in ads they ask for work skills in various platforms, just to be able to substitute a colleague, just in case. Big companies usually devide teams, from my experience.
In the current scenario, If you have knowledge of any programming language then you must get a good salary package, but the demand of android developer is much more in the market because the android phone user are more in the market and company want to develop versatile android app.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
I just saw these and I'm wondering if anyone has tried them yet. I like the $30 price tag. I currently used a pair of Bluetooth headphones, but there is quite a bit of last when watching videos; it's annoying to see a person say something and then finally hear it. Reminds me to much of the old English dubbed foreign movies. I know we still have the headphone jack, but I'm intrigued to try the USB C as well.Vanced is a well known modded version of YouTube with many features such as adblocking and background playback, the full list can be found below:
The one and only, official Vanced website There are other sites that are fake, contain ads (possibly even malware) and have older versions. Always check from the official site or from here at XDA.
Read the first and second post before asking/posting anything.
Features:
- YouTube Vanced IS NOT YouTube Premium
- Blocks all YouTube ADs (some options are togglable)
- Background playback feature
- Force VP9(or HDR) or vice versa
- Override Max Resolution
- Pinch to Zoom on all devices
- Casting togglable (can be forced off)
- Togglable Theme (White/Dark/Black)
- PiP (Oreo Only)
- Video window new or old style
- Repeat video feature
- Preffered Resolution & Speed feature
- Swipe controls for Volume and Brightness
- New Logo by @Logan
Downloads:
Vanced website (GDrive) (All versions)
Alternative Mirrors: AFH (rarely updated) Mediafire (only the latest)
Since YouTube v14.41.52, Google has moved to split APKs. The Android package installer doesn't support split apks yet, so we are using SAI as an Alternative apk installer.
Installation Instructions:
Non-Root:
Steps:
1. Download and Install microG Vanced (If you don't install microG, YouTube will crash on starup)
2. Download latest version of YouTube Vanced
3. Install Split APKs Installer (SAI) from Google Playstore
4. Open Split APKs Installer (SAI) -> Install APKs -> Select the downloaded Vanced apks -> Install
5. Done! Enjoy!
For MIUI users, follow these instructions -> How to install v15 on MIUI
Root:
Since YouTube v14.41.52 Google has moved to the new APK Signature Scheme v3 and because of that it's impossible to mod system apps without disabling the android's system wide signature verification.
THIS IS HIGHLY NOT RECOMMENDED. DO NOT DO THIS UNTLESS YOU DON'T REALLY CARE ABOUT SECURITY.
Steps:
1. Disable apk signature verification. (Don't ask us how to do it. we don't recommend doing it)
2. Download latest version of YouTube Vanced
3. Install Split APKs Installer (SAI) from Google Playstore
4. Open Split APKs Installer (SAI) -> Install APKs -> Select the downloaded Vanced apks -> Install
5. Done! Enjoy!
Magisk:
As we are disabling signature verfication, root version are installed to /data/app and /system/app. So magisk module is useless now and makes nonsense to us.
Therefore, Magisk version is discontinued.
Known bugs:
- What bugs? Never heard of them.
- Buying things within the nonroot version of the app causes crash. Likely due to MicroG but tbh, it's better this way for your security. Just use original youtube to buy the stuff you want.
- Ok, not really a bug but since people don't read it's experimental, ExoPlayer V2 might be causing crashes when coming back from background playback on some devices.
- Non-Root stuck on I Agree Page? -> https://forum.xda-developers.com/sho...postcount=9772
Old version info:
Installation Instructions:NB!Explanation of the (Ad)Vanced options of the official installer:
Non-root: Install the apk normally and install microg found in the download links above.
Root:
- Download the official installer found in downloads above
- Select a suitable apk for your device (check your architecture using an app such as CPU-Z) and the secondary theme you want to. (All apks include the white theme)
- Place the downloaded apk into /sdcard/Downloads or inside the installation zip
- Uninstall all YouTube updates and disable auto-update in the playstore (If you are able to completely uninstall the youtube app do so)
- Flash the installer in TWRP
- Profit!
Magisk:
There are a total of 3 ways to install the module via magisk.
The first and most simple way is to install it via the magisk repo and it is the recommended way.
The second way is to place "Install via magisk.plz" or enable magisk install in the settings.sh from the root installer.
The third and final way is to use the magisk modules provided on the Download Mirrors.
Uninstall all YouTube updates and disable auto-update in the playstore (If you are able to completely uninstall the youtube app do so). Updated app will override the app installed in the system partition so even if the mod installation succeeds, you will not see it.
Vanced makes use of both a settings.sh and plz files as parameters while installing.
Using the settings.sh
- SEARCHFOLDER - Path where to search for iYTBP Apk's (must be a subfolder on sdcard!)
- MAGINSTALL - Use magisk installation instead of root installation. (Possible Values: YES/NO)
- DETACH - Detach Youtube from playstore to disable update notifications. (Possible Values: YES/NO)
- ATTACH - Attach Youtube to playstore if it was previously detached. (Possible Values: YES/NO)
- UNINSTALL - Completely uninstall iYTBP: root version, magisk module and detach module (Possible Values: YES/NO)
Using the plz files (Use only the ones you want)
(All should be placed in /sdcard/Download/)
- iYTBP_install_via_magisk.plz - Use magisk installation instead of root installation
- iYTBP_detach_from_playstore.plz - Detach Youtube from playstore to disable update notifications.
- iYTBP_attach_to_playstore.plz - Attach Youtube to playstore if it was previously detached.
- iYTBP_uninstall.plz - Completely uninstall iYTBP: root version, magisk module and detach module.
Thread Managed by @ZaneZam, @Razerman, @KevinX8 and @laura almeidaMore
12 posts
Join Date:Joined:Mar 2019
Less
Great call quality on the t285 (normal calls)
Review for normal call function, not speaker phone.
Call quality is really good, the main phone speaker is very large, it needs to be turned down to be less audible to others and to hold phone closer to ear (ok, tablet, but i use it as phone). Friends and family hear me really very well. Because the tablet is bigger and heavier than a real phone, the speakers and mic can be bigger I guess. phone calls are very functional on this device, as good as any real phone i have used, only it looks a bit daft due to 7" size.
(at last a general consumer question i can actually answer lol!)FAQ. Q1) Does the build work on xyz?
A1) I have no idea. I only have the SM-P550. If you try this code on the SM-T550, the X-axis will be reversed. I may look at the code and put in a ifdef statement so that depending on the model number, it can handle the X-axis correctly so one image can possibly work on 2 tablets.
One user reported that this rom causes a boot loop on the SM-P555. So if you have this tablet and want to try this rom, just be prepared to revert your changes. According to this post by virsys https://forum.xda-developers.com/gal...3#post78327523
"You have to use a different kernel config for the SM-T555. The versions here are compiled for the SM-T550 variant and will never work on a SM-T555 properly."
With the above, I can only assume that also applies to the P550 and P555. Q2) Application xyz doesnt' work. Can you fix it?
A2) I only fix what I use. If you use app xyz and it doesn't work, then go back to the last rom that worked for you. Q3) My tablet hangs or crashes with 16.0. This build is slow and buggy. Can you fix it?
A3) Go back to the last working stable rom for you. This is a work in progress and will have bugs and frequent changes. Q4) Do you plan to update the rom?
A4) Yes as long as I have high speed Internet, I wil try to release the rom monthly to incorporate the security patches. Q5) Do you plan to add S-pen?
A5) I don't use the S-pen, but if the code is easy to add and you can tell me where and how to add, I can try. You must provide a github repo and example code on how to add it. I will not answer any requests for S-pen support unless you can show code and repos. If it's too complex, I won't do it and since this is all open source, you are welcome to add it yourself, just like how I fixed the inverted X-axis. Q6) Will there be a 17.1 release?
A6) Virsys' github has some 17.1 repos so I will try at some point in the future. No promises. I already built a beta SM-T350, the little brother to the T550, and it took a long time to work out all the bugs in 17.1. 16.0 should be more stable than 17.1 at this point in time. Q7) How did you fix the inverted X-axis.
A7) For those who don't know, some of the T550 ROMs do boot and work on the P550, but without the S-pen. HOWEVER, the X-axis is reversed. You can read here on my initial testing. https://forum.xda-developers.com/sho...&postcount=108
After some research, it wasn't that hard, but finding the right touchscreen driver and learning how the input system worked took a couple of days. Basically, you look at the kernel defconfig file and look for the CONFIG_TOUCHSCREEN setting. That will tell you what driver it's using.
kernel/samsung/msm8916/arch/arm/configs/msm8916_sec_gt510wifi_eur_defconfig
CONFIG_TOUCHSCREEN_ATMEL_MXT1664T=y
Then you look in the kernel/samsung/msm8916/drivers/input/touchscreen directory to find the correct driver.
The screen resolution of the P550 is 1024x768. For some reason, the current code thinks its 1024x1024 below. 1024x4=4096. It's numbered 0 to 4095. So the ABS_MT_POSITION_X is 4095.
Code:
$ adb shell
gt510wifi:/ $ getevent -lp /dev/input/event1
add device 1: /dev/input/event1
name: "sec_touchscreen"
events:
KEY (0001): KEY_BACK 00fb 00fd 00fe
BTN_TOOL_FINGER BTN_TOUCH
ABS (0003): ABS_MT_SLOT : value 0, min 0, max 9, fuzz 0, flat 0, resolution 0
ABS_MT_TOUCH_MAJOR : value 0, min 0, max 255, fuzz 0, flat 0, resolution 0
ABS_MT_TOUCH_MINOR : value 0, min 0, max 255, fuzz 0, flat 0, resolution 0
ABS_MT_POSITION_X : value 0, min 0, max 4095, fuzz 0, flat 0, resolution 0
ABS_MT_POSITION_Y : value 0, min 0, max 4095, fuzz 0, flat 0, resolution 0
ABS_MT_TRACKING_ID : value 0, min 0, max 65535, fuzz 0, flat 0, resolution 0
003e : value 0, min 0, max 1, fuzz 0, flat 0, resolution 0
LED (0011): LED_MISC
input props:
INPUT_PROP_DIRECT
gt510wifi:/ $
The code to fix the inverted X-axis is easy. It's one line. Just 4095 minus the current x-axis position. However, if I can fix the code so it recognizes the tablet correctly as 1024x768, then 4095 changes to 3071 (768 x 4 = 3072).
Code:
project kernel/samsung/msm8916/
diff --git a/drivers/input/touchscreen/mxt_t/mxtt.c b/drivers/input/touchscreen/mxt_t/mxtt.c
index 2e0a3fa0fa7..39e8eccabc9 100644
--- a/drivers/input/touchscreen/mxt_t/mxtt.c
+++ b/drivers/input/touchscreen/mxt_t/mxtt.c
@@ -671,7 +671,7 @@ static void mxt_report_input_data(struct mxt_data *data)
input_mt_report_slot_state(data->input_dev,
MT_TOOL_FINGER, true);
input_report_abs(data->input_dev, ABS_MT_POSITION_X,
- data->fingers[i].x);
+ 4095-data->fingers[i].x);
input_report_abs(data->input_dev, ABS_MT_POSITION_Y,
data->fingers[i].y);More
3 posts
Join Date:Joined:Nov 2019
Less
iOS is the most fun platform for Mobile Devices and people are crazy about iPhone. So is the case with IOS and iPhone Application Development. With a huge list of features and one of the best App Stores available, this device is the perfect companion for any Individual or Business User. iPhone App Development is always at the core whenever a business or an enterprise formulates its mobile strategy. For More Information visit - aalpha.net/* * Your warranty is now void. * * I am not responsible for bricked devices, dead SD cards, * thermonuclear war, or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at me for messing up your device, I will laugh at you. * */
Resurrection Remix the ROM has been based on LineageOS, SlimRoms, Omni and original Remix ROM builds, this creates an awesome
combination of performance, customization, power and the most new features, brought directly to your Device.
Many things that in previous versions were tweaked with mods, are now included by default in the ROM so, please enjoy!
Special thanks to, the LineageOS team, Omni team , SlimRoms and of course to all the supporters.
Clean flash (RECOMMENDED IF COMING FROM ANOTHER ROM):
INSTRUCTIONS
*Make sure you have the latest custom recovery installed(TWRP is the preferred recovery). *Download the latest Resurrection Remix Rom & the latest GApps package. *Boot into recovery. *Perform a FULL factory wipe and wipe/system and dalvik cache as a precaution. *If you are coming from stock OS you may need to format internal storage *Flash ResurrectionRemix Rom. *Flash Google Apps package(Optional). *Flash Magisk Root(Optional). *First boot may take up to 5 minutes.
For OTA
*Simply open the updates app through RR tools> updates *Check for new OTA if you havent already *Tap download button , and follow the instructions. *Let the updater do its thing
OR
*Boot to recovery and make a backup *Flash RROS zip then reboot to TWRP *Flash Magisk and reboot to system *Enjoy
LineageOs Team
AICP
Crdroid
AOSIP
DU
Xtended
Evolution X
Bliss
Omni Team
Pixel Experience
Lazy Kernel (@ederekun)
And Of Course To All The Supporters, Donators And Users
Join our Telegram channel : https://t.me/ResurrectionRemixChannel
There is also a donate version which you can purchase to show appreciation.
After downloading the Catlog app, go to the app settings, and change the log level to Debug.
Clear all previous logs and take the exact steps to produce the error you are receiving. As soon as you receive the error (probably a force close), go straight into Catlog and stop the log recording.
Copy and paste the entire log either to Hastebin or Pastebin
Save the log, and copy and paste the link into the thread with a brief description of the error.
XDA:DevDB Information
Resurrection Remix, ROM for the OnePlus 5/ 5T, ROM for the OnePlus 5
Contributors
Ledrock, akhilnarang, varund7726, enesykaya, ederekun
Source Code: https://github.com/ResurrectionRemix/
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
ROM Firmware Required: Already Included (OOS10.0.0 Hotfix)
Based On: LOS
Version Information
Status: Stable
Current Stable Version: 8.6.1
Stable Release Date: 2020-09-21
Created 2020-09-21
Last Updated 2020-10-18I noticed that before using the Disable_verity.zip, the device would boot loop after ~5 seconds. You can force into TWRP and get the failed boot dmesg (it's in /sys/fs/pstore/) and see that boot is failing due to AVB. After flashing the Disable_verity.zip, the boot loop was immediate (less than 1 second) which indicates boot.img corruption.
First, you can use TWRP to flash boot images. Push the boot image to the device (renamed to <something>.img) and use Install->Image. Putting the stock boot image back returns to the 5 second boot loop. Then I pushed the stock boot image to another device running MagiskManager and used Magisk to patch the boot image. Use TWRP to flash it to the Palm, and it works.
So perhaps the Disable_verity.zip script does not always work, in particular on AOSP 10. I am currently running Phh latest Android 10 (arm64 A-only with Android Go) using the above method.Tap, Tap is currently in beta, and may be slightly buggy. Stay tuned for new features and bug fixes. If you'd like to report a bug or suggest a feature, you can do so in this thread or on the GitHub.
Screenshots:
Example video, showing launching the camera on double tap
Changelog for latest version (0.9 Beta):
- Added new setup wizard, which allows easier setup of gesture (sensitivity, model) and battery optimisation disabling
- Added three new actions: Dismiss Alarm/Timer, Snooze Alarm and Alt Tab (switch to last app)
- Added three new gates: Alarm/Timer going off, Lock screen showing and Lock screen not showing
- Improved model picking based on screen size (for now). Models have also been renamed based on size rather than model to ease confusion
- Added "No Gyroscope" detection, and require accelerometer to install
- Split services is now enabled by default for new users
- Split out gesture requiring actions (currently just hamburger) into their own accessibility service, to allow use of other actions without interfering with apps that change behaviour with gesture accessibility services running
- Improved bottom sheet behaviour using material-dialogs
Version 0.9 Beta
GitHub:
https://github.com/KieronQuinn/TapTaphello to all Users - I have Meizu C9 that have all language in the system lang list but in this list not have Hebrew . Now if i install morelocal to the system I have Hebrew and all Good but when I restart the device the Hebrew is Goon and I need to enter to the more local again and choose again the Hebrew from the list now I need help to change the system file that containing the language list in Samsung model I know how to do it But in this google Operating system I don't know ware is the file that are contain this list if any body know how to change and add more country to this list I be grateful I add a 3 picture to show what I mean thank you to all have a nice day
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Moto G7 Play is a 5.7" phone with a 720 x 1512p display. The Snapdragon 632 is paired with 2GB of RAM and 32GB of storage. The main camera is 13MP and the selfie camera is 8MP. The battery has a 3000mAh capacity.As you can see it is tabbed. Swiping from the left will expand the contacts. It is absolutely simple to flip back and forth between conversations. However while HelloSMS still works, their MMS cloud based solution has been turned off and no longer working. Texting works but MMS does not.
After all of these years, I've been dealing with HelloSMS with no MMS simply because everything else pales in comparison with this tabbed design.
How much would a tabbed SMS app clone be to make or would anyone be willing to jump in where HelloSMS left off?General Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsThe Redmi Note 9S / Note 9 Pro (Indian Model) is a 6.67" phone with a 1080x2400p resolution display. The Qualcomm SM7125 Snapdragon 720G chipset is paired with 4/6GB of RAM and 64/128GB of storage. The main camera is 48+8+5+2MP and the selfie camera is 16MP. The battery has a 5020mAh capacity.Finally, you have decided what your product is going to look like and how you want your user to experience it. If you ever wanted to know what is UI UX design all about? Then this is the simplest way to understand them. The UI also called the user interface is responsible for giving the important pointers to the user suggesting the next move. The UX also is known as the user experience gives the user a good experience after following the pointers. Well, this is for the layman to understand the difference between the UI vs UX. ( delimp.com/what-is-ui-vs-ux-design-and-the-difference )
Why Should You Choose Minimalistic UI Design for Your Mobile App?
As soon as you install an app and open it for the first time, what is the first thing that instantly catches your attention? Well, for many out there, it has to be its design. If an app design is intuitive, it is certain to enamor the user and next they would focus on the features. However, if an app is highly-features, but has a boring or complex design, then the users are certain to uninstall it soon enough.
The “UI” in UI design stands for “user interface.” The user interface is the graphical layout of the application. “UX” stands for “user experience.” A user’s experience of the app is determined by how they interact with it.
UX design introduces to the term “user experience design”, while UI stands for “user interface design”.
On the most basic level, UI is built up of all the elements that allow someone to communicate with a product or service. UX, on the other hand, is what the individual communicating with that product or service gets away from the entire experience.
If you want to understand the difference between UI and UX, I advise you to read the blog articles gapsystudio.com/blog/ui-vs-ux-design/. The article The difference between UI and UX design describes each of the terms in detail.
Mobile app design services include a user interface (UI) and user experience (UX) designing. Designer create the overall style of the app, including logo, colors, fonts, and other graphic elements. Long story short ui/ux design services does everything to make the user comfortable.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceTo power up, you consume Red Bull. But your phone just needs its adaptive fast charger. Rate this thread to express how quickly the Samsung Galaxy Tab A series can charge. A higher rating indicates that it charges extremely fast.
Then, drop a comment if you have anything to add!Hey Guys! Developer of Energy Bar/Ring/Notch here! Just done developing a cool little App which basically ports the iOS 14's indicators for camera and microphone access, to Android, all the way down to Android 7.0!
Did you know that once you grant access to your phone's camera or microphone to any third-party App, they can use it silently in the background?
And do you feel envious about the new iOS 14's privacy feature - shows an indicator whenever camera or microphone is accessed?
Presenting Access Dots for Android, supporting all the way down to Android 7.0!
Access Dots, adds the same iOS 14 style indicators (few pixels light up as a dot) to the top right (default) corner of your screen whenever any third-party App uses your phone's camera or microphone.
Configuring the App is as simple as enabling the Access Dots Accessibility Service. By default the App is configured to show iOS 14 style colored access dots - green for camera access, orange for microphone access. The App itself does NOT request for access to camera or microphone.
While it's free to change the Access Dots' color to whatever you want, consider making a donation to support the development and have access to few extra configurations like changing the 'size' of the dot or its location on the screen.
Alright, excited to try? ... It should be up on Play Store anytime now... I know, I know, I have been super excited myself that I made this heads up post for you guys! Will update as soon as it's live!
UDDATE:
Note: Please make sure the App is whitelisted under any kind of optimization setting your device has, if the App is killed from background by the System, you may have to restart phone to get the Access Dots active again.Google Camera Mod for OnePlus 5 (cheeseburger) and 5T (dumpling)
1. Camera HAL Confusion
a. Camera HAL Basics
First, let's understand what a camera HAL is. A camera HAL is what allows a ROM to "talk to" the camera hardware; without it, the camera would be non-functional. Think of the camera HAL as the steering wheel and pedals of a car. The steering wheel/pedals allow for control of the internal components of the vehicle by providing an external interface for the driver (the ROM) to make use of the internal components.
At present, the source code of the camera HAL included in OxygenOS has not been released by OnePlus. Instead, OnePlus has compiled that source code and shipped it on the OnePlus 5/5T as a BLOB (Binary Large OBject). This has been a major setback for custom ROM developers because having access to the camera HAL source would make porting the stock OnePlus Camera to a custom ROM a much easier endeavour.
b. Camera HAL, Google Camera Mod and Root Requirements
The latest releases of the mod require you to be rooted (as you mandatorily need to install DotFix, which contains a modified camera HAL compatible with the latest releases) or the pictures that you click will come out with pink/purple/green tint on them, or will have a dotted pattern on them, or the camera might not work at all. So if you're rooted, then you're good to go. However, if you're unrooted (and prefer staying that way), then you can still use an specific version of the mod which works fine (with a few issues/restrictions, of course). All the downloads for rooted as well as non-rooted users are in the next post in the thread (post # 2).
2. Known Bugs and Workarounds
[Unrooted Only] Dotted Pattern Overlay
- Issue - A dotted pattern overlay is visible in the HDR+ pictures (when completely zoomed in)
- Resolution - You have to root, install DotFix as well as the recommended version for rooted users from point 3
[Unrooted Only] Front Camera HDR+/Portrait Mode Non Operational/Captures Distorted Pink/Purple/Green Lines
- Issue - Front camera captures distorted pink/purple/green lines while using HDR+ or Portrait Mode
- Resolution - You have to root, install DotFix as well as the recommended version for rooted users from point 3
[Rooted Only] HDR+ Front Camera Pictures Restricted to 4.0 Megapixels
- Issue - HDR+ pictures that are clicked with the front camera are restricted to 4.0 megapixels, even though the maximum resolution of 15.9 megapixels is selected for the front camera under settings
- Resolution - None available yet; details of why this is the case are mentioned in this post
[Both] Zero Shutter Lag (ZSL) Non Operational
[Both] DotFix Magisk Module Incompatible with Audio Mods
- Issue - Some audio mods interfere with the DotFix Magisk module due to which they don't work as intended
- Resolution - Uninstall the audio mods or try setting SELinux to permissive using SELinux Switch from this post of mine.
More troubleshooting tips and tricks are present here and here. You can also read the Telegram channel's FAQ here.
3. Important Notes and Links
a. Important Notes
- Everytime you change a settings, make sure you force-close and swipe it away from recents, and then restart the app so that the new settings are applied correctly. A sure shot way to make sure the settings have applied is to restart your phone.
b. Links
- Complete list of all Google Camera Mod ports: Link
- Capturing a logcat if you're facing a crash when opening/using the Google Camera Mod: Link
- Useful files and tools: Link
- Photo comparison samples: Link
4. Post Update Information and Credits
a. Post Update Information
Last Updated: 14th October 2020
b. Credits
- @B-S-G, for doing the initial port and bring us Google Camera's HDR+ to multiple devices
- @Arnova8G2, for all the work he's done and still continues to do to bring us these ports
- @defcomg, for the front camera Portrait Mode fix
- @MrAimenify, for fixing viewfinder lag and updating libraries
- @Urnyx05, for creating his own versions of the mod for everyone on OP5/T
- @Nikita, for creating his own versions of the mod for everyone on OP5/T
- @S4turno, for unknowingly inspiring me to make this post, hosting all the Google Camera Mod ports on his server, and for helping the community with updated information regarding the mod
- @Zackptg5, for the MMT-Ex Template
- @Adam Conway, for this great XDA article on how cameras work in custom ROMs
- @Rohit jat, for originally creating the thread and Telegram discussion group
- All of you guys for viewing this postXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceQuote:
Originally Posted by alice131
need some information about xxxxxxx, any of you use it?
When i surfed on the internet about xxxxx and how to install it. I found xxxxxx. I installed it on my device. Also, I love the xxxxx the best live broadcasting app according to me.I'm working on a global audio tuning system for Android similar to Viper4Android and JamesDSP, but allowing the User to program and create their own audio filters on the fly. In order to do so I need to link against libLLVM.so which is one of the Android Platform Libraries which doesn't seem to be exposed via the NDK (https://android.googlesource.com/pla...external/llvm/).
My assumption is that I will need to build that library from AOSP Source independent of my project and then link against my locally built copy. Once compilation of my project is complete I don't need to distribute my locally built libLLVM.so file since I can leverage the one existing on the actual device.
I just wanted to see if anyone has any experience doing this, or if I'm going off the deep end.
Thanks!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Service- zip version error
Just delete compatibility.zip in the rom zip.
- TWRP error 7
This error is related to the previous one, just redownload the ROM and delete compatibility.zip again but don't use WinRAR to do it, please use other utility (ex 7-zip) problem solved.
Hope this guide helpsQuote:
Originally Posted by mitchell1234
I did wiping cache and data (Format Data, where you have to answer with 'yes') in TWRP, then reboot to Bootloader, then unlock -> red boot error. With the error, the only thing that can be done is to return to Bootloader and unlock, after which the system boots to TWRP briefly for erase. Then, I returned to TWRP, wipe again, returned to Bootloader, flash TWRP again, relock -> error. I tried this five times. Also, I tried wiping/formatting data only (without wiping cache), resulting in the same boot error after relock. I redownloaded the signed TWRP from Codeworkx, but with the same result. Perhaps my Oneplus 5 is just slightly different (I have the 8 GB - 128 GB version).
The instructions for locking on Q are a bit different, because in Q you are encrypted on first boot. So, if you lock, your encryption key is destroyed. That's why I recommended that you forget about the rom and just install TWRP on unlocked bootloader. Then relock and see if you can boot into TWRP. If you
can, then you are all set: flash Jaguar.
My Oneplus 5 is 128 gb/8gb, so, it doesn't make any difference here.
Also, I am not clear if after relocking you can't boot into TWRP, Rom or both, because the rom should boot straight on locked bootloader. The only way it won't boot is, if you ran Magisk, which modifies kernel or used a different kernel. Perhaps, you have Magisk survival script that automatically runs Magisk without you noticing or you flashed a no-verity script.
So, remember, format everything on unlocked bootloader, flash TWRP and relock. If you can boot into TWRP on locked bootloader, you are all set: just flash the rom and boot.
P.S. Make sure you are flashing TWRP onto recovery partition: fastboot flash recovery 'name of your file'logcat below of tablet in portrait mode, then rotate to 90, orientation - 0 (0), 1 (90), 2 (180), 3 (270)
Line 3681 of InputReader.cpp outputs the log below so I'm in the right module/program.
I InputReader: Reconfiguring input devices. changes=0x00000004
I InputReader: Device reconfigured: id=6, name='input_mt_wrapper', size 768x1024, orientation 0, mode 4, display id 0
I InputReader: Device reconfigured: id=7, name='sec_touchscreen', size 768x1024, orientation 1, mode 1, display id 0
I InputReader: Device reconfigured: id=10, name='sec_e-pen', size 768x1024, orientation 0, mode 4, display id 0
As you can see, sec_touchscreen knows about the 90 rotation (orientation 1) and touchscreen works properly, but not the sec_e-pen driver. A simple hack would be to make the orientation of sec_e-pen = sec_touchscreen everytime there is a rotation change, but where in the code? However, I don't know if that's enough to make the spen work properly in 90, 180 and 270 mode.
Need to look around the code some more and see if the above hack is the correct way to do it or not.
# sec_e-pen.idc driver needed so tablet knows its orientation aware and can work in 90, 180 and 270 mode.
PRODUCT_COPY_FILES += \
vendor/samsung/gt5note10wifi/proprietary/sec_e-pen.idc:$(TARGET_COPY_OUT_VENDOR)/usr/idc/sec_e-pen.idc
I built a 17.1 image, but it's randomly reboots anywhere from 5 to 35 minutes of usage. And this isn't even using the s-pen, all it is doing is playing a youtube video using newpipe and youtube vanced. I'm not even touching the tablet. Unfortunately, when it crashes, there are no logcat messages. With the exact same 2 apps, they run fine on other non P550 tablets.
I tried building a rom with the s-pen driver and without. The s-pen driver works in 0, 90, 180, 270, but the builds are unstable. The no s-pen driver is also unstable. I also seen the tablet reboot when connected via usb so it is just not playing videos.
I also tried aala27's RR 10 build and it also randomly reboots playing videos.
I don't know where the problem lies without a logcat. I suspect it's in the kernel changes with possibly one of the parameters in common_defconfig?
I don't know what changes aala27 did so I will have to wait until he responds.
PS. I also tried building 16.0 today, but again the build boot loops as before. So right now, I have no stable working image with s-pen support. I'm not releasing these builds until the random reboots are fixed, which may be never.
I built a 17.1 image, but it's randomly reboots anywhere from 5 to 35 minutes of usage. And this isn't even using the s-pen, all it is doing is playing a youtube video using newpipe and youtube vanced. I'm not even touching the tablet. Unfortunately, when it crashes, there are no logcat messages. With the exact same 2 apps, they run fine on other non P550 tablets.
I tried building a rom with the s-pen driver and without. The s-pen driver works in 0, 90, 180, 270, but the builds are unstable. The no s-pen driver is also unstable. I also seen the tablet reboot when connected via usb so it is just not playing videos.
I also tried aala27's RR 10 build and it also randomly reboots playing videos.
I don't know where the problem lies without a logcat. I suspect it's in the kernel changes with possibly one of the parameters in common_defconfig?
I don't know what changes aala27 did so I will have to wait until he responds.
PS. I also tried building 16.0 today, but again the build boot loops as before. So right now, I have no stable working image with s-pen support. I'm not releasing these builds until the random reboots are fixed, which may be never.
My apologies for taking so long to respond. I do not experience reboots on the roms that I have created. Not sure what the issue seems to be there. Are you also experiencing reboots on the RR 9.0 rom as well?
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThis forum is for all of your questions about the Amazon 7" Kindle Fire HD, 8.9" Kindle Fire HD, Kindle Fire 2. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.samsung tab a 2020 SM-T307U
looking if there is a root or if it is expected eventually..
i have 14 days to switch to a different tablet if root is not ever going to be available
Register or Login with GoogleXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceGeneral Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsSo, first of all, at first I thought that it is impossible to rank an app with just a few keyword installs. But, I knew that it would't hurt to try them. So I just signed up at this site: KeyApp.top - Android keywords promotion and ordered my first 100 installs pack(50 daily for 2 days). It is good to know that the installs from this website are genuine US installs, and the price is very low ($0.09per install and 0.15$ for keyword install), but it worth because the website has a self-serve paltform so you can easily create your campaign . So after I bought these installs, had to wait 2 days, Google updates their ranking in this time, and suddenly saw that my app jumped from ranking 99 to 19. The miracle didn't start here. After one month, I checked the ranking of the app, and the ranking remained the same.
Link: KeyApp.top - keywords installs promotion
They provide installs from many Geolocation distribution (30 countries): US , GB , DE , IN , CA , AU , BR...etc;
You can easily boost your keyword ranks on Google Play to top You can see your app on first positions for popular keywords and get more organic traffic to your app. 1-2 days and you will see the result!
I tried their service in many of my Games and i could see result, I targeted via keyword and i got pretty good result.
If you’re new to app promotion with paid incentive installs check out this strategy: day 1 - 300 keyword installs, day 2 - 350 keyword installs, day 3 - 400 keyword installs. This will be enough for you to see the result and significantly go up in rank. Then you can adjust your daily quantity and keep boosting further as top positions need more installs.
If you guys are interested, i'll be more than happy to share with you more strategies and case studies to rank your apps using Keywords install, getting your app from 250 rank to 6th,3rd in the search list depending on the keyword in less than one week.In the process of customization, I'm in the need of a (music) application to show streaming information about tracks playing over Bluetooth.
Obviously, I can use whatever app to play music locally saved on the autoradio itself, or to stream it online, e.g. Spotify, but I'd like to find an alternative to (at least) show what I'm playing on the phone and streaming on the car via Bluetooth.
Does anybody have any idea or tip?This tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- Your QFIL firehose (emmc_firehose_8***.mbn) You can get it from here: https://github.com/programmer-collection/zte
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Check the logs on the main window, it will show you where it will be saved (Most frequently in the Appdata/Roaming/Qualcomm folder) and the file will be named something like this: ReadData_emmc_Lun0_0x1c000_Len16384_DT_**_**_****_ **_**_**.bin
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Servicebtcsolomining.pw/en_gb...o-bitcoin-110th-s-second-hand/
Model Antminer S19 PRO (110Th) from Bitmain mining SHA-256 algorithm with a maximum hashrate of 110Th/s for a power consumption of 3250W. Second-hand.
The BTCSOLOMINING
Warranty 30 days
PSU Included.
Support 7/7.
Delivered worldwide via DHL Express and UPS.
PAYMENT
Currencies accepted Bitcoin, Ethereum, Bitcoin Cash (COINBASE COMMERCE ) Insured The cryptocurrency stored on coinbase servers is covered by insurance
Btcsolomining.pw
Отправлено с моего SM-G965F через TapatalkEdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
Xposed is a framework for modules that can change the behavior of the system and apps without touching any APKs. That's great because it means that modules can work for different versions and even ROMs without any changes (as long as the original code was not changed too much). It's also easy to undo. As all changes are done in the memory, you just need to deactivate the module and reboot to get your original system back. There are many other advantages, but here is just one more: Multiple modules can do changes to the same part of the system or app. With modified APKs, you to decide for one. No way to combine them, unless the author builds multiple APKs with different combinations.
- Low invasiveness. Based on Riru, so EdXposed no longer need to replace app_process, it is more difficult to detect.(due to some bugs of Magisk, it can still be detected by a few applications)
- Fully open-source and free. We are very concerned about your device security and user privacy, so we are fully open source with GPLv3 license.
- Easy recovered. Based on Magisk, just disable EdXposed in Magisk Manager, you can recover from brick.
- Fast. EdXposed use SandHook and YAHFA as the hook core to provide a faster experience than other cores.
- Fully compatible. The API that is exactly the same as the original Xposed is provided. In general, there is no need to make special adaption to EdXposed.
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Stable：Stable version after passing the test, suitable for general users, update slowly. Download Stable version in Magisk Manager's [Downloads] tab
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If you have any problems, please try to use the latest version of Canary channel, which may fix your problems.
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- All the translators: https://github.com/ElderDrivers/EdXposedManager (if you want to contribute more translations, Please submit Pull Requests to us)
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19HUAWEI Developers is a platform ecosystem that integrates various services and resources for developers to develop and promote their apps, which is committed to serving the vast number of mobile terminal developers. Relying on the advantages of terminal channels, global platform services, and industry chain resources, it aims at openness and innovation in development, testing, and promotion, monetization and other aspects, to help developers create a terminal-based all-scenario innovation experience in an all-round way and reach consumers through smart terminals so as to build an open and win-win innovation ecosystem. Thank you to Huawei for making this forum possible on XDA!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Service=>A hard bricked OP5 has nothing but a black screen (nothing ever comes on the screen, not even a boot logo), it might vibrate when a power button is pressed and held for 20 seconds, has no Recovery partition, no adb mode, and no fastboot partition (It might be a flickering OnePlus logo). The device might be detected in Linux and you might be able to even send commands to it. In Windows, the bricked OP5 should be detected as QHUSB_BULK,Unknown Device,Qualcomm something. You might have a bricked OP5 as a result of flashing a kernel meant for a different device (or a ROM meant for another device that included a kernel), tinkering with the boot logo or bootloader, or your attempt of unlocking the bootloader resulted in corrupting the boot partition. Most of the times, it is needed because OEM Unlocking is disabled, and phone can't boot and no recovery.
=>The solution for OP5 hardbrick is similar to OP3,OP3T- you just need a Qualcomm driver and a recovery package.it'll help to get out from one of the most weird state of the phone.(file is exact file from OnePlus)
This method is easy to use and flashes OxygenOS 5.1.7 and OxygenOS 9.0.9 on your phone. It wipes all your data and restores all partitions to stock. It will work in any condition unless it is a hardware damage.
OOS 9.0.9: https://mega.nz/file/O4dGFI4b#mbqq8V...8-ccejQnTQHIBE
OOS 9.0.11:https://mega.nz/file/ekUURaII#FPoezm...za6etnTPSKJOos
Step 2 :- Extract Drivers and Recovery Tool files on Desktop.
Step 3 :- If you are using Windows other than Windows XP,turn off Driver Signature Enforcement.To do so,follow this guide :- http://www.howtogeek.com/167723/how-...igned-drivers/
Step 4 :- Press the power button for 40 seconds to turn off the phone.
Step 5 :- Press only volume up button for 10 seconds and while keeping it pressed,connect your phone to PC.Keep volume up pressed till your device shows in device manager as [Unknown Device,QHUSB_BULK (under Unknown Devices) or Qualcomm HS USB ...... (under COMs and Ports)].
Step 6 :- Right Click on your device in the device manager and select Update Device Software. Choose the .inf file manually from x86 or x64 folder as the case implies and select Qualcomm 9008 from the listed devices.If you are unable to see 9008,see the end of post for various other methods to show Qualcomm 9008.
Step 7 :- When the device shows as Qualcomm 9008 ,go to the extracted Recovery Package and run the MSM Download Tool as administrator.
Step 8 :- Click start at top left corner and wait for it to finish (green text will come).
Step 9 :- Disconnect phone from PC and boot into system.
How to Make the device show as Qualcomm 9008
2.) Try these drivers,one of them might work too :-
https://www.androidfilehost.com/?fid=24052804347799753
https://www.androidfilehost.com/?fid=24269982086990168
https://www.androidfilehost.com/?fid=24349802275800175
https://www.androidfilehost.com/?fid=24349802275800173
https://www.androidfilehost.com/?fid=24349802275800171
3.)Download this :- http://www.mediafire.com/file/4aqwyi...mm+1.00.11.rar
Keep phone disconnected from PC.
Open the folder "qc" and install the Test Certificate in the following Stores: Trusted Root, Trusted Publisher, Third-Party Root and Personal
Run the Qualcomm setup wizard (also located in the qc folder)
When completed, restart your PC again with Driver Signature Disabled. (Optional but preferred)
The driver should now automatically install. If not, go to device manager and right click "Unknown Device" and click "Update Driver" Search up the QC folder and press ok. The driver should now install.
P.S.: I found the fix for bootloader menu which was changing after flashing through this tool. Just flash the zip in the recovery from the link below after flashing the rom through this tool, and you are good to go.
Please boot your device, set it up then go back to recovery and flash this file.
https://mega.nz/file/n10kkKCQ#LmCm_T...flENQG0ubl15SY
NOTE: When the tool gives the "Sahara error", DON'T DISCONNECT THE PHONE from your PC, and press vol up and power button. It maybe seem stupid as a fix but generally it works.
IMP NOTE: There is a quick update, recently I also got stuck at param processing while flashing my device. So uploading the tool which works well. Here is the link. https://mega.nz/file/C1Nw3Cyb#znHfAT...P6enGxRGSiBh2E
IMP NOTE: There is a quick update, the tool is updated with latest TREBLE OS.
@Mar-cel - for bootloader fix zip
Click thanks IF i helped youNo. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- NFS Injector uses compiled binaries that are closed source... yuck. Not to mention the typos in the README. This one is hard to look at.
- LKT sets random nonsensical build.props that likely don't even exist.
- MAGNETAR uses (you guessed it) compiled binaries that install themselves to your /system/etc/ directory (???). Great idea, install an external closed source, compiled binary to the system partition.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- hispeed_load: 90 --> 80: Jump to a higher frequency if we are approaching the end of the frequency list, where a task may begin to starve or begin to stutter.
- hispeed_freq: : Set the "higher freq" (referencing hispeed_load) to the maximum frequency available to take advantage of Race-To-Idle.
- CAF CPU Boost Tweaks
- input_boost_freq: 1.4 GHz (closest freq) as a generic, universal boost frequency to the little cluster.
- input_boost_ms: 250 ms, not consuming too much power but boosting for important, interactive events such as clicking on things.
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
- readahead: 0: Disable readahead, which is intended for disks with long seek times (HDD), whereas mobile devices use flash storage with zero seek time.
- nr_requests: 128 --> 512: Allow more I/O requests to be issued before flushing the queue, slightly increasing latencies but allowing more requests to be executed before being put to sleep.
- noop / none: Use a scheduler with little CPU overhead to reduce I/O latencies, which is essential for fast flash storage (eMMC & UFS).
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI'm working on a global audio tuning system for Android similar to Viper4Android and JamesDSP, but allowing the User to program and create their own audio filters on the fly. In order to do so I need to link against libLLVM.so which is one of the Android Platform Libraries which doesn't seem to be exposed via the NDK (https://android.googlesource.com/pla...external/llvm/).
My assumption is that I will need to build that library from AOSP Source independent of my project and then link against my locally built copy. Once compilation of my project is complete I don't need to distribute my locally built libLLVM.so file since I can leverage the one existing on the actual device.
I just wanted to see if anyone has any experience doing this, or if I'm going off the deep end.
Thanks!I tried to use libgdx and found out the its not user friendly at all. very complicated framework with no support at all.
I want to write games, that the highest level is AngryBirgds. (I'll start from something much simple).
what framework would you recommend?
what do you think about Xamarin?
p.s
I'm looking for a free framework that I can publish on Google Play
I am not familiar with Xamrin but familiar with phoneGap. I worked in mobilepundits which offers PhoneGap mobile app development company. In the company I used this tool for mobile app development. According to this tool is really easy to use which enable you to build mobile apps even you are not friendly with it.
PhoneGap is one of the best framework for cross platform mobile applications development. It is a free tool which can be used easily. In conclusion if your app can work with more than one platform then you must use the PhoneGap.
I don't think PhoneGap and Xamarin are good choice if you want to make games. Both are good frameworks for making Apps, but if you really want to dive deep into game development you need to use a game engine, which solves a lot more tasks specific for game development.
If you want some higher-level and more user friendly framework then you definitely should try Unity.
If you want more control or just like to work on a lower level and at least a little familiar with C++, then I'd suggest you to try Cocos2D-x.
If you have a Mac, plan to support iOS, and not afraid of Objective-C or the new Swift programming language, then take a look at Cocos2D-Swift (aka Cocos2D-iPhone). Despite the name you can use it to create games for both iOS and Android (via Apportable).
There are other good game engines. But I've only worked with those three I've mentioned (and even wrote a book about Cocos2D-Swift and several tutorials on Unity).
My vote for cross platform framework goes to Corona and Titanium. If you are developing a native app then Titanium is the best option. Titanium is best for developing a normal application. Titanium framework offers a wide range of native functionality and works perfectly with platforms like iOS and Android. If you are developing a game related application then go with Corona.
If you would like to create a 2D cross-platform game the best engine is cocos2d-x.
In this platform you can use C++ or LUA.
Also there is a great community and it is open source. So, you can add own modules and fixes to repository.
But if you would like to create a 3D game or smth like this, the best framework is Unity.
I definitely recommend you the Cocos2d-x to give it a try.
Cocos2d-x allows you to write games in C++, Lua and Javascript. Moreover you can deploy games for variety of platforms: Windows Phone, Android, iOS, Windows Desktop, Linux, Blackberry, MacOS and Browser!
Yesterday they announced new Cocos brand which simplyfies many things and makes it more friendly
URL: www.cocos.com & www.cocos2d-x.com
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceNow on functionality of our App:
- Both backup and restore of individual programs one at a time and batch backup and restore of multiple programs are supported.
- Backups can be scheduled with no limit on the number of individual schedules and there is the possibility of creating custom lists from the list of installed apps.
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )This tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- Your QFIL firehose (emmc_firehose_8***.mbn) You can get it from here: https://github.com/programmer-collection/zte
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Check the logs on the main window, it will show you where it will be saved (Most frequently in the Appdata/Roaming/Qualcomm folder) and the file will be named something like this: ReadData_emmc_Lun0_0x1c000_Len16384_DT_**_**_****_ **_**_**.bin
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/The Moto E 2015
is a low-range Android smartphone released in February 2015. The Moto E 2015 comes in two variants, a 3G model and an LTE model. It features a 4.5" 540 x 960 IPS LCD display with a 245 ppi pixel density. The 3G model is powered by a 1.2GHz quad-core Qualcomm Snapdragon 200 processor, while the LTE version is powered by a 64-bit 1.2GHz quad-core Qualcomm Snapdragon 410 processor. Both variants come with 1GB of RAM and 8GB internal storage, with a further 32GB available via microSD. Other features include a 5MP rear shooter with 720p video recording, VGA front facing camera and a 2390mAh battery. View comprehensive specs for the Moto E 2015
.EDIT 2020-08-21: This doesn't work on Android 10 and up. This because we cannot mount/remount /system or / as writeable due to Android 10's system-as-root build properties and the ramdisk init process .
It's probably well known that the Android super user, or root user, commonly abbreviated as su, is a special user that has tremendous power, with the ability to access and modify all files on the operating system. This is necessary at times, but there is a potential for accidental errors to cause a great deal of destruction. Actually Android rooting is very popular and users are very keen on it since a phone with rooted Android is smarter than a phone with normal Android.
Most threads / posts here on XDA and anywhere else ( what are simply hundreds of copies of one and the same original contribution, IMO ) recommend to install TWRP recovery, flash Magisk framework via TWRP, then finally add "root" to Android by means of Magisk. Yes, this may in the end lead to a positive result, but is in my opinion an unnecessary overkill with regards to get installed 1 ( ONE ) binary in Android - the su binary what is ~100 KB of size.
And, my POV, rooting Android by means of Magisk in most - if not even in all - cases violates the EULA of an app if the app is restricted to be only run on non-rooted Android. IMHO an app's developer surely has good reason when he restricts his app to only be run on non-rooted Android.
Here the most simple method to manually add superuser ( aka root ) to Android
Note: On phones with an A/B-partition-layout-system only the current active partition ( slot ) gets affected
1. Download attached ZIP and extract the SU binary that matches device's CPU-architecture onto root of computer's drive C:
2. Install on computer ADB ( USB drivers ) 100% matching your device if not done yet
3. Make ADB-driver systemwide accessable
4. In a Windows Command prompt (CMD) input the command sequence as listet next - one by one - always followed by pressing Enter key
adb devices adb disable-verity >nul 2>nul adb reboot adb devices adb shell "mkdir -p /data/local/tmp" adb push c:\su /data/local/tmp > nul adb shell "chmod 0777 /data/local/tmp/su" adb shell "/data/local/tmp/su" adb shell "cd /" adb shell "mount -o rw,remount -t auto /system" adb shell "cp /data/local/tmp/su /system/bin" adb shell "mount -o ro,remount -t auto /system" adb reboot adb devices adb enable-verity >nul 2>nul adb reboot
For your convenience the related Windows Command script is attached, too.
To verify your device's Android got rooted in a Windows Command prompt ( CMD ) input the command sequence as listet next - one by one - always followed by pressing Enter key
adb devices adb shell "which su"
Example screenshot:
In case you want to remove superuser from Android for whatever reason then you simply delete binary /system/bin/su
In a Windows Command prompt ( CMD ) input the command sequence as listet next - one by one - always followed by pressing Enter key
adb devices adb pull /system/bin/su C:\su adb disable-verity >nul 2>nul adb reboot adb devices adb shell "/system/bin/su" adb shell "cd /" adb shell "mount -o rw,remount -t auto /system" adb shell "rm -f /system/bin/su" adb shell "mount -o ro,remount -t auto /system" adb reboot adb devices adb enable-verity >nul 2>nul adb reboot
BTW: Personally never would grant super user rights to any application whoever it may have come from. Yes I'm not blue-eyish compared to some others.The Xiaomi Poco X2 is a 6.67" phone with a 1080x2400p resolution display. The Qualcomm SDM730 Snapdragon 730G chipset is paired with 6/8GB of RAM and 64/128/256GB of storage. The main camera is 64+8MP and the selfie camera is 20+2MP. The battery has a 4500mAh capacity.But you can only port a TWRP if you implement parts of all the guides.
This guide is a summation of all those guides.
NOTE:
I would be using AIK-Linux in this tutorial, since I don't recommend Windows for all this, who knows what problems you will get into.
REQUIREMENTS:
1.Download these TWRP recoveries in accordance with your screen resolution.
A. If your screen resolution is 480x850, 480x854; download
https://twrp.me/lg/lgnexus4.html
B. If your screen resolution is 720x1280, 800x1280 or 720xsomething; download
https://twrp.me/asus/asusnexus720123g.html
C. If your screen resolution is 1080x1920, download
https://twrp.me/motorola/motorolanexus6.html
2. Download Android Image Kitchen-Linux from this thread:
https://forum.xda-developers.com/sho....php?t=2073775
LET'S BEGIN:
1. Unzip Android Image Kitchen zip file.
3. Now, navigate to the unzipped folder of AIK (Android Image Kitchen).
4. Just Right Click and select "Open Terminal here".
5. Copy and paste your stock recovery.img and paste it in AIK folder.
6. In the terminal, type the command
su
./unpackimg.sh
8. Cut the new folders, ramdisk and split_img, and paste them somewhere outside of AIK folder.
9. Remove the stock recovery.img in AIK folder.
10. Now, copy and paste the twrp_recovery.img according to your screen resolution in the AIK folder.
11. Now, revert back to the terminal and type
./unpackimg.sh
13. Delete all the files in the new split_img folder we got by unpackimg twrp_recovery.img
14. Copy and paste all the files in stock split_img folder to the new split_img folder.
15. Delete following files from new ramdisk folder.
A. default.prop
B. fstab.devicename_or_chipsetname
C. ueventd.rc
D. Any other file like ueventd.devicename.rc
16. Copy and paste these files from stock ramdisk folder to new ramdisk folder.
default.prop fstab.devicename ueventd.rc
18. Paste the recovery.fstab file in new ramdisk/etc folder.
19. Edit the twrp.fstab file according to the newly pasted recovery.fstab
20. You will have to replace"/sdcard" with "/external_sd" and "/usb" with "/usb-otg".
21. If the partitions stated above are not available in your fstab files then add these lines. Order may change on the format in which the files are written.
/external_sd vfat /dev/block/mmcblk1p1 flags=removable;storage;display="SDCARD" /usb-otg auto /dev/block/sda1 flags=removable;storage;display="USB-OTG"
ro.secure=0 ro.adb.secure=0 security.perf_harden=0 ro.debuggable=1 persist.sys.usb.config=adb,mtp
24. Type
./repackimg.sh
When you have successfully built the TWRP, or if you want to request one instead of creating yourself, contact me on this thread:
https://forum.xda-developers.com/and...-code-t3833338
SPECIAL INSTRUCTIONS FOR MEDIATEK DEVICES:
1. The recovery.fstab you will get after unpacking your stock recovery.img would be flawed in most cases. I believe OEMs do this deliberately.
2. In order to know which partition is mounted at which location and at which device, you'll need DiskInfo (Install it from Play Store) and a root explorer.
3. Enable the following Diskinfo settings:
Show mount path Show partition name Show file system Expert mode Unmounted partitions Device Mapper partitions Temporary filesystems
5. You can trace their exact locations by navigating within the /dev directory for partition names like mmcblk0p5.
SPECIAL INSTRUCTIONS FOR DEVICES THAT DON'T HAVE RECOVERY.FSTAB WITHIN STOCK RECOVERY.IMG
1. In the ramdisk/etc folder, there might be a dummy recovery.fstab file with the symbol of link on it.
2. Right click on the file and select "Show Target". You'll get to know the path of original recovery.fstab file. It might be within the unpacked recovery or inside some other partition on your phone.
For example: Honor 7C devices have their recovery.fstab in /vendor/etc folder.
TROUBLESHOOTING INSTRUCTIONS:
1. If you get a dm-verity error or facing an encryption problem, go to this thread and flash the "dm-verity and forceencrypt disabler zip".
https://forum.xda-developers.com/and...crypt-t3817389
2. If you encounter a bootloop while booting into your new TWRP, please consult post #20 of this thread.
3. At times, the path of partitions during recovery boot is not the same as those during normal boot. That's why you may get errors like
Updating partitions details... Failed to mount '/cache' (Invalid argument) Failed to mount '/system' (Invalid argument) Failed to mount '/data' (Invalid argument) Failed to mount '/metadata' (Invalid argument) ...done Unable to mount storage Failed to mount '/data' (Invalid argument)
find /dev/block -name by-name
If there are some bugs or you need some assistance in porting TWRP, contact me by mentioning in your post, for example @Augustoandro, we'll work on it to make it bug-free.
Special thanks to @aIecxs for his troubleshooting instructions of bootloop, "Failed to mount /partition_name (invalid argument)" error and also @inguna for guiding me on how to fix the "SDCARD not detected by the TWRP" problem and also fixing the MTP, ADB not working issue.
Another thanks to @seanybiker and @avirus for their troubleshooting instructions on "DM-Verity and forceencrypt" errors.
CREDITS:
@HostZero for his porting guide.
@osm0sis for his awesome Android Image Kitchen
@Zackptg5 for his "DM-Verity and Forceencrypt disabler zip".1. Rate 5* on Google Play or share the link https://play.google.com/store/apps/d...d=app.galleryx
2. Screenshot and comment in this topic with image link.
Or you can help us translate into your language and get PROMOTION CODE: https://1gallery.app/translate
----------------------------------------
1Gallery is ideally the best alternative gallery app designed for managing your photos. Besides, you can secure your photos, videos via hidden and encryption feature.
1Gallery lets you:
* Protect your privacy, secure your photos.
- Hide photos, videos (copies of your driver’s license, ID cards, and credit cards etc).
- The hidden files are all ENCRYPTED.
- Password mode: Pin, Pattern, Fingerprint.
* A simple, beautiful app will bring you a smooth experience.
- Organizing your photos, videos.
- View huge images and many different photo and video types (RAW etc).
- Management: Search, create new folders, moving/copying data and more (Memory card supported).
- Photo editor: Crop, rotate, resize, filters & more.
- Trim video.
- Play video with subtitles.
- View detailed information of your files (resolution, EXIF values etc).
- Zoom in/out to change column.
- Theme: Auto, Light, Dark.
And there are many more features waiting for you to discover 🙂
* Website: https://1gallery.app
* Checkout my other app:
Today Weather
Calc - A new kind of Calculator [PROMOTION CODES]
Download 1Gallery from the Google Play Store
.This tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- Your QFIL firehose (emmc_firehose_8***.mbn) You can get it from here: https://github.com/programmer-collection/zte
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Check the logs on the main window, it will show you where it will be saved (Most frequently in the Appdata/Roaming/Qualcomm folder) and the file will be named something like this: ReadData_emmc_Lun0_0x1c000_Len16384_DT_**_**_****_ **_**_**.bin
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/This is for whom are using the SamsungSans for very long time(Like Me).
I have edit (SamsungSans V2.0.00-1 apk) and added 99 Fonts (+2 Already in Apk)
From [Winb33 [MASTER FONTPACK] -=v7.2=- 1120 Fonts]
[ You know the loading of 1120 Fonts taking some more times ]
So I took only those fonts that very much stylish & suitable in device and have added some I like.
So now I want to share the zip file that I am using.
🎴Download👇
Android File Host
📱Support All Samsung Galaxy A/C/J/M/S/Note Series (TouchWiz & OneUI) Roms (Lollipop/Marshmallow/Nougat/Oreo/Pie/Q)📱
❤Credit:👇
Winb33 & Ranbir7878
🔰What You Need?🔰
Need Root and Need Custom Recovery (Magisk/TWRP)
But if you are just rooted than you can put the file by yourself
Just follow the directory of zip and give the apk file right permission 0644
❤If You Like This Mod😍
Please Press Thanks It Will Be Appreciate Me.
And Don't Forget To Rate This Thread.
😉If Want To Buy me a Drink🍺
💰BTC/Bitcoin Adress : 36mGW6zydHKzZh1nhKXyjGcQBttRA4KHvc
💰Payoneer: [email protected]
For Rom Developers: Feel Free To Use My Mod In Your Rom Just Give Credits
------------------ All 101 Fonts Preview ------------------XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Samsung Galaxy Tab A series has a crazy crisp display. Just kidding, this is automated text so who knows if this screen is any good. So, you be the judge! A higher rating indicates that it's extremely sharp and clear, and that you cannot see pixels with your naked eye.
Then, drop a comment if you have anything to add!Tested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.I started these builds because the LineageOS builds from @Valera1978 had 2 particular significant bugs in them that were always being mentioned in posts in that thread: display backlight brightness not changeable from full brightness and the touchscreen appearing to not respond after putting the tablet to sleep. Those bugs had existed for quite a long time. @followmsi has some changes in his device tree that fixed those 2 bugs.
Now, my builds are really a continuation of Valera's builds after Valera discontinued work on this device.
Over Valera's old builds, my builds have many improvements and additional features.
- SELinux is set to enforcing by default for better security.
- Secure ADB (RSA key verification for ADB) is enabled by default, and ADB isn't enabled by default and isn't enabled on boot.
- Encryption is fully working.
- USB tethering works.
- Support for using USB for MIDI is enabled.
- Support for screen mirroring using miracast has been added back after being removed by Google using the changes here: https://review.lineageos.org/q/topic:%22ten-aosp-wfd%22
- Freeform windows work properly with this abandoned change: https://review.lineageos.org/c/Linea..._base/+/275189
- The kernel has many updates from Linux 4.4, 3.16 and android-3.18, including security and vulnerability fixes, improvements to downstream drivers and additional features (including CPU and GPU voltage control (documentation is further on in this thread), the BFQ IO scheduler and some USB serial drivers updated from Linux v4.4 and enabled (The enabled drivers are the generic, WCH CH341 (also supporting the CH340), SiLabs CP201X, Prolific PL2303 and FTDI SIO USB serial drivers. You can use Termux with tsu and screen to interface with supported USB serial devices via these drivers. They'll be available at /dev/ttyUSB[0-255], though most likely /dev/ttyUSB0.))
- The userspace lmk (low memory killer) is used.
- There is support for signature spoofing, notably for microG.
- sswap has been removed and ZRAM is used instead.
- The Settings -> Privacy -> Trust -> Restrict USB option works.
- The Mali graphics blob has been updated to r28p0 from r22p0.
- OpenCL is working.
- Assisted GPS works.
- The microphone gains have been increased.
- LiveDisplay color calibration and reading mode is available.
- FlipFlap has been added. (Only works if the timeouts in Settings -> Connected devices -> Connection preferences -> Smart cover are set to 'immediately')
Note: I won't build for the LTE variant. These builds are only for the WIFi only variant. I don't have enough disk space to build for both variants and I don't own the LTE variant. Don't try to install these builds on the LTE variant, it won't work.
Downloads:
Latest build from 20201022 (security patch level 20201005): https://drive.google.com/file/d/1h8I...kj_l7rJB40Zg8/
Some previous releases: https://drive.google.com/drive/folde...Uqia80clb8ShtP
Directory for these builds: https://drive.google.com/open?id=1Ui...YLIS0Xyuz5RtFC
Changelog:
- Latest updates from LineageOS, including the 20201005 Android security updates.
- Enable config_setColorTransformAccelerated - LiveDisplay colour calibration and reading mode is now available. (Thanks to @followmsi for finding this fix.)
- Add FlipFlap for flip covers. (Note that FlipFlap only works if the timeouts in Settings -> Connected devices -> Connection preferences -> Smart cover are set to 'immediately')
- More updates to the kernel from Linux v4.4 and the 3.18 Android common kernel.
- Apply/backport some changes to zram and the lz4 compression algorithm from mainline Linux for faster compression and decompression, and add a backport of the zstd compression algorithm from the 4.9 Android common kernel which can be used as the compression algorithm for zram (lz4 is still the default compression algorithm).
- Latest updates from LineageOS, including the 20200905 Android security updates.
- Increase microphone gains.
- Many more updates from Linux v4.4 and android-3.18 and a few improvements to the kernel.
- Latest updates from LineageOS.
- A few more updates from Linux v4.4 and android-3.18 and improvements to the kernel.
- Revert 2 changes to the kernel related to hotplugging - should fix an issue where the device doesn't wake up after a while of deep sleeping in certain cases, and a hard reset is needed.
- Latest updates from LineageOS, including the 20200805 Android security updates.
- Update the Mali graphics blob to r28p0 from r22p0.
- Make a few changes for GPS that fix Assisted GPS, and switch to different XTRA servers with HTTPS.
- Fix OpenCL.
- Symlink libGLES_mali.so to libOpenCL.so, libOpenCL.so.1 and libOpenCL.so.1.1 instead of copying - saves a significant amount of space in /system and makes the installation zip slightly smaller.
- Change media volume control to be in 25 steps rather than 15 steps.
- More updates from Linux v4.4 and android-3.18 to the kernel and some improvements.
- Latest updates from LineageOS.
- Android security updates from 20200705, manually applied to skip the wait for them to be merged. ('repopick -t android-10.0.0_r40')
- Disable window rounded corner animations.
- Reduce ZRAM size to 512MB.
- Enable debug.sf.disable_backpressure.
- A few more updates to the kernel from Linux v4.4 and android-3.18.
- Port over/import zsmalloc, zram, zswap, zbud and zpool from Linux v4.4.
- Fix the issues with hanging/freezing that were present in the previous release.
- Latest updates from LineageOS.
- Enable support for using USB for MIDI.
- Fix/workaround issues with USB tethering.
- Remove sswap and use ZRAM.
- Latest update from @Valera1978 - "update audio_policy_configuration.xml from SM-A600FN q stock"
- Many more updates to the kernel from v4.4, android-3.18 and a few from v3.16.
- Disable the Exynos hotplug governor again. (in the kernel)
- Latest updates from LineageOS including the 20200605 Android security updates.
- Use userspace lmkd.
- Enable Always On Display. (Thanks to @followmsi)
- Address a few more SELinux denials.
- power_profile: change names as per pie naming changes.
- Switch to [email protected]g. (Thanks to @followmsi)
- Fix freeform window moving/resizing doesn't work (In my new fork of LineageOS' android_frameworks_base repository).
- Add back support for Miracast using the changes from https://review.lineageos.org/q/topic...-aosp-wfd%2522 (In my new fork of LineageOS' android_frameworks_av repository).
- More updates to the kernel, including many updates from Linux v4.4 and v3.16 and general updates. There are also improvements to downstream drivers.
- Latest updates from LineageOS including the 20200505 Android security updates.
- Address more SELinux denials.
- Remove the ro.enable_boot_charger_mode property and revert "gtaxl: workaround for offline charging".
- Remove some useless services for non-existent binaries in init files.
- Hide sRGB toggle in developer options.
- Use the latest stock Android 8.1 build fingerprint and update private build description to T580XXU4CSA1.
- More updates to the kernel, including many updates from Linux 4.4 and to the kernel-based wireguard implementation.
- Latest updates from LineageOS including the 20200405 Android security updates.
- Update the cpu.speeds array in the power profile for 1.69GHz, 449MHz and 343MHz frequencies.
- Make the power profile aware of the big.LITTLE cluster.
- Address more SELinux denials and remove duplicate rules.
- Use an up-to-date Samsung hardware repository based on LineageOS' repository, and make changes to the device tree for it. ((Thanks to @followmsi for changing the sepolicy to accommodate for modem/macloader having been moved to /vendor and mentioning that the Exynos hidl power HAL has to be used after the old power HAL was removed)
- Enable secure ADB and set persist.sys.usb.config to none.
- Use pool.ntp.org for the NTP servers.
- ramdisk: cleanup the init files and fstab for readability.
- ramdisk: init.samsungexynos7870.rc: only start gpsd after booting - fixes GPS when encrypted.
- More updates to the kernel, including many updates from Linux 4.4, general updates (such as updates to the wireguard kernel module) and fixes.
- Use sdfat for exFAT support.
- Add toggle for disabling newly added USB devices.
- Latest updates including 20200305 security patches
- Upgrade android.hardware.keymaster to 4.0.
- lineage-gtaxlwifi_defconfig: disable CRYPTO_FIPS to get encryption partially working.
- sdfat: update to version 2.3.0.
- Update the BFQ IO scheduler to v8r12 using a port.
- wireless: add back Samsung's 'temporary' workaround due to qcacld-2.0 page allocation errors. Looks like this is actually necessary. Works around issues with WiFi not being possible to be enabled after some time again due to page allocation failures that still exist.
- Revert duplicate "signal/ptrace: Don't leak unitialized kernel memory with PTRACE_PEEK_SIGINFO". We already had this commit as in Linux v3.18, the content of this reverted commit are useless.
- Fix a few SELinux denials. (including app_zygote denials, sepolicy in post 5 no longer needed for this build at all and also shouldn't be used anymore as more denials beyond just the app_zygote denials have been fixed)
Documentation on how to undervolt the CPU and and undervolt the GPU:
Warning: I'm not responsible for any damage. Anything you do is at your own risk!
Note: everything in this section requires root access. If you don't have root access, you can use root over ADB. All commands should be run using some type of shell.
This documentation isn't the best, but it should be good enough. This section had documentation on how to overclock the GPU and undervolt various busses, but those features don't appear to actually work.
CPU voltage control:
This feature allows changing the voltage on the big and LITTLE clusters. To get the current voltages...
...of the first cluster (cluster 0), view the contents of the file /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster0_volt_table. You can use cat to do this:
cat /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster0_volt_table
cat /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster1_volt_table
...for the first cluster, write voltages in microvolts (uV) in the format "<1.69GHz voltage> <1.586GHz voltage> <and so on until 343MHz...>" to the file /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster0_volt_table. You can use echo to do this:
echo "<1.69GHz voltage> <1.586GHz voltage> <and so on until 343MHz...>" > /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster0_volt_table
echo "<1.69GHz voltage> <1.586 voltage> <and so on until 343MHz...>" > /sys/devices/system/cpu/cpufreq/mp-cpufreq/cluster1_volt_table
GPU voltage control:
cat /sys/devices/11400000.mali/volt_table
echo "<frequency in MHz> <voltage for that frequency>" > /sys/devices/11400000.mali/volt_table
Issues and workarounds (if any):
Partial workaround to issue 1: format and use your micro SD card with the exFAT filesystem.
There could be more issues due to SELinux denials. If something doesn't work, test it with SELinux set to permissive:
setenforce 0
dmesg | grep "avc: denied" > dmesg_selinux_denials logcat | grep "avc: denied" > logcat_selinux_denials
If an issue isn't caused by SELinux denials, get a logcat and dmesg (driver messages) log. How to get both is well documented.
Sources:
manifests - https://github.com/TALUAtGitHub/gtaxlwifi-manifests on branch lineage-17.1
device tree - https://github.com/TALUAtGitHub/andr...sung_gtaxlwifi on branch lineage-17.1
kernel sources - https://github.com/TALUAtGitHub/andr...ung_exynos7870 in branch lineage-17.1
vendor - https://github.com/TALUAtGitHub/andr...sung_gtaxlwifi on branch lineage-17.1
hardware - https://github.com/TALUAtGitHub/andr...rdware_samsung on branch lineage-17.1
android_frameworks_base fork - https://github.com/TALUAtGitHub/android_frameworks_base
android_frameworks_av fork - https://github.com/TALUAtGitHub/android_frameworks_base
Thanks to:
@Valera1978 - for the initial work for this device itself
@followmsi - for fixes to various issues and other improvements
LineageOS - for the Android distribution itself
...and everyone else who's worked on anything (such as the Linux kernel, the interfaces I could use and Android itself).Will try and keep this short: Am an old time developer, since 1979. I was self-taught, as a kid, never one class. The weakness there is that I never learned most of the terms.
So when learning new languages, it was harder since I didn’t have a reference point. i.e. may no longer be used, but I created “linked lists”, just never knew they were called that.
Anyway, I never got past using C and WinSDK. And I learned just enough Perl on the fly as I needed it to create some backend parts to some of my apps.
I am desperate to start a new project, preferring to do it on Android first. As hard as I looked for LOCAL developers with serious programming experience, and preferably some Voice SDK experience I failed. I tried Craigslist and Meet Up. Nothing.
So I need to do this MYSELF. Or at least start it and come up with the alpha-prototype on my own.
After all that explaining, what’s the BEST (and least expensive) means I can purchase to teach myself programming an Android device?
I always loved forums, we’re talking back when NEWSGROUPS were the way to go. Because out there was always someone who knew…and was willing to share their point of view.
Currently using a PC-Windows environment, so any IDEs in that arena would be preferred.
So any help, any direction would be so appreciated.
Many thanks ahead all,
SergioI'm Jane, account manager come from Ecomobi, a platform which connect advertiser and publisher.
Building by well - experienced leaders in affiliate network, we own large quality mobile traffic in Brazil - India - Indonesia - Nigeira - Vietnam - Malaysia
Clear payment policy, many bonuses, high - security when become VIP publisher and many many interesting chance.
If you own mobile trafffic and wanna earn much more money, plz contact me.
Welcome all and i'm so proud to work with you.
Contact me if u 're interested plz contact at skype : jane.ecomobi.
Hope for co-operating soon !!!Tested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.Ive just bought Mate 10 Pro BLA-L09 8.0.0112(C652) phone refurbished . Its arrived in immaculate condition, but the problem is I can not get it to update the firmware to EMUI 9.
I have contacted customer services at Huawei and they have said that I cant update the phone OTA as it has been a demonstrator phone, even though its unlocked and works OK.
They want me to send it off to the service centre.
What can I do to flash the phone to the latest EMUI 9.1 firmware for the UK?
I dont want to put EMUI 10 on as I want to use mirrorlink for my car.
Ive tried to search using this tool on the windows app, but cant find any firmware, Ive downloaded the tool on my phone and it does find some firmwares, but Im not sure there appears to be a number of different ones so Im not sure which one I should download.
Due to this being a demo phone Can I update the firmware or is it better to send back to service centre?
Thanks for any help.just wanted to give a quick rundown of my experience with a cheap aftermarket LCD (yes, you read right...) for the Oneplus 5 from Aliexpress.
I broke my screen in July, since I knew I'd get a Pixel 4a or a Oneplus Nord anyways I wasn't that worried about quality, I just needed something to hold me over till I get the new phone. I ordered an aftermarket display from Aliexpress for 23 EUR. The display arrived and it immediately looked... weird. It didn't have the round edges of the original screen and it seemed thicker. Doesn't matter, it's cheap and I'll just need it for a few weeks, tops, so what could go wrong?
Here are the issues I immediately noticed:
* Quality control is bad, the upper right nut in the frame for the screw on the mainboard is loose on the display and can't be fastened
* No adhesive for various parts that are glued to the original frame, so they sit loose
* No oleophobic coating on the screen
* Much thicker than the original display
* LCD not OLED, so colors are off and it's not as bright as the original display
But it gets worse. Once I had everything back together the display was not closing properly. There's a metal notch on the frame that bends the main PCB and prevents the SIM cart tray from inserting properly. That metal notch is neither present on original display, nor on sellers pictures.
PCB is bending on metal notch
Comparison original display to display from seller
Screenshot from seller without metal notch
Conclusion: the item is faulty. Since that I've dremeled the notch off and the phone closes now, but even for a screen as cheap as this, this is absolutely unacceptable, in my opinion. There are several sellers now that feature pictures of this display replacement with the notch visible, but I don't think repairing a manufacturing defect should be the responsibility of the customer.
Overall can not recommend. This might be okay for the cheapest of cheap repairs, but manufacturing defects aside, it also seriously lowers the quality of the device. I don't have a repair business, but this is the tenth screen I replaced over various iPhones, a Oneplus One, a Nexus 6 and now this Oneplus 5 and this is the lowest quality screen replacement I've ever seen. And I've put some really cheap LCDs into iPhones. It will hold you over for a few weeks like it did for me, but you can say goodbye to any resale value left.
On the plus side: it doesn't have the wobbly screen effect while scrolling...
tl;dr: don't buy, unless you are in a pinch.If you're a mobile gamer, reverse tethering your device to your computer might solve some wifi lag issues. As for tethering, you can share your wifi and mobile data connection to your computer. I haven't tested if it bypasses carrier tethering restrictions, but I have added an option to change your user agent from the app.
If you're interested, DM me your play store email address, and I'll send you the link to the app within 24 hours. Thanks!
Note: It doesn't require root, and it doesn't require USB debugging (except on Windows). You will also need to install a desktop companion app for it to work. I'll send the download links via email.1.Notpad++
2.Boot.img unpacker
3.Win rar or 7zipper
MT6582 MOBILE
MT6582 mobile camera not conect:
STEP 1:
copy these from stock ROM to port ROM
system\lib\hw\camera.default.so
(N.B.if you have two files like camera.goldfish.so delete this the one with the goldfish)
system/lib/ libcamdrv.so
system/lib/libcamalgo.so
system/lib/libcameracustom.so
system/lib/libdpframework.so
system\etc\permissions\android.hardware.camera.xml
STEP 2:
unpcack the boot.img from Port ROM
open init.rc file add/replace below lines
#Camera
#chmod 0660 /dev/FM50AF
chmod 0660 /dev/OV8825AF
chmod 0660 /dev/CAM_CAL_DRV
#chown system camera /dev/FM50AF
chown system camera /dev/OV8825AF
chown system camera /dev/CAM_CAL_DRV
& repack boot.img
MT65XX MOBILE
STEP 1:
& Other mediateck Mobile camera not conect :
copy these from stock ROM to port ROM
system\lib\hw\camera.default.so
(N.B.if you have two files like camera.goldfish.so delete this the one with the goldfish)
system\lib\libcamera_client.so
system\lib\libcameracustom.so
system\lib\libcameraprofile.so
system\lib\libcameraservice.so
system\etc\permissions\android.hardware.camera.xml
STEP 2:
unpcack the boot.img from Port ROM
open init.rc file add/replace below lines
#Camera
#chmod 0660 /dev/FM50AF
chmod 0660 /dev/OV8825AF
chmod 0660 /dev/CAM_CAL_DRV
#chown system camera /dev/FM50AF
chown system camera /dev/OV8825AF
chown system camera /dev/CAM_CAL_DRV
& repack boot.img
Some Bug Fix All Mediatek Mobile
####
Camera Force closed or camera not conect :
copy these from stock rom to port Rom
system\lib\hw\camera.default.so
system\lib\libcamera_client.so
system\lib\libcameracustom.so
system\lib\libcameraprofile.so
system\lib\libcameraservice.so
system\lib\libmhal.so
system\lib\libmhalcontent.so
system\lib\libmhaldrv.so
system\lib\libmhalmdp.so
system\lib\libmhalpipe.so
system\lib\libmhalscenario.so
system\lib\libmhalutility.so
system\etc\permission\android.hardware.camera.fron t.xml
system\etc\permission\android.hardware.camera.xml
FOR CAMERA NOT CONNECTED ISSUE /CAMERA GREEN /CAMERA FORCE CLOSE "unfortunately camera has stopped"
Replace first libcamdrv.so (needed for 6582
devices) and check if not success then replace
libcameraservice.so from/lib.
Camera Focus Problem :
system/lib/libcameraservice.so
system/lib/libfeatureio.so from
[NB:These step not required for some mobile]
#####
Audio Problem :
AUDIO NOT COMING IN LOUDSPEAKER MODE
Replace to
system/lib/libaudio.primary.default.so
[If still sound related problem: Replace all libaud*.so Sometimes replacing all audio files give you a boot loop in that case replace only]
system/lib/libaudio.a2dp.default.so
system/lib/libaudio.primary.default.so
system/lib/libaudiocompensationfilter.so
system/lib/libaudiocustparam.so
system/lib/libaudiosetting.so
system/lib/libaudioutils.so
system/lib/libcustom_nvram.so[HIGH AUDIO VOLUME ISSUE]
[N.B. Some phone not working]
#####
SD CARD PROBLEM :
fix internal & external SD Card Problem mount
system/etc/vold.fstab [mount problem Fix]
system/etc/vold.fstab.nand
system/etc/vold [Default problem fix]
#####
Download epo Problem :
Replace in framework folder
mediatek-common.jar
mediatek-framework.jar
mediatek-op.jar
mediatek-telephony-common.jar
#####
3G Problem
Replace to
system/etc/mddb
system/etc/agps_profiles_conf.xml
system/etc/apns-conf.xml
system/etc/epo_conf.xml
system/etc/spn- conf.xml
system/etc/virtual-spn-conf-by-efpnn.xml
system/etc/virtual-spn-conf-by-efspn.xml
system/etc/virtual-spn-conf-by-imsi.xml
####
WiFi
WIFI TOGGLE PROBLEM :
system/etc/wide-dhcpv6
system/etc/wifi
system\lib\modules\mtk_stp_wmt.ko
system\lib\modules\mtk_wmt_wifi.ko
####
COMPASS PROBLEM :
system/lib/libsensorservice.so
####
VIDEO SHOWING PIXELS AND GLITCHES PROBLEM :
system/lib/libvcodecdrv.so from /lib
####
FM PROBLEM
system/lib/modul/mtk_fm_drv.k0
####
GPS Problem:
system/lib/module folder mtk_stp_gps.ko
###
TOUCH SCREEN PROBLEM :
system/lib/libinput.so
########### Again Share My Old Experience ##########
Sim card problem :
*system/bin
SD Card Problem :
*system/etc/vold.fstab
*system/etc/vold.fstab.nand
Camera Focus Problem :
*system/lib/libcameraservice.so
[NB:These step not required for Walton Primo GF,GH,GH+ & GH2]
Boot loop problem :
*system/lib/libandroid_runtime.so
*system/lib/libandroid_servers.so
*system/lib/libmedia_jni.so
Other Problem :
*system/etc/dhcpcd
*system/etc/permissions
*system/etc/security
*system/etc/audio
*system/etc/bluetooth
*system/etc/wifi
*system/lib/drm
*system/lib/egl
*system/lib/soundfx
=================BUILD.PROP TWEAKS==================
# By PurePerformances NK
# System Tweaks
ro.HOME_APP_ADJ=1
ro.mot.eri.losalert.delay=1000
ro.config.hw_fast_dormancy=1
ro.ril.enable.amr.wideband=1
ro.config.hw_fast_dormancy=1
ro.config.hw_quickpoweron=true
# Miscellaneous Tweaks
persist.sys.NV_FPSLIMIT=90
debug.qctwa.statusbar=1
debug.qctwa.preservebuf=1
debug.qc.hardware=true
com.qc.hardware=true
ro.telephony.sms_segment_size=160
persist.telephony.support.ipv6=1
persist.telephony.support.ipv4=1
ro.config.hw_fast_dormancy=1
persist.sys.shutdown.mode=hibernate
ro.config.hw_power_saving=true
ro.media.enc.hprof.vid.fps=65
ro.mot.buttonlight.timeout=1
ro.ril.set.mtu1472=1
touch.presure.scale=0.001
# Makes streaming videos stream faster
media.stagefright.enable-player=true
media.stagefright.enable-meta=true
media.stagefright.enable-scan=true
media.stagefright.enable-http=true
media.stagefright.enable-record=true
# Graphics Enhancement
debug.performance.tuning=1
video.accelerate.hw=1
ro.media.dec.jpeg.memcap=20000000
ro.media.enc.hprof.vid.bps=8000000
ro.media.enc.jpeg.quality=100
# Scrolling Responsiveness
windowsmgr.max_events_per_sec=90
persist.cust.tel.eons=1
# Power Saving Tweaks
ro.ril.disable.power.collapse=1
pm.sleep_mode=1
wifi.supplicant_scan_interval=180
# Dialing Tweaks
ro.telephony.call_ring.delay=0
ro.lge.proximity.delay=25
mot.proximity.delay=25
# DalvikVM
dalvik.vm.verify-bytecode=false
dalvik.vm.execution-mode=int:fast
dalvik.vm.checkjni=false
dalvik.vm.dexopt-data-only=1
dalvik.vm.heapstartsize=1m
dalvik.vm.heapgrowthlimit=64m
dalvik.vm.heapsize=128m
dalvik.vm.verify-bytecode=false
dalvik.vm.execution-mode=int:jit
dalvik.vm.lockprof.threshold=250
dalvik.vm.dexopt-flags=m=v,o=y
dalvik.vm.jmiopts=forcecopy
# Performance
debug.composition.type=gpu
ro.max.fling_velocity=20000
ro.min.fling_velocity=18000
debug.performance.tuning=1
debug.kill_allocating_task=0
debug.overlayui.enable=1
debug.egl.profiler=1
debug.egl.hw=1
debug.sf.hw=1
hw3d.force=1
hw2d.force=1
force_hw_ui=true
profiler.force_disable_err_rpt=1
profiler.force_disable_ulog=1
ro.min_pointer_dur=8
debug.kill_allocating_task=0
persist.sys.ui.hw=1
ro.debuggable=1
ro.config.disable.hw_accel=false
ro.kernel.android.checkjni=0
persist.sys.purgeable_assets=1
persist.sys.use_dithering=1
ro.secure=0
ro.min_pointer_dur=1
# 16bit Transparency
persist.sys.use_16bpp_alpha=1https://drive.google.com/file/d/1SD6...T-gIATmOb/view
please share your impressions
Register or Login with Google
Hello everyone. Found an extremely stable firmware miui 12 on our phone, but it's Chinese. Are there those who could Russify it.
I can't post the link here because I haven't typed another 10 posts. I can send it in private messages, and then you will post it here.
give me link
Hello everyone. Found an extremely stable firmware miui 12 on our phone, but it's Chinese. Are there those who could Russify it.
I can't post the link here because I haven't typed another 10 posts. I can send it in private messages, and then you will post it here.
Thanks, but the file named miui12 for note3... It’s for oneplus 5 too?
Hello everyone. Found an extremely stable firmware miui 12 on our phone, but it's Chinese. Are there those who could Russify it.
I can't post the link here because I haven't typed another 10 posts. I can send it in private messages, and then you will post it here.#include <std_disclaimer.h> /* * Your warranty is now void. * * I am not responsible for bricked devices, dead SD cards, * thermonuclear war, or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at me for messing up your device, I will laugh at you. */
LineageOS is a free, community built, aftermarket firmware distribution of Android 11.x (R),
which is designed to increase performance and reliability over stock Android for your device.
All the source code for LineageOS is available in the LineageOS GitHub repo.
And if you would like to contribute to LineageOS, please visit our Gerrit Code Review.
Official LineageOS website : http://lineageos.org
About LineageOS Legal : http://lineageos.org/legal/
Important Information
1. For VoLTE, you need to enable it on stock firmware, then flash this modem via fastboot. Download link
fastboot flash modem modem.img
LineageOS 18.0:
Unofficial-build: Link
For SAT users, I added the GPU firmware of Adreno 512, but I'm not sure if it is lacking other blobs, If it works for sdm660, feedback to me please.
Google Applications (optional):
You need to find the one for Android 11.
Flashing and updating
How to flash
Make sure you upgraded to Official Android 8.1 from Sharp
Unlock bootloader is necessary.
You could flash 20201010 version via fastboot.
Root access:
Flash Magisk in recovery via adb sideload.
XDA:DevDB Information
Lineage 18.0 for Sharp S2, ROM for the Sharp S2
Thanks for heineken78's work of camera blobs on his LineageOS 17.1 build.
Source
Source Code: https://github.com/LineageOS
Device-tree: https://github.com/sharp-sdm660
ROM OS Version: Android 11
ROM Kernel: Linux 4.4
ROM Firmware Required: Official Android 11.0 firmware
Based On: LineageOS
Version Information
Status: Testing
Created 2020-10-10
Last Updated 2020-10-10Yes, yes, it's possible to love a phone. Heck, you sleep next to it, don't you? Rate this thread to indicate your love for the OnePlus 5, all things considered. A higher rating indicates that the OnePlus 5 is an incredible phone that you enjoy tremendously. You love it.
I don't feel as though I'm being asked to make unacceptable compromises for a very competitively-priced phone that has a positively screaming performance. I came into this relationship with eyes wide open (and I don't need a DSLR-quality phone camera, either). So far, I couldn't be happier with the OnePlus 5.
Got frustrated with the Nexus 6p after a year and 10 months, so I decided to buy a one plus 5. Battery life is exceptional and overall performance makes using the phone a joy. R.I.P. Nexus 6P. Really liking the device so far.
Liking my OP5 so much. I can squeeze the battery to the maximum and get many screen time hours. The camera takes really good pics (not like an S8 tough, but pretty decent) and everyone can forget about the lag. As I said, really happy!
I can def say i've grown to like the device. The camera bugged me out at first but its getting better. Coming from a S8+, I missed the speed of stock android. touchwiz is beyond laggy. The only thing i can say that bugs me is the phone not being waterproof. And i wouldve preferred not having a physically home button.
Ok so I've received my phone week ago after using it i have to admit that the phone is literally a beast! If you are looking for a phone for "The fastest" this is one you want in your hand.
I am lucky that my op5 is not affected by the "jelly effect". The things i loved
*Speaker ( almost like stereo.., actually i am a music person i listen to music most of the time i don't really like ear/head phones)
*Speed (as i said the beast in performance. I have used galaxy s8 but don't really like the TouchWiz! Tbh TouchWiz itself feels laggy!)
*Display ( i don't really care for qhd or anything so for me fhd is good for me i don't use vr.. if you are a frequent user of vr you may not like the display)
*Camera ( ok i have to admit not the best camera phone in the market but at the sametime not the worst. I don't really like the low light pictures until now thanks to gcamera hdr+ so now i am very happy in the camera department.)
*Battery ( i am getting 6.5hr+ sot. I am a music lover told you, my 4g volte + data always turned on , i use Bluetooth to connect and listen music, 3 hrs average Calling! Standby time is very good so i am very much satisfied)
Things i hate
I dont like the microphone for the Calls it captures more background sound not like the op3! Op3 was good!
Vibration motor! Still not that much improvement! Love the iPhone vibration though!
Prior to this, I utilized a Samsung Note 3 and the performance is night and day.
This is literally the fastest phone I've used, it runs smoother than my friends S8. The battery life is amazing as well. I'd give the phone a 5/5 if it were waterproof and if it had OIS. The waterproofing isn't necessary but I live in an area where it rains quite frequently, so it would have been nice. The camera is great in regular light and the video recording is good (other than the fact that is clips the edges of the videos in order to electronically stabilize it).
I'd love for it to be priced comparably to the OP3 but it is still a good phone nonetheless and hundreds of dollars cheaper than the competition.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWith some unique features
Take advantage of your AMOLED display
Why AODplus ?
Timer right from AOD
Calculator right from AOD
Stopwatch right from AOD
iSilent mode
Live brightness touch n hold on clock to adjust brightness.
See full fledge notification details like status bar.
Comparatively consumes less power than any other Always on display in the market.
Real burn in protection it revolves through entire screen not just a few pixels
All pro features included available in ad and adfree version.
Fingerprint unlock support for devices having in display scanner(requires root)
Swipe clock to see weather or calendar events.
No more brightness issue like in stock AOD
Simple UI
Lightweight
One click prayer times
-
- Low pixel engine helps reducing power consumption
- In built burn protection
- Swipe the clock to see calender or weather forecast
- Full fledge notifications like status bar all the time. Swipe left/right to dismiss
- More icons than stock AOD
- Uses low memory resources
- In built fingerprint scan to directly unlock device for devices contains in display scanner (currently supports pin/pass and rooted device)
- Auto power saving for rooted devices
- Volume rocker to mute/unmute phone like BB
- Live Brightness Press n hold on clock to adjust brighness
- In built weather app
- and many more
For non rooted devices please grant WRITE_SECURE_SETTINGS permission through adb to enable power saving feature
For battery drain issue see my second post
Auto font and color change on clock movement. Please select first digital clock for that.
double tap on clock to change font and color.
Improved calculator swipe right on clock for calc.
Pocket mode
Full Landscape mode support
Calculator right from the AOD
Last notification badge
Animation and much more
Guys please update your reviews on Play store.
Thank you for your support.
Update 10-Sep-2020 v6.0 is up
Stopwatch and Timer right from the AOD
Update 17-April-20
Music playback control added
More widgets on the way
Some code optimised
Update 24-April-20
24hour clock option added
More widgets are up
Notification details/content can be show/hide
Notification Icons size options
Now page selection option added( Calendar, Weather tab can be show/hide)
Some code optimised
Update 25April-20
Music playback bug fixed
Digital clock cutout issue fixed
Added support for Android Lollipop and Marshmallow
Update v2 11-May-20
MIUI widget added
Device reboot crash fix
Persistent Notification option added
Code optimised for Marshmallow
Update v2 6-June-20
Improved widgets
Removed unnecessary permissions
Added Notification Icon Badges
Improved Noti Icons
Battery backup improved
Added button for root access check(good for first time use)
Update v2.2 9-June-20
A quick update to previous one
Fixed root related issues
Added feature tap on hold on date to see calendar events(this will give you a quick glance of upcoming events for two months)
Misscall reminder added
Battery Threshold. Service can be disabled in low battery level
Prayer Times added
S7 Style widget display cutout bug fixed
Improved UI
AOD+ free version is available on play store
Adfree version available play storeI use visual studio for programming in C++ and am interested in learning to develop for android. I have previously done so in eclipse but it has been 2 years or so and that was in Java. I am interested in programming in C++ and was curious what IDE y'all used.
Thanks,
Fish.Now my problem is, I don't find a starting point. I have to say I don't have much (read: almost none) experience with writing Android apps (although I have a lot of programming experience otherwise). Thus I have no idea how such an animation would be implemented. I searched for references to the Scroller class and replaced the duration argument of the startScrolling method by 5ms, but this didn't change anything.
Is there any way to run the app in some kind of debug mode to see which methods are called at which time? Another idea how to find the right spot might be the trigger of the scroll: I am using the hardware page turn buttons of the device to scroll down exactly one page. How would this be implemented, what should I search for to find the code that reacts on these buttons? (Also: how can I press these buttons in the emulator?)
I am sorry if I am asking too many noob questions. If there is relevant documentation I have obviously missed, please point me to it. Thank you very much for any help!I cannot get the stylet to work. Is there a trick?
Do I need an art program to use it in first?
Noob..... until someone helps me.
Thanks, ER
Register or Login with Google
I bought my husband a Galaxy 10.1 tablet and a Slate 7 Digitizer Stylet.
I cannot get the stylet to work. Is there a trick?
Do I need an art program to use it in first?
Noob..... until someone helps me.
Thanks, ERXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Servicefor those devs that are using a free / paid app model, how do you keep track of users when they convert from the free to the paid version of the app?
Background: I have built a game app which has a free and a pro version. Users do not need to login to use the free version. When they upgrade to the pro version, Firebase / Google Analytics loose track of what that user has been doing in the past, because there is no userID tying the two apps together. This might be an edge case, but has anybody dealt with this before? Any thoughts would be appreciated
Cheers,
PhilippHi. I have a galaxy s10+. Problem is when i am on a normal call and someone calls me on whatsapp, the speaker turns on automatically. I have a nokia 6 and an huawei nova3i and on these devices if i am on a normal call i will get a notification of the whatsapp call after my normal call is done. How do i do the same for my s10+.
I have tried factory reset and it is still the same. I have tried with only whatsapp installed and no other application and it is the same. Need help guys!!!!
ThanksXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Service@73sydney Labeling the icons was a topic on the chat already… and an issue on github, I think. The UI has been updated, but is still evolving. That's why it's hard to write good documentation without having it outdated after 1 or 2 months again.
Regarding your issues:
You might have missed to confirm the filter with the green button on the bottom (you might have to scroll down in the fragment a bit).
If you want to backup something, just tap on the app and select backup on the bottom of the "AppSheet" that appears then. Or you can do a batch backup if you change the mode to it with the icons that come up when you scroll up a bit (hint: keep pressing a button to get a hint what the button does). I think, there is a high chance, that some of you apps fail to be backed up because of symlinks. Version 4 should be more reliable.
Just give it a try, don't be sad, if it doesn't work perfectly. The development is still very active (removing/replacing legacy stuff, making sure the data is consistent, optimizing the performance etc). Some people tried the new version 4 and reported new bugs and it's known that the UI has some issues because a central structure was replaced and it seems that there are still some combinations of the settings that cause issues.
Maybe it's the right time, to invite some Android experts. Currently the data consistency is a hot topic. To close an app or not to close an app, how is it restarted at the end and how to keep it from restarting during backup? If anyone wants to join, just join via Matrix or Telegram.
I'll check out github issues though in future
I did tap the confirm button, it seems to do something but then comes back with no apps lin lis resetting to default (paraphrasing as away from device at the moment)
Literally nothing i tried got me all my user apps ticked ready for backup, if youre saying that i have to tick then one by one, then we're going to have an issue friend
So as yet, havent even tried a backup bacause i cant (short of ticking every app, skipping over the systenm and other special items ive asked the filter to hide but it doesnt) select the apps i want to backup...kinda catch22
Look im willing for anyone to piont out where im going wrong and even me made to feel like a numpty, but im a relatively smart guy, i have my full frontal lobe intact and ive managed to figure out every app in Android history until now
I get that youre also in the deep end currently with updating to a v4, so perhaps ill monitor and check back in when the dust settles a bit!
Cheers for the replyHuge thanks to @topjohnwu for his magic.
YOU NEED TO UNLOCK YOUR BOOTLOADER!
In case you brick your device, use this unbrick guide
If you get into a boot-loop by flashing problematic magisk modules, consider using the patched recoveries from my post HERE to remove the modules.
Skip to step #5 and then #9 if you do not want to use the payload dumper tool and want to directly flash the patched images for your variant and Build version!
0) If you haven't updated OxygenOS yet, download it via the system updater. It will be stored in /sdcard/.Ota folder in your internal storage ( /sdcard/.Ota/OnePlus8TOxygen_15.I.16_OTA_0160_all_2010150110_84 be0c.zip )
The size should be >2GB. If it is not, it's probably an incremental OTA, not a full one. This guide will NOT work on incremental OTA Zips.
DO NOT Reboot or else you will lose the file
1)Copy the ZIP file over to your PC
2) Download the Payload Dumper
Alt dumper for windows only:
1.Put payload.bin to "payload_input" folder
2.Run payload_dumper.exe
3.Successfully extracted img files are in "payload_output" folder
Extract the zip in the folder where you downloaded the payload dumper.
3) Follow the instructions in the readme of payload dumper, and extract the OTA images:
python payload_dumper.py payload.bin
4) Proceed with installing the OxygenOS update and reboot the phone.
5) Download and install the latest magisk canary release to your phone : https://raw.githubusercontent.com/to.../app-debug.apk
6) Copy over the boot.img file created by payload_dumper to your internal storage
7) Open Magisk Manager > Select Install > "Select and patch a file"
8) Browse and select the boot.img file.
Magisk will create a patched boot.img file in /sdcard/Downloads/magisk_patched.img . Copy this file over to your PC.
9) Reboot to fastboot mode
adb reboot bootloader
I recommend to BOOT first and then perform a direct install via magisk as it is more reliable to patch the active slot.
To flash:
fastboot flash boot magisk_patched.img
fastboot boot magisk_patched.img
This will install magisk on the active boot slot and the next reboot will give you root.
PS: For the curious / impatient, Here are the OTAs / boot images for the different 8T Versions:
To find your model and build to download the right file:
adb shell getprop ro.product.model KB2001 adb shell getprop ro.build.version.ota OnePlus8TOxygen_15.I.16_GLO_0160_2010150110 adb shell getprop ro.build.display.id KB2001_15_201015
OTA ZIP:
https://www.androidfilehost.com/?fid...59528675571812
STOCK boot.img
https://www.androidfilehost.com/?fid...59528675571813
If you are already on the same build number and you've lost the OTA zip, you can use this boot.img to patch via the canary magisk manager.
Patched boot.img
KB2000_Magisk_15.H.16_OTA_0160_all_2010150101_4101 .img
KB2001 - Indian Variant - OnePlus8TOxygen_15.I.16_GLO_0160_2010150110
OTA ZIP (md5sum d1a944205b91898a84b082c57ebac5a8 ):
https://www.androidfilehost.com/?fid...59528675568453
STOCK boot.img (md5sum 3202f74ea45b906e9f0ea7cfcd81a014 )
https://drive.google.com/file/d/1Ct7...G6KZLD2eq/view
If you are already on the same build number and you've lost the OTA zip, you can use this boot.img to patch via the canary magisk manager.
MAGISK patched boot.img which you can flash/boot directly.
KB2001_magisk_patched_11.0.1.2.KB05DA.img
KB2003 - EU Variant - OnePlus8TOxygen_15.E.17_GLO_0170_2010150108
OTA ZIP (md5sum d35a2963d193276c1ea7e4832fc08a42 ):
https://www.androidfilehost.com/?fid...59528675568414
STOCK boot.img (md5sum af4bb15254d38ab17167583eba23d5bd )
https://www.androidfilehost.com/?fid...59528675568456
If you are already on the same build number and you've lost the OTA zip, you can use this boot.img to patch via the canary magisk manager.
MAGISK patched boot.img which you can flash/boot directly.
boot_magisk_patched_11.0.1.2_EU.img
KB2005 - US Variant - Build KB2005_15_201015
Credit @northmendo and @SAKO4444GODZ
UPDATE:
For this variant please refer to this guide first! The OTA updates on this variant are partial and hence the rooting method isn't straightforward.
https://forum.xda-developers.com/sho...3&postcount=95
Stock KB2005_15_201015 boot image SHA-1 D59C74767F74F4D7876BDCA930DEF23CCAA3FD2E
Patched KB2005_15_201015 boot image SHA-1 C1126E8057EF9FB25D80645B850374BBDDE983C5
It's also a good practice to backup a few important partitions once you're rooted.
I used ADB shell, but you can use any terminal emulator from the play store (Termux)
adb shell
[email protected]:/ $ su
[email protected]:/ #
Now run:
dd if=/dev/block/platform/soc/1d84000.ufshc/by-name/modemst1 of=/sdcard/modemst1.img dd if=/dev/block/platform/soc/1d84000.ufshc/by-name/modemst2 of=/sdcard/modemst2.img dd if=/dev/block/platform/soc/1d84000.ufshc/by-name/modemdump of=/sdcard/modemdump.img dd if=/dev/block/platform/soc/1d84000.ufshc/by-name/persist of=/sdcard/persist.img dd if=/dev/block/platform/soc/1d84000.ufshc/by-name/persist_bkp of=/sdcard/persist_bkp.imgXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceOnce the user connects to that Wifi, he gets a popup to install that chat room app and he could view the chats of all the people and can reply back in the chat window. People can start many discussions and everyone connected can view, post and comment.
If this kind of an app is already available, please let me know the app link.
Thanks,
RakeshNow on functionality of our App:
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )The HTC U Ultra was announced in January 2017 as a 5.7 inch phone with a 1440x2560p resolution. The Snapdragon 821 chipset has a Quad-core (2x2.15 GHz Kryo & 2x1.6 GHz Kryo) CPU and an Adreno 530 GPU. The back facing camera has a 12MP sensor and the selfie cam is 16MP. The battery has a capacity of 3000 mAh.The Galaxy S8 from Samsung comes in two flavors this year. You can choose between the classic S8 or the S8+. The larger S8+ has a huge 6.2" screen with 1440 x 2960 pixels. The Snapdragon 835 chipset has an octa-core (4x2.45 GHz Kryo & 4x1.9 GHz Kryo) CPU and an Adreno 540 GPU. You'll have options for either 64GB or 128GB of internal storage and 4GB of RAM. The primary camera has a 12MP setup in the back and the selfie camera is 8MP. The 3500mAh battery comes with quick charging and wireless charging.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Servicehttps://forum.xda-developers.com/xpo...lipop-t3180960
https://androidfilehost.com/?fid=385035244224402234
Register or Login with Google
https://forum.xda-developers.com/xpo...lipop-t3180960
hello.
i have sm-t280 tablet and i need to change bootlogo. i tried all of ways but no result. can you help me please?
Alright, I got it all worked out; should be pretty robust now:
https://github.com/osm0sis/dhtbsign
I'll have support added for Android Image Kitchen v2.9.Most Android applications are built using Google's official Android SDK, though there are dozens of other cross-platform mobile development frameworks that make it easier to build once and deploy on multiple operating systems. jQuery Mobile, Titanium (generates nativa Java code), Adobe PhoneGap, and Sencha Touch are the most popular HTML, CSS, and javascript-based frameworks, aimed at Web developers. Xamarin (C#), MoSync (C++), and RhoMobile (Ruby) were built for developers with knowledge of specific programming languages. There are also several frameworks aimed at game developers: Corona SDK, Flixel, Unity3D, etc. Discuss all of these here.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceLineageOS is based on the Android Open Source Project with extra contributions from many people within the Android community. It can be used without any need to have any Google application installed. Linked below is a package that has come from another Android project that restore the Google parts. LineageOS does still include various hardware-specific code, which is also slowly being open-sourced anyway.
All the source code for LineageOS is available in the LineageOS Github repo. And if you would like to contribute to LineageOS, please visit out Gerrit Code Review.
/* * Your warranty is now void. * * I am not responsible for bricked devices, dead SD cards, * thermonuclear war, or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at me for messing up your device, I will laugh at you. */
- Upgrade to latest available official firmware
- Download the LineageOS zip(s). (see Downloads)
- Copy the LineageOS zip to internal sdcard
- Remove lockscreen PIN
- Boot into TWRP
- Optional: Perform a backup of your current ROM
- Do a factory reset (including data). No support if you didn't.
- Flash LineageOS
- Optional: Install the Google Apps addon package (see Downloads)
- Reboot
HOW TO UPDATE LINEAGEOS:
- Remove lockscreen PIN
- Download the LineageOS zip(s). (see Downloads)
- Copy the LineageOS zip to internal sdcard.
- Flash LineageOS.
- Reboot
DOWNLOADS:
LineageOS 18.0: Unofficial
Firmware: https://sourceforge.net/projects/crd...r/6.x/firmware (Thanks for neobuddy89 @ crdroidandroid)
TWRP: Official
Device specific source code: LineageOS-oneplus5
LineageOS source code: LineageOS
Android version: Android 11
Kernel version: Linux 4.4.y, branch op8998-eleven
Required firmware: OOS 10.0.0 hotfix 1
Status: Beta
Created 2020-10-08For the OnePlus 5 you have one option and that is any displaylink adapter.
A simple hdmi device will not work, period.
Register or Login with Google
For the OnePlus 5 you have one option and that is any displaylink adapter.
Alright, could you recommend me a cheap displaylink adapter?
I have a thread on this somewhere.
Have to be honest, a lot of these are expensive.
Check my thread out on displaylink it's still there somewhere.
Bunch of other people recommend some in that thread
Could you tell me if this one would work on the OP5?
https://www.amazon.de/dp/B07GDD8Y5W/..._zjsrEb7S2W4GPThe YU Yureka is an Android based dual-SIM smartphone, developed by Micromax in partnership with Cyanogen Inc, under the brand name YU, with a release date of 13th January 2015. The Yureka features a 5.5" 720 x 1280 IPS LCD display with Gorilla Glass 3. It's powered by a 64-bit 1.5GHz octa-core Snapdragon 615 processor, Adreno 405 GPU and 2GB of RAM. Internal storage comes in at 16GB, which is expandable to 32GB via microSD card. The rear camera sports a 13MP Sony Exmor CMOS sensor with an F/2.2 aperture, while the front facing camera features a 5MP sensor. All this is backed by a 2500mAh battery.Step 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingQuote:
Originally Posted by maramsoftware
Maram Soft is one of the Best Mobile App Development Company in India which coverts your ideas to a perfect Android, iOS and Web Application
Thanks for this post. I would also, like to add that there are a lot of companies that act in this field. Developing mobile apps is now like learning a new language to speak. You may add to your list another online app creating tool which is SeattleClouds (seattleclouds.com). It has quickly become my favorite platform for building an app. In just a couple of months I created my own apps for AppStore, Google Play and now I'm working on duplicating these apps for Amazon Store.
Looking forward for the above list to be longer, so that everybody would have the possibility to make the comparison and choose the tools that fit them most.The OnePlus 8T is a 6.55" phone with a 1080x2400p resolution display. The Qualcomm SM8250 Snapdragon 865 chipset is paired with 8/12GB of RAM and 128/256GB of storage. The main camera is 48+16+5+2MP and the selfie camera is 32MP. The battery has a 4500mAh capacity.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe OnePlus X is a compact handset with a budget-friendly price. It's OnePlus' third handset, featuring a 5.0" 1080p AMOLED display, a Snapdragon 801 CPU with 3GB of RAM, and the ability to use two SIMs, or one SIM plus a microSD card. The camera is 13MP sensor with f/2.2 aperture, and the front camera takes photos at 8MP with f/2.4 aperture. The OnePlus X comes with a glass back, or, in limited quantities, you can get a unit with a ceramic back. The battery is 2525mAh, and while it can't be removed, the back cover can be swapped for different backplates available from OnePlus.In the process of customization, I'm in the need of a (music) application to show streaming information about tracks playing over Bluetooth.
Obviously, I can use whatever app to play music locally saved on the autoradio itself, or to stream it online, e.g. Spotify, but I'd like to find an alternative to (at least) show what I'm playing on the phone and streaming on the car via Bluetooth.
Does anybody have any idea or tip?I wonder if anybody here could modify this widget so that it was possible to use with any launcher.
My wife wants this widget on her phone but I've been looking all over the internet and can not find the widget in order to work in any auncher and for this reason I ask for your help.
This is youtube link: https://www.youtube.com/watch?v=7AEulmeG8P4
- Here gives to have an idea of how the widget.
I found the widget and put the link to download if some one can test.
Link to download http://www30.zippyshare.com/v/14124762/file.html
Thanks for you attencion and sorry my english because im portuguese. and a newbie in this things from android.Although the original Samsung Galaxy Note held a unique product segment by being neither traditional tablet nor traditional phone, the Galaxy Note 10.1 is clearly a tablet. However, the device packs some features from its namesake by including S-Pen support. The device itself packs a healthy specs punch with a quad-core 1.4 GHz Samsung Exynos 4412 processor. The processor is backed by 2 GB of RAM, up to 64 GB of storage, a 7000 mAh battery, and a 10.1" 1280x800 PLS screen. All of this is packed into a lightweight 600 gram package that is just 8.9 mm thick.I'm seeing some strange error messages inside the Recovery Mode of my Galaxy Tab A (SM-T550):
"E: couldn't load bitmap pocchange_00009 (error -7)"
........
"E:failed to open /dev/block/boot/device/by-name/misc: no such file or directory"
- please see attached photo of screen.
Important to note that this tablet has never been rooted or had a custom recovery or rom put on.
Stock all the way.
I tried a factory reset and even flashing the original firmware via Odin.
Unfortunately neither of these made these weird messages disappear.
Any ideas??I have 2 apps on playstore and I am using interstitial and banner ads from Admob. While interstitial seems to be ok, banner eCPM on Admob is 1-2 cents. Is that normal?
Not sure if it is even possible but are there ways to boost Admob eCPM??
I have tried other ad networks but those have low fill rate.I am not responsible for bricked devices, or any other hardware malfunctions that comes as a result of flashing this ROM, Please do some research if you have any concerns about features included before flashing it, this ROM was built for the SM-T350 if you choose to flash this on any other device do so at your own risk!
crDroid Features
https://github.com/crdroidandroid/cr....0/README.mkdn
Thanks
@retiredtab for all working tirelessly on the android 10 build especially for the audio fix
@lividhen99 for keeping the Pie builds going
CrDroid team
-Bug Reporting-
1 - Take a logcat full output after the issue occurs
2 - What is the issue?
3 - Were there any modifications made (root,custom kernel etc)
4 - Attach or link the file.
If you are having problems flashing this ROM you are most likely running into issues other members were having with the device most of which were already solved, please spend some time reading through this post of other posts related to this device.
-Installation instructions-
1. Download the ROM and GApps(ARM, 10.0, pico) and transfer them to your device.
2. Boot to recovery (TWRP recommended).
3. Do a full backup of your device
4. Wipe the System, Cache, Data and ART/Dalvik cache. (Recommended)
5. Flash the ROM Zipfile.
6. Flash the GApps (optional, needed for e.g. Google Playstore to work).
7. Flash the root solution of your choice (optional).
8. Reboot your device.
TWRP 3.3.1 SM-T350 DOWNLOAD
Download crDroidAndroid-10.0 SM-T350 Build 2020-10-11
MD5 FILE
-Backlight issues-
Read this post https://forum.xda-developers.com/sho...1&postcount=41
XDA:DevDB Information
crDroid Android 10.0, ROM for the Samsung Galaxy Tab A series
Contributors
nubianprince
ROM OS Version: Android 10
ROM Kernel: Linux 3.10.x
Version Information
Status: Stable
Beta Release Date: 2020-09-05
Created 2020-09-03
Last Updated 2020-10-25General Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialswould an adapter like this work: https://www.amazon.de/Anker-Aluminiu...c+hdmi+adapter
i would like to use it with a nexDock (until my Superbook arrives)
will the op5 support displayLink?
Register or Login with Google
does the op5 support HDMI output?
would an adapter like this work: https://www.amazon.de/Anker-Aluminiu...c+hdmi+adapter
i would like to use it with a nexDock (until my Superbook arrives)
will the op5 support displayLink?
There are hdmi related lines in buildprop but im sure the device doesnt support it.
OK some bad news.
Just tried my Anker https://www.amazon.co.uk/d/USB-Hubs/...ker+usb-c+hdmi
And my Apple USB-C to HDMI https://www.amazon.co.uk/d/50t/Apple...+usb-c+to+hdmi
Neither of them even pass through current, which is really really bad, i'm livid as I sometimes play games in work on my monitor when it's really quiet.
So so so bad on Oneplus' part here, this is the first big problem i've had, means you can't stream low latency to your TV using a cable? Wtf would you remove that feature?
Woeful behaviour.
PS: If anyone thinks that wireless streaming is on par with a direct line to your phone for the likes of gaming or even watching movies, you're wrong.
Annoyed the hell out of me that has.
---------- Post added at 12:16 PM ---------- Previous post was at 12:14 PM ----------
Would this suggest that it can be modified, USB-C is USB-C? Could this be enabled do you think? Hate it when features are removed for no good reason
---------- Post added at 12:42 PM ---------- Previous post was at 12:16 PM ----------
Ok so just added this line to the buildpro in /system
com.qc.hdmi_out=true
This actually allows the power to pass through but does nothing for output, both adapters now allow juice to pass through, i'll keep digging, there must be a way to allow this.
---------- Post added at 01:02 PM ---------- Previous post was at 12:42 PM ----------
OK so after a little digging i've found that the VESA DisplayPort Alternate Mode may be an option should it be supported? Uses display link
Ok we could use the chromecast which for video is just about ok, but for perfect lip sync and gaming? Forget about it, it's a sub par peripheral which just can't cut it.
I just so happen to have a display link adapter in work so i'll be testing this on Monday. Personally I can't see it but will try.
You can try to add HDMI related lines from Galaxy s7
I tried as well on my adapter for my chromebook.. No dice. It's not being recognized. My Chromecast works fantastic though. 😁😃
Sent from my OnePlus 5 using XDA LabsXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceQuote:
Originally Posted by bryanGil0410
What could be the top 5 best Ad Networks out there? I'm thinking of adding more because others say they do have more than 3 ad networks.
This will always change depending on the advertiser's campaigns and time of the year. Also, depending on the app's geo, target audience, amount of impressions and DAU, each ad network will provide a different result in different times of the year.
Also, hen you work directly with networks, you spend lots of time adjusting the waterfall manually.
I recommend you to try mediation. With this, you can implement several ad networks at the same time and make them compete, so you will always get the highest paying bid.
Check out Appodeal. And FYI, if you already have a good setup with a particular ad network, you can keep it and still integrate other networks with Appodeal's SDK.GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
- Launcher supports work profile apps and dual apps from various oems
- Launcher supports Android 10+ gesture system but restricted.
- Groups allow users to create organized folders of apps available in the Groups Sheet
- Personalized search in the Search Sheet
- A revised single screen interface introducing a new layered material design.
- Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
- The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
- The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
- Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
- The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
- Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
- The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
- The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
- The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
- The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
- The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
- Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
- Recent Apps don't have a long click listener (no sheets).
- The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
- The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
- App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
- GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
- Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
- Users can block apps from showing badges and priority notifications.
- Launcher sheets can be accessed from the launcher menu.
- The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
- Widgets can be resized by long clicking on them and a resize module will appear (WIP).
- The launcher settings will theme itself on Android 10 light or dark mode.
- Launcher settings features smart suggestions that appear on certain variables available
- Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
- The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
- Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
- GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
- System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
- Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
- The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
- GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
- Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
Links:
XDA Original Post
V1 XDA Thread
Drywall Wallpaper Manager
Launcher Manager for Testing Launchers
GCA Telegram Channel
GCA Telegram News Channel
Download : GCA V2 Open Beta
(Download will also be available in the Telegram News Channel)Register or Login with Google
Welcome to the XDA Android apps and games forum. Here you can find apps and games made by XDA members. Many developers use this forum as a way to get feedback for their apps so feel free to report bugs and request new features. We also have a Community Apps set of forums, which contains authorized support forums for popular apps such as Xposed, Framaroot, MX Player, AirDroid and others.I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveCHANGELOG for 3.1.1-0:
-Backups will now include adopted storage keys (Dees_Troy)
-Fixed an adb restore issue (bigbiff)
-Fixed rebooting when no OS is present (Dees_Troy)
-Fixed line wrapping in the GUI terminal (_that)
-Updated TWRP source code to AOSP 7.1.2 (Dees_Troy)
CHANGELOG for 3.1.0-0:
-vold decrypt on a few select HTC devices, TWRP will now attempt to use the system partition's vold and vdc binaries and libraries to decrypt the data partition (nkk71 and CaptainThrowback)
-adb backup to stream a backup directly to or from your PC, see documentation here: https://github.com/omnirom/android_b...863b15c16949d9 (bigbiff)
-tweak MTP startup routines (mdmower)
-support new Android 7.x xattrs for backup and restore to fix loss of data after a restore (Dees_Troy)
-support POSIX file capabilities backup and restore to fix VoLTE on HTC devices and possibly other issues (Dees_Troy)
-better indicate to users that internal storage is not backed up (Dees_Troy)
-improve automatic determination of TW_THEME (mdmower)
-minimal getcap and setcap support (_that)
-try mounting both ext4 and f2fs during decrypt (jcadduono and Dees_Troy)
-shut off backlight with power key (mdmower)
-timeout during FDE decrypt (Dees_Troy and nkk71)
-support for FBE decrypt and backing up and restoring FBE policies (Dees_Troy)
-boot slot support (Dees_Troy)
-TWRP app install prompt during reboot (Dees_Troy)
-support for AB OTA zips (Dees_Troy)
-support new Android 7.x log command (Dees_Troy)
-update recovery sources to AOSP 7.1 (Dees_Troy)
-numerous bugfixes and improvements by too many people to mention
CHANGELOG for 3.0.2-0:
-Fix a bug with the input box that affected masked inputs (passwords). This fixes decrypt of full device encryption on devices that support decrypt. This bug also impacts encrypted backups. Users are highly encouraged to stop using 3.0.1 if you use encrypted backups or if you need decrypt of data in TWRP.
-Add Greek translation to some builds.
CHANGELOG for 3.0.1-0:
-support new CM 13.0 pattern encryption (sultanqasim)
-fix slow flashing issue due to modprobe (present on only some devices) (#twrp)
-libtar updated to latest upstream and fixes (jcadduono)
-fixes for loading custom themes (_that)
-TWRP will now detect and install TWRP themes automatically through the normal zip install process (Dees_Troy)
-translation updates - added Italian, Czech and Polish and significant updates to Dutch
-progress bar improvements - progress bar updates during image flashing and better tracks progress during file system backups (tar) (Dees_Troy)
-fix input box text display (Dees_Troy)
-reboot option after zip install complete (bigbiff)
-other mostly invisible bug fixes and improvements
CHANGELOG for 3.0.0-0:
-Completely new theme - Much more modern and much nicer looking (by z31s1g)
-True Terminal Emulator - Includes arrow keys, tab and tab completion, etc. (by _that)
-Language translation - It won’t be perfect and especially some languages that require large font files like Chinese & Japanese won’t be availble on most devices. Also some languages may only be partially translated at this time. Feel free to submit more translations to OmniROM’s Gerrit. (mostly by Dees_Troy)
-Flashing of sparse images - On select devices you will be able to flash some parts of factory images via the TWRP GUI (by HashBang173)
-Adopted storage support for select devices - TWRP can now decrypt adopted storage partitions from Marshmallow
-Reworked graphics to bring us more up to date with AOSP - includes support for adf and drm graphics (by Dees_Troy)
-SuperSU prompt will no longer display if a Marshmallow ROM is installed
-Update exfat, exfat fuse, dosfstools (by mdmower)
-Update AOSP base to 6.0
-A huge laundry list of other minor fixes and tweaks
WARNING: This is our first release in a long time. We have a lot of new and somewhat aggressive changes in this new release. The changes to the graphics back-end may cause some devices to not boot up properly or have other display-related issues. If you are not in a position to reflash an older build of TWRP, then wait until you are or at least wait until others have tried the new version for your specific device. You don’t want to end up with a non-working recovery and have to wait several hours or days to get to a computer to be able to fix it.
Notes for themers: In addition to the udpated theme, we have introduced a theme version variable to the TWRP theme system. If the theme version does not match the version that TWRP expects, TWRP will reject the custom theme and load its stock theme. This change will ensure that people who update TWRP without updating their theme will still have a workable recovery. We have removed libjpeg support. The stock theme was only using a jpeg image for the splash / curtain. This change means that any custom themes will no longer be able to use jpeg images. It also means that tools used to repack recovery images with a different curtain / splash will need to be updated to use the new method.
Version number notes: For a while we’ve been using a 4 digit version number and reserved the 4th digit for device-specific updates. For instance, we find and fix a device-specific issue like decryption of data on Nexus 5, we would release that as a 2.8.7.1. After a while, some people would start asking where 2.8.7.1 was for other devices. So, going forward we have decided to change the numbering scheme to 3.0.0-2, etc. Our hope is that this version numbering scheme will more clearly identify that the 4th digit does not indicate a version change for the code base.
We need your help! The bulk of TWRP work is done by 3 people on a volunteer basis. We have pushed most of our device files to our github and we have a gerrit instance. If you have the ability, please help us maintain our official devices and/or add your device to our official device list. Thanks in advance!
DOWNLOAD:
1) Install the TWRP app from the Play Store or grab the apk from our website
2) Open the app, agree to the terms, and enable root access
3) Select TWRP Flash
4) Search for your device and select the version you wish to download
5) Once the download is complete, select the file (it's usually in your downloads folder) and then Flash Recovery
OR:
Most devices can be updated quickly and easily within TWRP if you already have version 2.8.4.0 or higher installed
1) Download the latest version from our website on your device
2) Reboot to TWRP
3) Hit Install and tap the "Images..." button in the lower right
4) Browse to the location of the TWRP image on your device and select it
5) Select recovery from the partition list and swipe to flash
OR:
You can find more information and download links on our website.
BUGS:
If you have found a bug, please consider posting it to our github issues log. It's pretty much impossible for us to keep up with the more than 40 threads that we have for the devices that we "directly" support. If you have a significant problem that cannot be answered in this thread, your best bet is to PM me directly, contact us via our website, or find us in our IRC channel below. If you see someone that's struggling, feel free to point it out to us. We need your help to help us keep track of all of our devices! Thanks!
SUPPORT:
Live support is available via #twrp on Freenode with your IRC client or just click this link.More
3 posts
Join Date:Joined:Nov 2019
Less
iOS is the most fun platform for Mobile Devices and people are crazy about iPhone. So is the case with IOS and iPhone Application Development. With a huge list of features and one of the best App Stores available, this device is the perfect companion for any Individual or Business User. iPhone App Development is always at the core whenever a business or an enterprise formulates its mobile strategy. For More Information visit - aalpha.netI decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
At First Download
1.Notpad++
2.Boot.img unpacker
3.Win rar or 7zipper
MT6582 MOBILE
MT6582 mobile camera not conect:
STEP 1:
copy these from stock ROM to port ROM
system\lib\hw\camera.default.so
(N.B.if you have two files like camera.goldfish.so delete this the one with the goldfish)
system/lib/ libcamdrv.so
system/lib/libcamalgo.so
system/lib/libcameracustom.so
system/lib/libdpframework.so
system\etc\permissions\android.hardware.camera.xml
STEP 2:
unpcack the boot.img from Port ROM
open init.rc file add/replace below lines
#Camera
#chmod 0660 /dev/FM50AF
chmod 0660 /dev/OV8825AF
chmod 0660 /dev/CAM_CAL_DRV
#chown system camera /dev/FM50AF
chown system camera /dev/OV8825AF
chown system camera /dev/CAM_CAL_DRV
& repack boot.img
MT65XX MOBILE
STEP 1:
& Other mediateck Mobile camera not conect :
copy these from stock ROM to port ROM
system\lib\hw\camera.default.so
(N.B.if you have two files like camera.goldfish.so delete this the one with the goldfish)
system\lib\libcamera_client.so
system\lib\libcameracustom.so
system\lib\libcameraprofile.so
system\lib\libcameraservice.so
system\etc\permissions\android.hardware.camera.xml
STEP 2:
unpcack the boot.img from Port ROM
open init.rc file add/replace below lines
#Camera
#chmod 0660 /dev/FM50AF
chmod 0660 /dev/OV8825AF
chmod 0660 /dev/CAM_CAL_DRV
#chown system camera /dev/FM50AF
chown system camera /dev/OV8825AF
chown system camera /dev/CAM_CAL_DRV
& repack boot.img
Some Bug Fix All Mediatek Mobile
####
Camera Force closed or camera not conect :
copy these from stock rom to port Rom
system\lib\hw\camera.default.so
system\lib\libcamera_client.so
system\lib\libcameracustom.so
system\lib\libcameraprofile.so
system\lib\libcameraservice.so
system\lib\libmhal.so
system\lib\libmhalcontent.so
system\lib\libmhaldrv.so
system\lib\libmhalmdp.so
system\lib\libmhalpipe.so
system\lib\libmhalscenario.so
system\lib\libmhalutility.so
system\etc\permission\android.hardware.camera.fron t.xml
system\etc\permission\android.hardware.camera.xml
FOR CAMERA NOT CONNECTED ISSUE /CAMERA GREEN /CAMERA FORCE CLOSE "unfortunately camera has stopped"
Replace first libcamdrv.so (needed for 6582
devices) and check if not success then replace
libcameraservice.so from/lib.
Camera Focus Problem :
system/lib/libcameraservice.so
system/lib/libfeatureio.so from
[NB:These step not required for some mobile]
#####
Audio Problem :
AUDIO NOT COMING IN LOUDSPEAKER MODE
Replace to
system/lib/libaudio.primary.default.so
[If still sound related problem: Replace all libaud*.so Sometimes replacing all audio files give you a boot loop in that case replace only]
system/lib/libaudio.a2dp.default.so
system/lib/libaudio.primary.default.so
system/lib/libaudiocompensationfilter.so
system/lib/libaudiocustparam.so
system/lib/libaudiosetting.so
system/lib/libaudioutils.so
system/lib/libcustom_nvram.so[HIGH AUDIO VOLUME ISSUE]
[N.B. Some phone not working]
#####
SD CARD PROBLEM :
fix internal & external SD Card Problem mount
system/etc/vold.fstab [mount problem Fix]
system/etc/vold.fstab.nand
system/etc/vold [Default problem fix]
#####
Download epo Problem :
Replace in framework folder
mediatek-common.jar
mediatek-framework.jar
mediatek-op.jar
mediatek-telephony-common.jar
#####
3G Problem
Replace to
system/etc/mddb
system/etc/agps_profiles_conf.xml
system/etc/apns-conf.xml
system/etc/epo_conf.xml
system/etc/spn- conf.xml
system/etc/virtual-spn-conf-by-efpnn.xml
system/etc/virtual-spn-conf-by-efspn.xml
system/etc/virtual-spn-conf-by-imsi.xml
####
WiFi
WIFI TOGGLE PROBLEM :
system/etc/wide-dhcpv6
system/etc/wifi
system\lib\modules\mtk_stp_wmt.ko
system\lib\modules\mtk_wmt_wifi.ko
####
COMPASS PROBLEM :
system/lib/libsensorservice.so
####
VIDEO SHOWING PIXELS AND GLITCHES PROBLEM :
system/lib/libvcodecdrv.so from /lib
####
FM PROBLEM
system/lib/modul/mtk_fm_drv.k0
####
GPS Problem:
system/lib/module folder mtk_stp_gps.ko
###
TOUCH SCREEN PROBLEM :
system/lib/libinput.so
########### Again Share My Old Experience ##########
Sim card problem :
*system/bin
SD Card Problem :
*system/etc/vold.fstab
*system/etc/vold.fstab.nand
Camera Focus Problem :
*system/lib/libcameraservice.so
[NB:These step not required for Walton Primo GF,GH,GH+ & GH2]
Boot loop problem :
*system/lib/libandroid_runtime.so
*system/lib/libandroid_servers.so
*system/lib/libmedia_jni.so
Other Problem :
*system/etc/dhcpcd
*system/etc/permissions
*system/etc/security
*system/etc/audio
*system/etc/bluetooth
*system/etc/wifi
*system/lib/drm
*system/lib/egl
*system/lib/soundfx
=================BUILD.PROP TWEAKS==================
# By PurePerformances NK
# System Tweaks
ro.HOME_APP_ADJ=1
ro.mot.eri.losalert.delay=1000
ro.config.hw_fast_dormancy=1
ro.ril.enable.amr.wideband=1
ro.config.hw_fast_dormancy=1
ro.config.hw_quickpoweron=true
# Miscellaneous Tweaks
persist.sys.NV_FPSLIMIT=90
debug.qctwa.statusbar=1
debug.qctwa.preservebuf=1
debug.qc.hardware=true
com.qc.hardware=true
ro.telephony.sms_segment_size=160
persist.telephony.support.ipv6=1
persist.telephony.support.ipv4=1
ro.config.hw_fast_dormancy=1
persist.sys.shutdown.mode=hibernate
ro.config.hw_power_saving=true
ro.media.enc.hprof.vid.fps=65
ro.mot.buttonlight.timeout=1
ro.ril.set.mtu1472=1
touch.presure.scale=0.001
# Makes streaming videos stream faster
media.stagefright.enable-player=true
media.stagefright.enable-meta=true
media.stagefright.enable-scan=true
media.stagefright.enable-http=true
media.stagefright.enable-record=true
# Graphics Enhancement
debug.performance.tuning=1
video.accelerate.hw=1
ro.media.dec.jpeg.memcap=20000000
ro.media.enc.hprof.vid.bps=8000000
ro.media.enc.jpeg.quality=100
# Scrolling Responsiveness
windowsmgr.max_events_per_sec=90
persist.cust.tel.eons=1
# Power Saving Tweaks
ro.ril.disable.power.collapse=1
pm.sleep_mode=1
wifi.supplicant_scan_interval=180
# Dialing Tweaks
ro.telephony.call_ring.delay=0
ro.lge.proximity.delay=25
mot.proximity.delay=25
# DalvikVM
dalvik.vm.verify-bytecode=false
dalvik.vm.execution-mode=int:fast
dalvik.vm.checkjni=false
dalvik.vm.dexopt-data-only=1
dalvik.vm.heapstartsize=1m
dalvik.vm.heapgrowthlimit=64m
dalvik.vm.heapsize=128m
dalvik.vm.verify-bytecode=false
dalvik.vm.execution-mode=int:jit
dalvik.vm.lockprof.threshold=250
dalvik.vm.dexopt-flags=m=v,o=y
dalvik.vm.jmiopts=forcecopy
# Performance
debug.composition.type=gpu
ro.max.fling_velocity=20000
ro.min.fling_velocity=18000
debug.performance.tuning=1
debug.kill_allocating_task=0
debug.overlayui.enable=1
debug.egl.profiler=1
debug.egl.hw=1
debug.sf.hw=1
hw3d.force=1
hw2d.force=1
force_hw_ui=true
profiler.force_disable_err_rpt=1
profiler.force_disable_ulog=1
ro.min_pointer_dur=8
debug.kill_allocating_task=0
persist.sys.ui.hw=1
ro.debuggable=1
ro.config.disable.hw_accel=false
ro.kernel.android.checkjni=0
persist.sys.purgeable_assets=1
persist.sys.use_dithering=1
ro.secure=0
ro.min_pointer_dur=1
# 16bit Transparency
persist.sys.use_16bpp_alpha=1
At First Download
1.Notpad++
2.Boot.img unpacker
3.Win rar or 7zipper
MT6582 MOBILE
MT6582 mobile camera not conect:
STEP 1:
copy these from stock ROM to port ROM
system\lib\hw\camera.default.so
(N.B.if you have two files like camera.goldfish.so delete this the one with the goldfish)
system/lib/ libcamdrv.so
system/lib/libcamalgo.so
system/lib/libcameracustom.so
system/lib/libdpframework.so
system\etc\permissions\android.hardware.camera.xml
STEP 2:
unpcack the boot.img from Port ROM
open init.rc file add/replace below lines
#Camera
#chmod 0660 /dev/FM50AF
chmod 0660 /dev/OV8825AF
chmod 0660 /dev/CAM_CAL_DRV
#chown system camera /dev/FM50AF
chown system camera /dev/OV8825AF
chown system camera /dev/CAM_CAL_DRV
& repack boot.img
MT65XX MOBILE
STEP 1:
& Other mediateck Mobile camera not conect :
copy these from stock ROM to port ROM
system\lib\hw\camera.default.so
(N.B.if you have two files like camera.goldfish.so delete this the one with the goldfish)
system\lib\libcamera_client.so
system\lib\libcameracustom.so
system\lib\libcameraprofile.so
system\lib\libcameraservice.so
system\etc\permissions\android.hardware.camera.xml
STEP 2:
unpcack the boot.img from Port ROM
open init.rc file add/replace below lines
#Camera
#chmod 0660 /dev/FM50AF
chmod 0660 /dev/OV8825AF
chmod 0660 /dev/CAM_CAL_DRV
#chown system camera /dev/FM50AF
chown system camera /dev/OV8825AF
chown system camera /dev/CAM_CAL_DRV
& repack boot.img
Some Bug Fix All Mediatek Mobile
####
Camera Force closed or camera not conect :
copy these from stock rom to port Rom
system\lib\hw\camera.default.so
system\lib\libcamera_client.so
system\lib\libcameracustom.so
system\lib\libcameraprofile.so
system\lib\libcameraservice.so
system\lib\libmhal.so
system\lib\libmhalcontent.so
system\lib\libmhaldrv.so
system\lib\libmhalmdp.so
system\lib\libmhalpipe.so
system\lib\libmhalscenario.so
system\lib\libmhalutility.so
system\etc\permission\android.hardware.camera.fron t.xml
system\etc\permission\android.hardware.camera.xml
FOR CAMERA NOT CONNECTED ISSUE /CAMERA GREEN /CAMERA FORCE CLOSE "unfortunately camera has stopped"
Replace first libcamdrv.so (needed for 6582
devices) and check if not success then replace
libcameraservice.so from/lib.
Camera Focus Problem :
system/lib/libcameraservice.so
system/lib/libfeatureio.so from
[NB:These step not required for some mobile]
#####
Audio Problem :
AUDIO NOT COMING IN LOUDSPEAKER MODE
Replace to
system/lib/libaudio.primary.default.so
[If still sound related problem: Replace all libaud*.so Sometimes replacing all audio files give you a boot loop in that case replace only]
system/lib/libaudio.a2dp.default.so
system/lib/libaudio.primary.default.so
system/lib/libaudiocompensationfilter.so
system/lib/libaudiocustparam.so
system/lib/libaudiosetting.so
system/lib/libaudioutils.so
system/lib/libcustom_nvram.so[HIGH AUDIO VOLUME ISSUE]
[N.B. Some phone not working]
#####
SD CARD PROBLEM :
fix internal & external SD Card Problem mount
system/etc/vold.fstab [mount problem Fix]
system/etc/vold.fstab.nand
system/etc/vold [Default problem fix]
#####
Download epo Problem :
Replace in framework folder
mediatek-common.jar
mediatek-framework.jar
mediatek-op.jar
mediatek-telephony-common.jar
#####
3G Problem
Replace to
system/etc/mddb
system/etc/agps_profiles_conf.xml
system/etc/apns-conf.xml
system/etc/epo_conf.xml
system/etc/spn- conf.xml
system/etc/virtual-spn-conf-by-efpnn.xml
system/etc/virtual-spn-conf-by-efspn.xml
system/etc/virtual-spn-conf-by-imsi.xml
####
WiFi
WIFI TOGGLE PROBLEM :
system/etc/wide-dhcpv6
system/etc/wifi
system\lib\modules\mtk_stp_wmt.ko
system\lib\modules\mtk_wmt_wifi.ko
####
COMPASS PROBLEM :
system/lib/libsensorservice.so
####
VIDEO SHOWING PIXELS AND GLITCHES PROBLEM :
system/lib/libvcodecdrv.so from /lib
####
FM PROBLEM
system/lib/modul/mtk_fm_drv.k0
####
GPS Problem:
system/lib/module folder mtk_stp_gps.ko
###
TOUCH SCREEN PROBLEM :
system/lib/libinput.so
########### Again Share My Old Experience ##########
Sim card problem :
*system/bin
SD Card Problem :
*system/etc/vold.fstab
*system/etc/vold.fstab.nand
Camera Focus Problem :
*system/lib/libcameraservice.so
[NB:These step not required for Walton Primo GF,GH,GH+ & GH2]
Boot loop problem :
*system/lib/libandroid_runtime.so
*system/lib/libandroid_servers.so
*system/lib/libmedia_jni.so
Other Problem :
*system/etc/dhcpcd
*system/etc/permissions
*system/etc/security
*system/etc/audio
*system/etc/bluetooth
*system/etc/wifi
*system/lib/drm
*system/lib/egl
*system/lib/soundfx
=================BUILD.PROP TWEAKS==================
# By PurePerformances NK
# System Tweaks
ro.HOME_APP_ADJ=1
ro.mot.eri.losalert.delay=1000
ro.config.hw_fast_dormancy=1
ro.ril.enable.amr.wideband=1
ro.config.hw_fast_dormancy=1
ro.config.hw_quickpoweron=true
# Miscellaneous Tweaks
persist.sys.NV_FPSLIMIT=90
debug.qctwa.statusbar=1
debug.qctwa.preservebuf=1
debug.qc.hardware=true
com.qc.hardware=true
ro.telephony.sms_segment_size=160
persist.telephony.support.ipv6=1
persist.telephony.support.ipv4=1
ro.config.hw_fast_dormancy=1
persist.sys.shutdown.mode=hibernate
ro.config.hw_power_saving=true
ro.media.enc.hprof.vid.fps=65
ro.mot.buttonlight.timeout=1
ro.ril.set.mtu1472=1
touch.presure.scale=0.001
# Makes streaming videos stream faster
media.stagefright.enable-player=true
media.stagefright.enable-meta=true
media.stagefright.enable-scan=true
media.stagefright.enable-http=true
media.stagefright.enable-record=true
# Graphics Enhancement
debug.performance.tuning=1
video.accelerate.hw=1
ro.media.dec.jpeg.memcap=20000000
ro.media.enc.hprof.vid.bps=8000000
ro.media.enc.jpeg.quality=100
# Scrolling Responsiveness
windowsmgr.max_events_per_sec=90
persist.cust.tel.eons=1
# Power Saving Tweaks
ro.ril.disable.power.collapse=1
pm.sleep_mode=1
wifi.supplicant_scan_interval=180
# Dialing Tweaks
ro.telephony.call_ring.delay=0
ro.lge.proximity.delay=25
mot.proximity.delay=25
# DalvikVM
dalvik.vm.verify-bytecode=false
dalvik.vm.execution-mode=int:fast
dalvik.vm.checkjni=false
dalvik.vm.dexopt-data-only=1
dalvik.vm.heapstartsize=1m
dalvik.vm.heapgrowthlimit=64m
dalvik.vm.heapsize=128m
dalvik.vm.verify-bytecode=false
dalvik.vm.execution-mode=int:jit
dalvik.vm.lockprof.threshold=250
dalvik.vm.dexopt-flags=m=v,o=y
dalvik.vm.jmiopts=forcecopy
# Performance
debug.composition.type=gpu
ro.max.fling_velocity=20000
ro.min.fling_velocity=18000
debug.performance.tuning=1
debug.kill_allocating_task=0
debug.overlayui.enable=1
debug.egl.profiler=1
debug.egl.hw=1
debug.sf.hw=1
hw3d.force=1
hw2d.force=1
force_hw_ui=true
profiler.force_disable_err_rpt=1
profiler.force_disable_ulog=1
ro.min_pointer_dur=8
debug.kill_allocating_task=0
persist.sys.ui.hw=1
ro.debuggable=1
ro.config.disable.hw_accel=false
ro.kernel.android.checkjni=0
persist.sys.purgeable_assets=1
persist.sys.use_dithering=1
ro.secure=0
ro.min_pointer_dur=1
# 16bit Transparency
persist.sys.use_16bpp_alpha=1Now on functionality of our App:
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceGeneral Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsThis thread contains the LineageOS 17.1 custom firmware images for the Unihertz Atom L, a rugged Android phone released by Unihertz in July 2020, and the accompanying LineageOS Recovery used for flashing the firmware.
Please note that this ROM is one of my side projects, for which I could provide zero warranty. By installing this ROM, you acknowledge that you take all the risks that come with installing custom firmwares on your devices, including but not limited to bricking your device, losing your data, etc. You are always suggested to keep backups and make sure you know how to flash back to official ROM before trying any custom ROMs.
Please find the download links in the Download section. The following sections are guides to installing the ROM.
WARNING: DO NOT try to install this on Atom XL. This is ONLY for the Atom L.
Working Features
- All basic features (Telephony, VoLTE, Audio, Camera, NFC, WiFi, Bluetooth, ....)
- Programmable PTT (red) button (Functionality can be set in Settings - System - Buttons, under the "Search Button" section)
- 48MP camera seems to be working (unlike on many other super resolution devices)
Known Issues
- VoLTE is working (at least for me) but sometimes quirky. If you find it somehow stopped working, usually turning it off and back on again (in Settings - Network - Mobile Network) will fix it. Putting the device to SELinux Permissive mode also fixes most of the VoLTE quirks but this is not recommended (a few quirks in Enforcing mode is better than having the whole device Permissive)
Unlocking
1. Boot your Atom L to the official OS
2. Go into Settings - About phone, tap "build number" several times to enable developer settings
3. Go to Settings - System - Developer Settings, enable OEM unlocking and ADB debugging
4. Run `adb reboot bootloader` on your PC (there is no way to enter bootloader directly, only possible through adb)
5. Run `adb flashing unlock` and comfirm unlock on device (THIS WILL WIPE ALL DATA)
6. Reboot and now you should see an unlocked warning during boot screen.
Installing LineageOS Recovery
For now the only working recovery is the LineageOS Recovery, because the device's kernel does not load the touch driver in recovery mode for whatever reason, rendering TWRP useless.
1. Download `lineage_recovery_XXX.img` and `vbmeta.zip`, unpack `vbmeta.zip` to get three .img files starting with `vbmeta`
2. Run `adb reboot bootloader` to put your device in bootloader mode
3. Run `fastboot flash --disable-verification --disable-verity vbmeta vbmeta.img`
4. Run `fastboot flash --disable-verification --disable-verity vbmeta_system vbmeta_system.img`
5. Run `fastboot flash --disable-verification --disable-verity vbmeta_vendor vbmeta_vendor.img`
6. Run `fastboot flash recovery lineage_recovery_XXX.img`
7. Run `fastboot reboot recovery` to reboot into the newly-installed LineageOS Recovery
The LineageOS Recovery is operated by volume keys as selection and power as confirmation (or entering sub-menus). To return to upper levels of menus from sub-menus, press volume up until the selection goes to the first item and then disappears, then press power (i.e. there's a hidden "Go Back" item at the very top of each sub-menu).
The recovery will show a verification failed prompt for most packages that are not signed with the AOSP keys. This is safe to ignore.
Installing LineageOS 17.1
The LineageOS image must be installed via LineageOS recovery.
1. Download `lineage-17.1-Atom_L-XXX.zip`
2. Reboot your device into recovery (`adb reboot recovery` or simply hold volume up while turning power on)
3. Wipe all data (factory reset) (THIS DELETES EVEN INTERNAL STORAGE)
4. Choose Apply Update, then Apply Update from ADB
5. Run `adb sideload lineage-17.1-Atom_L-XXX.zip` from your PC
6. Wait for the process to finish. (The recovery might prompt something about verification failure, just ignore it and continue anyway)
7. At this point, you can then sideload the LATEST Magisk and OpenGAPPS Nano at your will (note that the size of the system partition might only be enough for the `nano` variant of OpenGAPPS) (If installing Magisk / OpenGAPPS fails, you can try rebooting into recovery again in advanced menus, then try installing them again)
8. Reboot into system and enjoy (Note that Magisk might cause your device to boot loop once or two but it will eventually boot)
When updating to a newer build, you have to flash the new zip, and then re-flash whatever mod you have installed previously (Magisk / GAPPS).
Download Links
LineageOS:
lineage-17.1-Atom_L-20200828-peter-signed.zip: https://mega.nz/file/bAgh1BZA#jzMs_0...l_3K5T8Or9hAW0
- Synchronized updates from LineageOS upstream.
lineage-17.1-Atom_L-20200728-peter-signed.zip: https://mega.nz/file/vBwlmL5D#wpw8Ro...kT4of0FRijiP6A
LineageOS Recovery:
lineage_recovery_20200728.img: https://mega.nz/file/yc4Dnbyb#yx0Ci9...SGrv3kyawkU3fw
vbmeta:
vbmeta.zip: https://mega.nz/file/nF51mBoY#ZNY4j9...jN7YJaRMKRoEGk
XDA:DevDB Information
LineageOS 17.1 for Unihertz Atom L, ROM for the Android General
Contributors
PeterCxy
Source Code: https://cgit.typeblog.net/android/de...ihertz/Atom_L/
ROM OS Version: Android 10
Version Information
Status: Alpha
Created 2020-07-28
Last Updated 2020-07-28EdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
Xposed is a framework for modules that can change the behavior of the system and apps without touching any APKs. That's great because it means that modules can work for different versions and even ROMs without any changes (as long as the original code was not changed too much). It's also easy to undo. As all changes are done in the memory, you just need to deactivate the module and reboot to get your original system back. There are many other advantages, but here is just one more: Multiple modules can do changes to the same part of the system or app. With modified APKs, you to decide for one. No way to combine them, unless the author builds multiple APKs with different combinations.
- Low invasiveness. Based on Riru, so EdXposed no longer need to replace app_process, it is more difficult to detect.(due to some bugs of Magisk, it can still be detected by a few applications)
- Fully open-source and free. We are very concerned about your device security and user privacy, so we are fully open source with GPLv3 license.
- Easy recovered. Based on Magisk, just disable EdXposed in Magisk Manager, you can recover from brick.
- Fast. EdXposed use SandHook and YAHFA as the hook core to provide a faster experience than other cores.
- Fully compatible. The API that is exactly the same as the original Xposed is provided. In general, there is no need to make special adaption to EdXposed.
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Stable：Stable version after passing the test, suitable for general users, update slowly. Download Stable version in Magisk Manager's [Downloads] tab
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If you have any problems, please try to use the latest version of Canary channel, which may fix your problems.
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- All the translators: https://github.com/ElderDrivers/EdXposedManager (if you want to contribute more translations, Please submit Pull Requests to us)
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19More
1,191 posts
Join Date:Joined:Oct 2008
Less
Unexpected update received today; still on Android 10, One UI 2.1, kernel 4.4.177-19484886, Build QP1A.190711.020.T307USQS3BTJ1
Security patch level Oct-2020 Release 1
This is the first time I've seen security patch levels updated two months in a row. The lack of an update to Android 11 is still very disappointing.Recently my wife's oneplus 5 was on charge, thankfully in the same room as we were in, when all of a sudden we could smell a plastic burning smell and saw the cable at the usb type c end with a small flame and melting.
I immediately turned off the socket but couldn't remove the cable from the phone due to the heat of it. Thankfully the phone was ok.
I contacted OnePlus immediately where i was told it would be brought to the senior engineers attention. Next day i got an email that a new cable was being sent out but no mention of the serious implications that could have happened or any notice of investigation or notification to other owners which is very poor on OnePlus's part. I couldn't care less about getting a new cable it's about the potential implications to my family and someone else's family.
This is what has prompted me to advise you here to be very cautious whilst charging. This incident occurred with the original cable and charger for the OP5, so please be careful. Do not leave unattended or charging while asleep.The Galaxy A Series is a 2017 lineup of budget phones from Samsung.
The feature that these phones all have in common is the Exynos 7880 chipset with an Octa-core 1.9 GHz Cortex-A53 CPU. Other than that, each device has slight changes in their specifications.
The A7 is the largest of the three phones. With a 5.7" 1080x1920 display, you will have 3GB of RAM and 32GB of storage. A 3600 mAh battery can be charged via the USB type C port. Both cameras get equal attention on this device as they are each equipped with 16MP sensors.
The A5 is the mid-range phone on this lineup. The 5.2" screen has a resolution of 1080x1920. The same 3GB of RAM and 32GB of storage is featured in this phone as well. 16MP cameras are mounted in both the front and the back of the device, being powered by a 3000 mAh battery.
The A3 is the smallest device in the 2017 lineup, with a 4.7" 720x1280 display. A smaller 2GB of RAM and 16GB of storage are packed into this phone. The back camera has a 13MP sensor and the front is equipped with 8MP. The type C connector on this phone will be used to charge the 2350 mAh battery.The OnePlus Nord N10 5G is a 6.52" phone with a 720x1600p resolution display. The Qualcomm SM4250 Snapdragon chipset is paired with 4GB of RAM and 64GB of storage. The main camera is 12+2+2MP and the selfie camera is 8MP. The battery has a 5000mAh capacity.The Moto E7 Plus is a 6.5" phone with a 720x1600p resolution display. The Qualcomm SM4250 Snapdragon 460 chipset is paired with 4GB of RAM and 64GB of storage. The main camera is 48+2MP and the selfie camera is 8MP. The battery has a 5000mAh capacity.The OnePlus 2 is the 2015 flagship Android device of Chinese upstart OnePlus. It is the successor the the popular OnePlus One, and is due for release in Q3 2015. It features a 5.5" 1080p LTPS LCD display, 1.8GHz octa-core Qualcomm Snapdragon 810 processor, 4GB of RAM and a 3300mAh battery. Internal storage comes in at either 16GB or 64GB. The rear camera has a 13MP sensor and is capable of 4K video recording at 30fps, while the front cameras has a 5MP sensor and can record 1080p video. On the exterior, OnePlus have gone with a USB Type-C charger connection, making the OnePlus 2 the first flagship device to feature Type-C USB. See more specs for the OnePlus 2.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWe've just released the first version of a new tool to compare the installs, uninstalls, retention, ratings, and more.
It uses the data that Google makes available for download to every developer. After importing data, you can easily see trends of your apps over time and compare them to each other.
This is a first beta release, if you're interested in trying it out, head to https://www.appgenius.org/
If you have any feedback, please let us know, or discuss in this thread!
Best regards,
Mathijshttps://www.samsung.com/us/mobile/mo...e-d3100tbeguj/
As you can read from the dock reviews, it is not usable with the official Tab a cover which makes the dock kind a useless.
Atm I am using some random chinese cover with Tab A and it does not work either with the dock. The slit in the dock is so slim that the cover should be super slim when folded or something like that.
If anyone knows a cover that one doesn't need to be strip off the tab before entering the dock, pls let me know.I'm trying to integrate excellent frameworks to AOSP to improvement UI and default apps' features.
I heard that there are frameworks like Gionee(Amigo), Meitu(Mate), Prize, FreeMe . I want to get excellent frameworks source code. How can I get it?
Thanks.The Samsung Galaxy Y GT-S5360 is an Android smartphone released by Samsung in the fall of 2011. It has 384 MB of RAM, as well as 512 MB or internal storage which can be expanded with a microSD card. The 3" screen has a 240x320 display resolution. The Samsung Galaxy Y GT-S5360 has remote security which allows the phone to be locked, tracked, and wiped completely all while using remote software.Register or Login with Google
I'm assuming this also won't work on devices that shipped with older OS and were officially updated to Oreo?
I have an Axon 7 on Oreo and the normal thing is to regress them to unlock bootloader.
Anything for the ZTE Blade A462? It's based on the Snapdragon 210 SoC.
Tried on ZTE Zmax 2 (Z958) US Version (AT&T but unlocked) with Android 5.1. I had to use QFIL that comes with the latest QPST v2.7.480 to be able to successfully dump the partition data. However, there is no `/devinfo` partition. So I've no clue what to do from here.
Can you post a picture or a list of partitions you had?
I dumped all partitions (except cache, system and userdata), and discovered the string ANDROID-BOOT! appeared 3 times in the "aboot" partition. The first time seems to be followed by ASCII string content, but the 2nd and 3rd time it is followed by a bunch of 00s. Should I be editing these?
No do not edit the aboot partition, you will brick it if you flash your modified one.
Thanks for the alert! Here are the screenshots showing my partitions
Got it to work! But now I'm a little confused on how to actually get into the bootloader. There's an option in recovery to "reboot into the bootloader" but it looks like it just reboots like normal into the system. Sorry for my ignorance. On my Nexus 7 I use fastboot to flash twrp in the bootloader.
I haven't seen one for it, but you can try this one from the A460 you have a good chance of it working.
https://github.com/programmer-collec...ehose_8909.mbnArtificial intelligence (AI) is speedily turning into one in all the foremost in style topics in each business and science and a lot of leading technical school corporations are showing interest in AI investment. Google’s $400 million acquisition of DeepMind may be a prime example of mainstream AI application. A study conducted by the Mckinsey international Institute discovered that tech giants like Baidu and Google spent between $20 billion to $30 billion on AI last year, with 90th of this spent on R&D and preparation, and 100% on AI acquisitions. The rate at that AI is increasing is gaining momentum. A similar study determined that AI growth caused thrice the maximum amount investment in 2016 – nearly $40 billion – because it did solely 3 years past. Business sectors like health care, education, and finance are investing in AI, but mobile is one of the most promising areas for AI.#include /* * Your warranty is now void. * * I am not responsible for bricked devices, dead SD cards, * thermonuclear war, or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at me for messing up your device, I will laugh at you. */
My scripts download MIUI official ROMs, both Developer and Stable, Global and China, extracts the firmware-update folder, generates firmware flashable zip with auto-written "updater-script", and uploads them automatically to many servers.
The scripts are completely automated, running on a Linux server every six hours.
Frequently Asked Questions:
What is Firmware? Is it a full ROM or OTA package?
Firmware is not a ROM nor OTA Package, it's a set of low-level drivers which helps the operating system do whatever it wants to do. It includes various things like Modem, Bluetooth, Bootloader, DSP and etc.
Why should I update the Firmware?
Firmware is provided from Xiaomi directly, and there are no sources for it to let developers build and edit it on their own like custom ROMs, so if you want to keep your device up to date always update your firmware!
Do I need updating the Firmware If I'm MIUI official or custom ROM user?
No, MIUI ROMs contain the firmware-update package which I extract and provide here.
What are the supported devices?
All Snapdragon and MTKdevices including China-only devices.
Check the full devices list here!
How to update firmware?
1- Download the package you want to flash. IT MUST BE NAMED WITH THE SAME CODENAME OF YOUR DEVICE.
2- Flash it using TWRP or any custom recovery. There's no need to wipe/format anything before or after the installation.
How to check the updated firmware?
Usually, the modem gets updated with newer firmware, you can check it in Settings > About > Baseband.
IMPORTANT:
These files contain the complete "firmware-update" folder, means it needs your bootloader to be unlocked OFFICIALLY , so if you unlocked it unofficially you have to remove "emmc_appsboot.mbn" and "non-hlos.bin" and you'll be okay!
Support or Contact:
Having trouble with firmware files? You can open a new issue on Github repository or just write here in a reply, and we’ll help you sort it out.
Also If You want to support a new device or fix any problem.
Powered by:
- @franztesca XiaomiTool
- My Xiaomi Flashable Firmware Creator Tool
- Packet.com
Donations:
A donation was never necessary, but It's making life easier for me and guarantees paying server costs. My works are free and open source, that cost money, time and many efforts.
XiaomiFirmwareUpdater and MIUIUpdatesTracker scripts are automated, running on a Linux server. If you want these projects to continue and provide the best services to Xiaomi users, you can help me by donating in one of the following methods:
- Paypal
- LiberaPay
- Pateron
- Payoneer account: "[email protected]"
XDA:DevDB Information
Xiaomi Firmware Updater V5, Tool/Utility for the Android General
Contributors
yshalsager
Source Code: https://github.com/XiaomiFirmwareUpdater
Version Information
Status: Stable
Current Stable Version: 5
Created 2018-01-27
Last Updated 2019-08-07UltraCam - Gcam mod based on versions by @Urnyx05 or @Arnova8G2
UltraCVM is an ongoing project of building a gcam that would fullfill the need of an extreme imaging tool aimed towards exceptional quality for most up-to-date sensors used in flagship devices. Based off respective and known devs, keeping and extending their features.
Features:
UltraCVM v5
Based on Arnova's 5.2 7.3.021 builds - all Arnova goodies included
ULIB:
- Retuned to natural look (thx r0m10 for cooperation on this)
- Got rid of compression
- Got rid of downsampling
- Bilateral filter retweaked
- Sabre slightly retweaked
- Exposure slightly retweaked
- HDR & DRC tweaks
- Detail tweaks
Camera:
- Tuned for best possible picture quality (tested on Imx586)
- Redid & fixed Libpatcher
- Added spatial denoise
- Added option to use OEM noise model from rom libs
- Backported Sky Darkening & Sky Darkening Denoise from @Cstark mods
- Added full control over variance denoisers radiuses
- Added shutter control
- Added exposure compensation
- Added AWB per AUX (thx Arnova for helping with that)
- Added S5K3l6 & S5K3T2 AWBs
- Ported Xiaomi API2 camera & AI keys
- Added experimental Qualcomm HDR bracketing mode
- Added awesome Tone & Gamma graph UI (thx Overwhelmer for helping with them)
- Added video bitrate options (thx Urnyx for helping with this)
- Added all my v3 NoiseModels with auto detection per sensor (thx Overwhelmer for helping)
- IMX586 Per-channel noisemodeller (v4 retweaked and fixed thx to Savitar)
- S5KHMX noisemodeller
- IMX686 noisemodeller
- IMX582 noisemodeller
- S5KGM1 noisemodeller
- S5KGW1 noisemodeller (credit goes to Wave_Generator)
- IMX363 noisemodeller
- S5K3l6 noisemodeller
- S5K3T2 noisemodeller
- Added new model for selfie cam
- Fully reskinned settings & UI (thx The_Dise for helping with this)
- And finally - added new awesome custom Logo/icon thx to me
Known bugs:
- Focus & fps issues in 48mp mode
- Slowmotion and front videos are still buggy
! IMPORTANT !
! If you're comning from any gcam which packagename is snapcam - make sure to install UltraCVM from scratch !
Changelog:
v5.1 03.08 - recalc S5K3l6 black level - added imx471 & imx689 noise models - set imx363 noise model as default for non supported devices - further DR experiments - further detail experiments - added full range of variance denoisers radiuses & advanced alignment denoisers - added awb red point setting to patcher: you can now try to compensate pink/purplish tint on samsung sensors by inversing the color a little (thx r0m10 for lib examination on this) - added GMM600 gamma & tone (thx to Fertde & And_rjy) v5 05.06 - Various edits & tunings - Fixed S5K3l6 & S5K3T2 AWBs (thx Arnova) - Added S5K3l6 & ov8856 noise models - Tweaked detail - Tweaked DRC - Added noise variance radiuses to libpatcher - Added Sky Darkening & Sky Darkening Denoise to libpatcher v4.1 24.05 - Various edits, tunings & fixes - 845 vf fix (thx Urnyx) - Added several new AWBs - Added temporal denoise radius (thx r0m10) - Limited frames off to 6 frames (to use in NS) - Removed hdr bracketing as I couldn't make it properly working, at least for now UltraCVM v4 11.05.2020 ULIB: - Retuned to natural look (thx r0m10 for cooperation on this) - Got rid of compression - Got rid of downsampling - Bilateral filter retweaked - Sabre slightly retweaked - Exposure slightly retweaked Camera: - Tuned for best possible picture quality (tested on Imx586) - Redid & fixed Libpatcher - Added spatial denoise - Added option to use OEM noise model from rom libs - Added shutter control - Added exposure compensation - Added AWB per AUX (thx Arnova for helping with that) - Ported Xiaomi API2 camera & AI keys - Added experimental Qualcomm HDR bracketing mode - Added awesome Tone & Gamma graph UI (thx Overwhelmer for helping with them) - Added video bitrate options (thx Urnyx for helping with this) - Added all my v3 NoiseModels with auto detection per sensor (thx Overwhelmer for helping) - IMX586 Per-channel noisemodeller (v4 retweaked and fixed thx to Savitar) - S5KHMX noisemodeller - IMX686 noisemodeller - IMX582 noisemodeller - S5KGM1 noisemodeller - S5KGW1 noisemodeller (credit goes to Wave_Generator) - IMX363 noisemodeller - Added new model for selfie cam - Fully reskinned settings & UI (thx The_Dise for helping with this) - And finally - added new awesome custom Logo/icon thx to me :) ultra 3.2.3 19.02 - various small fixes & edits - added ability to choose between google stock and prepatched r0m10/Tolyan libs - added S5KHMX noisemodeller - added imx686 noisemodeller - added imx582 noisemodeller - added S5KGM1 noisemodeller - added imx363 noisemodeller - added GM1, OV13855, OV13880 AWB ultra 2.2.1 27.01 - upped base to Urnyx05 v2.1 - moved back to stock lib - overhauled & fixed libpatcher (thx to JohnGalt, Fractal, Arnova, Xenius) - added option to choose awb for aux lenses - fully rearranged menu - added new per channel noise modeler for imx586 with own generated model (thx Savitar) - My old 586 modeler applied to front camera and non gw1/imx586 devices - cleaned up code & added small edits/fixes - fixed photosphere - added full res (48mp) mode (check post#2 to learn more) ultra 1.1.8 31.12 - initial release
Download:
Download on Celso gcam hub
Credits:
- Arnova & Urnyx05 for their fantastic works
- R0m10 for cooperation on library
- Overwhelmer for cooperation on UI & NoiseModels
- The_dise for helping with UI
- All my testers & supporters
- BSG, San1ty, Xtrme, Zoran, CStark, Tadi, Namok, Fahmi, Fu24, Eszdman, back.rider, Celso, Savitar, Abhi_Shake and all the great devs from our dev chats
I'm not letting anyone reuse of Ulib, or using UltraCVM as base for your gcam mod!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceLast update of the program in the header: 04/06/2020
Developer: kory-vadim
For the program to function, root privileges are required.
Install: flash as Magisk module
Short description:
Unpacking, assembling and converting system (vendor) {. Img} {. New.dat} {. New.dat.br}, mounting raw.images, gluing the system.img broken into parts into a single image (from the firmware for Qfil), unpacking payload.bin, repackaging boot (recovery) .img, extracting file_contexts from boot.img (android <= 8.1), and converting file_contexts.bin on the phone.
Description:
To unpack images, you can use a phone with android 5+.
The system make_ext4fs is used from the phone’s firmware, so on a phone with android 6+ (or better 7), you can collect system.img images from android 5+.
We need root rights, busybox (needed before UKA version: 4.4 inclusive) and enough space for the images themselves and unpacking them in ./data.
Before flashing versions 4.6, 4.7, delete the old version and flash the corresponding archive via twrp.
In the kitchen there is a utility AIK - Android Image Kitchen for repacking boot (recovery) .img.
If, for some reason, you do not want to flash AIK-mobile (or, for example: already installed), then delete the file "AIK.Mobile.Installer.v3.4.zip" from the archive and flash "unpack-android_new_4.6. zip "without this file.
After flashing, install the terminal emulator (if it is not already installed), and check the box for UTF-8 in its settings.
To start the kitchen, in the terminal enter:
su
menu
Go to the item: "Extract file_contexts", and select the subitem: "Install configuration", if this is not done, then the conversion file_contexts.bin -> file_contexts will not work.
You need to run the configuration installation only once.
*In version 4.5 and above it should work without applying this item.
And then enter the numbers corresponding to the desired action.
To extract file_contexts, put boot.img in the folder: /data/local/UnpackerContexts.
To unpack .img images, you need to put system.img or vendor.img in the folder: /data/local/UnpackerSystem, and select the .img file (no more than 5) for unpacking.
When unpacking, the folders will be deleted: "system", or "vendor"; files: * _fs_config and * _pack.sh from the previous unpacking.
To build the image, copy the received file_contexts to the folder: /data/local/UnpackerSystem, if for some reason it will not be in the folder, then the assembly will be performed with file_contexts obtained when unpacking the image.
If files or folders were added to the disassembled image, then before assembling it, you must enter everything added into fs_config, and only then collect it.
If there are spaces in the names of folders or files in the unpacked image, then make_ex4fs will not collect such an image until you rename the files and correct the entries in fs_config.
Therefore, adding folders and files with spaces to the unpacked image is also not possible.
In version 4.6, the write assistant in fs_config is added.
If you just deleted something, then you do not need to edit fs_config.
Also in the collected folder must be present symlinks.
Well, in terms of context, Selinux will also need to be watched, depending on what was added.
To unpack or convert .dat, .br and in other cases, you will be prompted to enter the path to the folder where the image is located (in the same folder should be system (vendor) .transfer.list).
When converting and assembling in .dat, look behind the phone screen, because in some cases you need to enter a number corresponding to the version of the android, the image being collected.
There is a choice of compression ratio for converting * .new.dat to br.
To reduce the conversion time, compression can be selected 3-5 (maximum 7).
To unpack boot (recovery) .img, put the file in the folder: /data/local/AIK-mobile, and select the file in the menu: "unzip boot"
For packaging, use the item: "pack boot".
The collected file will be located in the folder: /data/local/AIK-mobile with the name boot-output.img.
To clean the working folder, also use the corresponding item. Source and output files will not be deleted.
AIK-mobile can be completely removed from the phone directly from the menu.
To mount, use the corresponding menu item, and the raw image must be located in the folder: /data/local/UnpackerSystem.
Do not forget to unmount the image.
To remove the kitchen from the phone, go to the corresponding menu item and confirm the removal,
after confirmation, the phone will be overloaded in twrp, and after working out the script, it will be loaded into the system.
Screenshots(Gdrive): https://drive.google.com/folderview?...cDp-Anp0vAj_VU
Download(Gdrive): https://drive.google.com/file/d/1-nO...w?usp=drivesdk
MOD EDIT: Link removedIn this video review, the guy says (at 3:18) this tablet DOES NOT support an "active pen". I hope he is mistaken and just means it doesn't support specifically the "S pen". Should a universal active pen work with the Tab A8 T290? I think of buying the pen below, the manufacturer says it should work on any touch screen. The problem is that, if it doesn't work, I won't be able to return, I am in Italy and will send it to my niece in Brazil... so I have to make sure. Thanks if you can help!
PS.: Since I'm a new poster, links are blocked to prevent spam. Please, substitute (dot) for "."
Samsung Galaxy Tab A 8.0 SM-T290 Review: How Good Is It?
youtu (dot) be/9y-jXjp7IdA?t=198
AICase Active Stylus Pen, Penna Capacitiva Attiva Universale per Qualsiasi Touch Screen
amazon (dot) it/dp/B07KK7HJ8Q/?coliid=INIFVRM8I32TF&colid=3EWJ1C2WID35A&psc=1&re f_=lv_ov_lig_dp_it
Coincidently, I already have exactly the first cheaper Meko. I had bought it in order to save money and use it on my Windows Surface 3, it didn't work... I can in fact write a whole sentence with a lot of pain, but not really usable. The bigger soft tip is always responsive, but not nice for note taking. In the end, I had to spend more money and buy the Surface pen (which is very good). I've also tried the cheap Meko on an iPad, it works better, but not really good enough for note taking. I haven't tried it on an Android device, though.
Please let me know if the Meko with the battery works better.
Coincidently, I already have exactly the first cheaper Meko. I had bought it in order to save money and use it on my Windows Surface 3, it didn't work... I can in fact write a whole sentence with a lot of pain, but not really usable. The bigger soft tip is always responsive, but not nice for note taking. In the end, I had to spend more money and buy the Surface pen (which is very good). I've also tried the cheap Meko on an iPad, it works better, but not really good enough for note taking. I haven't tried it on an Android device, though.
Please let me know if the Meko with the battery works better.
Thanks for your answer.
Instead of smooth lines, it was just dots everywhere.
Unfortunately, and against my expectation, the battery-powered Meko pen performed worse! Instead of smooth lines, it was just dots everywhere.
On my iPad, though, it worked flawlessly.
I ended up returning both of the Meko pens.
Sent from my SM-G986U using Tapatalk
I guess it's a matter of luck, these styluses respond differently depending on the device.
I've been testing again the cheaper Meko Stylus (with no battery). These are the devices I've tried:
Surface 3 - very bad, not usable. 1 star.
iPad 4 - it could be used, but very painfully, not practical. 2 stars.
iPad 6 (2018) - very good, not great. It is usable to take important notes, like school notes. 4 stars.
Huawei P20 pro - very similar to iPad 6, responds very well. 4 stars.
Cheap Android phone (Leagoo) - very bad, 1 star.
I'm thinking of trying my luck on that "AICase Active Stylus Pen" (the one I put the link before, you can find in Amazon Italy)... it's an active stylus for 25 euros with a glove to rest the palm on the screen.
Thanks for you answer.... and please let me know if you find some good stylus for Samsung Tab A8 T290.
So you mean the battery-powered Meko worked well on your iPad but not on your other device? Which one is it? Would it be Samsung Tab A8?
I guess it's a matter of luck, these styluses respond differently depending on the device.
I've been testing again the cheaper Meko Stylus (with no battery). These are the devices I've tried:
Surface 3 - very bad, not usable. 1 star.
iPad 4 - it could be used, but very painfully, not practical. 2 stars.
iPad 6 (2018) - very good, not great. It is usable to take important notes, like school notes. 4 stars.
Huawei P20 pro - very similar to iPad 6, responds very well. 4 stars.
Cheap Android phone (Leagoo) - very bad, 1 star.
I'm thinking of trying my luck on that "AICase Active Stylus Pen" (the one I put the link before, you can find in Amazon Italy)... it's an active stylus for 25 euros with a glove to rest the palm on the screen.
Thanks for you answer.... and please let me know if you find some good stylus for Samsung Tab A8 T290.
On my Tab A, the disc one worked better than the battery one - 3 vs 1.
I found this pen on Amazon for the Tab A that has good reviews:
My "AICase Active Stylus" (from Amazon Italy) just arrived. It works very well, except that the glove that comes with it is useless, you can still use your finger to write with the glove on. I'm struggling to find some material that I can use to rest my palm... It's very uncomfortable to write without being able to rest your palm on the screen.
I would say it's a bit better than the passive Meko Stylus, especially for the iPad 4, which has an older screen. It has a metal tip, so you should have a screen protector to prevent scratches.
I've tried on these devices:
Surface 3 - doesn't work, it makes a few lines, but not good at all.
iPad 4 - works well enough
iPad 6 - very good, works a bit better than on the iPad 4
Huawei P20 pro - works similarly to iPad 6
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceHi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
Thanks
Have a great day
There really is no "best" network. All ad networks have their ups and downs. They'll have a good campaign, then it will end, then later they'll get another, and so on. It's best to have multiple networks and mediate them. That way you get the benefit of the ups, and can mitigate the downs.
Using Enhance, you can now integrate all of the services that providers offer without ever having to touch an SDK again. With little to NO coding at all and without touching source code, Enhance® is the easiest way to integrate 3rd party services into your project or to keep them up to date. (Ads, Mediation, Analytics, Attribution, Crash Reporting and more) No more SDK integration!!!
Hi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
You also want to think about which ad formats are you using when choosing which networks to activate. Take a look at Appodeal's Performance Index on ad networks by country and device to get a better idea of what works best.
Hi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
Thanks
Have a great day
Admob are great for global fill and can pretty much give you close to 100% of all your ad inventory. But there are ad networks that will give you maybe 60% but at a higher CPM rate. Rather than using one or the other, use both.
60% filled from the higher CPM network then fill the 40% using admob. Same fill as you were getting before but more revenue. So yeah, have more than one ad network.
I do agree with yvonne. and maybe consider a mediation platform. That way you have the choice of using multiple ad networks and they will be able to advise on what ad networks would be the best.
If you want, I can have a look at your app and offer some advice.
Hi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
Thanks
Have a great day
But it is also good to keep in mind, that most of your traffic will be, basically, stolen, your app hacked and ads removed or replaced by other ads. That's sad but true. That's why I would recommend you to check out Addvertize - this is a technologically cutting edge new project that is focused not only on serving best performing ads, but also on protecting your apps from any interference, plus on a smart monetization of additional 3rd non-google play party traffic, which might be actually huge.
Besides adding multiple ad networks, you can also try serving ads from different ad formats on the same placement. For example, you can show a native ad on your banner placement or a MREC on a native ad placement.
If your app is in India we can help you make additional revenue other than what you are already making. It is a revenue share model and involves no cost at all. It works with a simple URL integration in the app. Mail me at [email protected] media if you want to explore this opportunity
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
Got it to work! But now I'm a little confused on how to actually get into the bootloader. There's an option in recovery to "reboot into the bootloader" but it looks like it just reboots like normal into the system. Sorry for my ignorance. On my Nexus 7 I use fastboot to flash twrp in the bootloader.
Hey guys just found this post and its a relief to know it's a possibility of getting magisk on my ZTE P839 Sweet cuz its the only backup phone i have atm and it can be rooted, sweeeeeeet. I'll give it a try soon once I get my hands on a good computer haha. Only part I'm confused about is flashing TWRP? I'm assuming flashing that .bin file somehow installs TWRP as well? There's no need to "fastboot flash recovery TWRP.img" in fastboot mode? These phones are strange Honestly the A and B partitions were more of a pain in the ass than anything haha. Damn phone company's tryna encrypt everything annoyingggg hehe.
i tried the method on my zte maven 2. Sadly, every time i used Qualcomm to flash it. it would fail to find my device. any solution ?
Anyone was able to make this work on ZTE A1R? which OS and drivers did you use?
---------- Post added at 09:15 AM ---------- Previous post was at 09:13 AM ----------
This is the error I am getting and I really want to unlock this phone as it is useless due to overheating...
2020-05-27 05:13:04.666 13: C:\platform-tools\Qualcomm_Flash_Image_Loader_v2.0.1.9\prog_em mc_firehose_8974.mbn
2020-05-27 05:13:04.668 05:13:04: ERROR: function: sahara_rx_data:237 Unable to read packet header. Only read 0 bytes.
2020-05-27 05:13:04.671 05:13:04: ERROR: function: sahara_main:924 Sahara protocol error
2020-05-27 05:13:04.673 05:13:04: ERROR: function: main:303 Uploading Image using Sahara protocol failed
2020-05-27 05:13:04.689 Download Fail:Sahara Fail:QSaharaServer Fail:Process fail
2020-05-27 05:13:04.701 Finish Get GPT
Hello.
I have ZTE ZFive C Z558VL. It is TracFone. I shut off the phone and held down the volume button and the power, but if I hold the power down too long the phone resets. If I let go of the power button the phone boots up normally. I also tried holding volume up and plugging in the Micro USB cable but it just went to charging mode. I do not know how to get into FTM mode. Below is interesting information about my other TracFone.
I looked up a command "adb reboot edl" to try getting to EDL mode but it did not work. I used Windows Vista with adb and driver installed.
Interesting enough, I also have an Alcatel OneTouch Pop Icon A564C (Yaris5NA). I enable USB debugging and installed drivers from "Minimal ADB and Fastboot" driver for adb in Device Manager. When I issued "adb reboot edl" command while phone was on, the screen turns off and an interesting thing happens; the driver for Qualcomm HS USB is installed and the phone ports to COM4. I opened QFIL and the device shows up. I tried three different firehoses I found online; 8x26, 8x26_alc1 and 8x26_alc2. The 8x26_alc1 goes further when using partition manager, but firehose fails and no window pops up. I would think 8x26 refers to the chipset the phone uses.
I think if the firmware to the A564C and the firehose to this phone are found someone may be able to get root on it. I have tried to use KingRoot 4.10 and 4.0 on it many times but they reboot or they get stuck on the screen and the phone is unusable until reset. It is like the phone achieves a temporary breach when at the 23% mark then five seconds later the whole phone gets stuck. I had used a older SuperSU apk from a script and it says "No Binary Found" while opening it, but when using KingRoot in the background and constantly opening SuperSU, I eventually get "The binary needs to be updated". I try to work fast by pressing "Confirm" and "Normal" but it does not do anything but get stuck at the screen. When that five seconds runs out the phone quits anything. I even tried using adb shell when I acheive the "temp root" and doing su the connection times out.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWe are looking for new beta testers for our decentralized community/messenger app.
https://play.google.com/store/apps/d...peerem.android
We started an open beta test. All you need to test is an Android device and some friends, it's a community app.
No registration needed, just use your existing accounts on Google, Facebook or Twitter.
- Your data is stored only on your own mobile device.
- Peer-to-Peer connections with, of curse, end-to-end encryption.
- Possibility of time limited visibility of chats, pictures or videos.
- You can safely chat with your friends, make phone calls or make video calls.
- Multiple Accounts - separate friend lists can be created.
- Location sharing - see where in the world your friends are, if they allow it.
- And many more ...XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Lenovo Legion Duel is a 6.65" phone with a 1080x2340p resolution display. The Qualcomm SM8250 Snapdragon 865+ chipset is paired with 12/16GB of RAM and 256/512GB of storage. The main camera is 64+16MP and the selfie camera is 20MP. The battery has a 5000mAh capacity.Now on functionality of our App:
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )The Powerful Friendly Uptodate AD Blocking Hosts
Home Page : https://github.com/neodevpro/neodevhost
| | | Check out All annoncement in github | | |
Introduction :
-UPTODATE (Merge everyday)
-POWERFUL (To block all ad / tracking)
-FRIENDLY (Easy to use and welcome to report issues)
Supported Platform :
-Windows
-Android
-Linux
-Mac OS
-Openwrt
-etc
Supported adblocker:
-Pihole
-Adaway
-Adblocker/Adguard
-etc
Download :
https://github.com/neodevpro/neodevhost
How To Use :
1.Download both files/copy link of files
2.Add host and whitelist file/link into adblocker
3.Update the data source in the app
Pihole Installation :
Import and Installation:
1.Login to pihole website
2.Go to Groupmanagement > Adlists
3.copy the NEODEV AD host link into "Address:"
4.open terminal
5. Run the following command :
sudo -i sudo curl -s https://raw.githubusercontent.com/ne...ter/install.sh | bash pihole -g
7.Then it will import both NEODEV host and whitelist into your Pihole
Remove and Uninstall :
1.Login to pihole website
2.Go to Groupmanagement > Adlists
3.click the red trash can button
4.open terminal
5. Run the following command :
sudo -i sudo curl -s https://raw.githubusercontent.com/ne...r/uninstall.sh | bash pihole -g
7.Then it will Remove and Uninstall both NEODEV host and whitelist from your Pihole
Donation
- If you like our work we do, Then please do consider a Donation https://www.paypal.me/plmh -- NEODEV Home page： https://neodev.team - Administrator ：PLMH
Administrator ：PLMH
Telegram group : Click Here to Join
QQ group : click here to joinI'm a beginner trying to make my first app (a calculator) look fancier.
I've started with by adding colors to the buttons. Quickly I've noticed that by adding color to a button's background it looses its border with another button. So I've tried to use margins. Everything went great until I had to deal with the last LinearLayout, last line of the calculator buttons. It's different than the previous LinearLayouts and I guess the picture describes it well enough:
Turns out I cannot post the picture, so I'll try to describe it as detailed as possible: the thing is that my 3rd row includes 4 buttons(1, 2 ,3 and -) and so does the 4th, but there 2 out of 4 buttons are split vertically and I guess because of that the margins of the forth row do not allign with the ones from the 3rd even though their properties are the same (android:layout_marginVertical="3dp" and android:layout_marginHorizontal="5dp")
The buttons of the 3rd row do not allign with the ones from 4th
I've tried to manually make margins( to the left and right insted of "Horzontal"), however that does not seem to be a proper soliution, or maybe I'm just missing something
my code for the 4th row :
<LinearLayout android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:orientation="horizontal"> <LinearLayout android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:orientation="vertical"> <Button android:id="@+id/dot" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:background="#D79E2D" android:gravity="top|center" android:text="." android:textSize="30sp" /> <Button android:id="@+id/equals" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:background="#D79E2D" android:text="=" android:textSize="40sp" /> </LinearLayout> <Button android:background="#D79E2D" android:id="@+id/n0" android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="0" android:textSize="25sp" /> <LinearLayout android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:orientation="vertical"> <Button android:background="#D79E2D" android:id="@+id/changeSign" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="+/-" android:textSize="30dp" /> <Button android:background="#D79E2D" android:id="@+id/Back" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="Del" android:textSize="30sp" android:gravity="top|center" /> </LinearLayout> <Button android:id="@+id/plus" android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:background="#D79E2D" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="+" android:textSize="25sp" /> </LinearLayout>It's called Invision. Website link: https://www.invisionapp.com/
Get high-fidelity in under 5 minutes. Upload your design files and add animations, gestures, and transitions to transform your static screens into clickable, interactive prototypes.
I really recommend this if you work with customers!Link Collider has been tested and proven by many site owners and the best part? It's free! You can get started at https://www.linkcollider.com/
Thanks,
Zain Merchant
Register or Login with Google
Hey guys, this tool named Link Collider is really useful for someone who's looking to get traffic for their site. It can really help you grow your online business, blogs etc. It can also improve your search engine ranking. And as we all know, social media plays a big part in promoting your product/site/ideas these days and this is where Link Collider comes in as it can also help you get you Facebook likes, shares and followers. You cannot imagine how social media can give a boost to your site.
Link Collider has been tested and proven by many site owners and the best part? It's free! You can get started at https://www.linkcollider.com/
Thanks,
Zain MerchantAPK Mirror Link
Problem:
I have installed it on my Mi Box android Tv. It works flawless. But on every restart, it ask for username and password.
The person who shared this apk has already filled the login details, which is in res/layout/fragment_details.xml.
I want to change the login details there, so that I don't have to type username and password every time, I start Mi Box.
I tried using apktools and Android studio to decompile and repack it with modified xml.
But, modified APK give error, Not installed.
Thanks in advance.The beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCI had installed xda navigation control app but I uninstalled it as I didn't like it (ACCORDING TO THE INSTRUCTIONS). After uninstalling, the navigation bar disappeared but still the gestures were not disabled. I tried reinstalling and uninstalling the app again and also tried to restart my phone but it didn't do anything. Please help me out.Blockchain backed apps will effectively help in setting up any successful business. Sectors such as finance, healthcare, banks, real estate, etc., use the technology to store data securely and for effortless management. Avail blockchain app development services from the most experienced experts in the market - Appdupe. We help you develop your business in a short period with our blockchain-based app solutions.
for more info @ appdupe[dot]comAfter being featured on the XDA-Developers.com portal, today I bring you an update to my well known collection of Super Wallpapers, ported straight from MIUI 12.
Features included with these wallpapers:
- Ported straight from MIUI 12. All features available in the original MIUI 12 APKs, with the exception of AOD, are available as well in these.
- Adapted to work on AOSP-based ROMs. Thanks to some custom code I wrote, the unlock effects now work on any Android 8.0+ device.
- Offers a wide variety of wallpapers to choose from. You can choose from astonishing green sceneries like the ones present in the Forest wallpaper, or submerge yourself in the red abyss of Mars, stopping by North Pole's cold Glaciers. (NEW!) And now with the addition of Saturn, you can check two new beautiful renders of it, one showing its rings in horizontal and the other showing them in vertical.
- NEW! Code reworked from the ground-up. With proper help of a VCS tool, all code is now shared among all APKs of each version, making it easier for future updates, and who knows what more surprises to come... ;)
- AOD wallpapers won't work nor apply on any device, no matter it being Xiaomi or any other brand. This is due to a restriction with these being signed with my own key instead of your device's OEM platform key. If you are interested in including these in your ROM, please contact me and I will gladly assist you on re-enabling AOD features. Please, only contact me if you are a ROM developer.
We currently have the following options available:
- A set of three wallpapers, named "Default", "Forest" and "Glacier" in the case of Earth.
- A set of three wallpapers, named "Default", "Central Mountains of Hale Crater" (exclusive!) and "Evergreen Garden" (exclusive!)
- A set of two wallpapers, named "Vertical" and "Horizontal" in the case of Saturn (exclusive!)
- Default, which behaves just like Xiaomi intended these wallpapers to be, following your system dark theme and your clock to go dark or bright accordingly.
- An "Always light/bright version", which is modified in order to make these wallpapers stay bright no matter the time of the day or your current system dark theme status.
- An "Always dark version", which is modified in order to make these wallpapers stay dark no matter the time of the day or your current system dark theme status.
This makes 9 wallpapers for each, Mars and Earth, plus 2 variants for Saturn, which makes a total of 20 live Super Wallpapers included.
Want to see how they look like?
(all APKs in a folder) | last updated 2020-08-11
Follow me on Twitter to stay up-to-date
and get sneak peaks of upcoming works!
XDA:DevDB Information
[MOD] MIUI 12 Live 'Super' Wallpapers ported to any Android device!, App for the Android General
Contributors
linuxct
Version Information
Status: Stable
Stable Release Date: 2020-08-12
Created 2020-05-06
Last Updated 2020-08-131. Select the newly created project from the list.
2. Navigate to APIs & Services.
3. Click Enable APIs and Services.
4. Type speech in the Search box to and click on Google Cloud Speech API.
5. Click Enable button for Google Cloud Speech API. https://concertcare.com/services/Few days ago, I discovered a very useful application named xModGames.
It gives to the user the possibility to cheat on some popular games like 8 ball pool, clash of clans etc ...
I'm very curious on how this application works.
For example, on 8 ball pool, it draws guidelines. How this application could modify other applications and if I want create some mods for 8 ball pool, how can I proceed ?
Thanks in advanceThen, drop a comment if you have anything to add.
Register or Login with Google
Does anyone use 3g instead of 4g? The problem I'm faceing is that it takes sometimes 5-10 sec before it starts loading the site when using 3g. This problem does not occur when using 4g. I didn't experience the same problem with my Oneplus 3
i have very bad reception with my OP5. At Places where my OP3 had 3G or even 4G the OP5 has E or sometimes no internet... Only at places like a forest or in a basement under an airport (where i work) but my old OP3 has great reception with the same SIM card. Maybe i use the wrong settings or wrong SIM slot?
Mine too. Did you ever find a solution? ThanksNope, but maybe take a backup of Snapchat just in case.
Register or Login with Google
Installed everything like you said and Snapchat is working for now. But in magisk>modules, the edxposed zip that I installed from Snapchat tab is not shown separately. Riru - core and riru - edxposed are there. Did I **** it up?
OOS 10.0.5 OnePlus 7 Pro
Magisk 20.4
EdXposed v0.4.6.1 (45610)
SafetyNet is failing
Safety Net has started failing for edxposed now.
I had Google Play, Play Services and GSF in blacklist mode.
That worked for me for months with official magisk (Never needed to use modded magisk). Safety Net used to pass fine, even one or two days back.
Now it fails. Only way to pass Safety Net, is to disable edxposed in Magisk manager and reboot.
Also tried using whitelist mode and only enabling the apps that I want. Still it fails.
I guess Google has blocked edxposed in safetynet checks, completely now.
Though it still passes without edxposed. That means Magisk is not blocked yet. So it cannot be that hardware attestation id bug, that @topjohnwu mentioned on twitter. Am I right ?
Anyone has a fix to this ? Will modded Magisk help in this case ? Or we should choose between edxposed and safety net and say goodbye to the other ?
Lineage 16
Magisk 20.4
Exposed 0.4.6.1 and also with 0.4.6.2 (Both YAHFA), it fails
Exposed manager 4.5.7
Riru core 19.7
Install exactly what i said in post 27,it'll work
Sent from my Mi 9 Lite using Tapatalk
---------- Post added at 12:18 AM ---------- Previous post was at 12:18 AM ----------
Install exactly what i said in post 27,it'll workThis is an early stage alpha build; not all features are working well at the moment.
#include <std_disclaimer.h> /* * Your warranty is now void. * * We are not responsible for bricked devices, dead SD cards, * thermonuclear war or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at us for messing up your device, we will laugh at you. Hard & a lot. * */
Lineage OS team,
Contributors:
deadman96385
MSM8916 team
elginsk8r
Instructions
It is STRONGLY recommended to fully wipe your device before flashing and please avoid restoring system apps and system data with Titanium Backup as this can cause stability issues that are very hard to debug.
If you believe you know what you're doing - then fine, go ahead, but please don't complain if you experience any strange behavior.
How to flash:
(Again: Don't do it if you don't know it!)
1. Download the ROM and GApps and transfer them to your device.
2. Boot to recovery (TWRP recommended).
3. Wipe the System, Cache, Data and ART/Dalvik cache.
4. Flash the ROM Zipfile.
5. Flash the GApps (optional, needed for e.g. Google Playstore to work).
6. Flash the root solution of your choice (optional).
7. Reboot your device.
Reporting bugs:
- Grab a logcat right after the problem has occurred. (Please include at least a few pages of the log, not just the last few lines, unless you know what you're doing.)
- If it is a random reboot, grab /sys/fs/pstore/console-ramoops and /sys/fs/pstore/dmesg-ramoops-0. (Do not bother getting a logcat unless you can get it just before the reboot. A logcat after a reboot is useless)
What is your-- LineageOS version: LineageOS Download url: Gapps version: Did you-- wipe: restore with titanium backup: reboot after having the issue: Are you using-- a task killer: a non-stock kernel: other modifications: Provide any additional information (observations/frequency of problem/last version it worked on/etc) as needed:
- encryption
Download link: https://www.androidfilehost.com/?w=files&flid=284367
XDA:DevDB Information
Lineage OS for the SM-T550, ROM for the Samsung Galaxy Tab A series
Contributors
virsys, @deadman96385, @Galaxy-MSM8916 team, @elginsk8r worked on the device trees
Source Code: https://github.com/Galaxy-MSM8916
ROM OS Version: 9.x Pie
ROM Kernel: Linux 4.x
Based On: LineageOS
Version Information
Status: Beta
Created 2018-11-06
Last Updated 2018-11-16It's called Invision. Website link: https://www.invisionapp.com/
Get high-fidelity in under 5 minutes. Upload your design files and add animations, gestures, and transitions to transform your static screens into clickable, interactive prototypes.
I really recommend this if you work with customers!The OnePlus One is the first smartphone developed by new start-up company OnePlus. It was released in April 2014, marketed as the "2014 Flagship Killer". The device sports a 5.5" 1080x1920 JDI display. It's powered by a 2.5GHz Qualcomm Snapdragon 801 processor and 3GB of RAM. Storage comes in at either 16GB or 64GB. Other features include a 13MP camera, 3100mAh battery, dual front speakers and StyleSwap replaceable back covers. On the software side, the OnePlus One runs a version of Cyanogenmod with a unique modified user interface. You can see more detailed specs of the OnePlus One here.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI ordered my OnePlus 8 Pro few days ago, still waiting for it sadly 😅 I know it's overpriced and I should buy 7T pro and still be enjoying it, and it'll serve me well as was my 5T for almost past 2 years, but I decided that I have to go for the best this time, and I like OOS too much to settle on it using Samsung or Huawei device, so I've chosen 8 pro, and I'm so excited to see this screen for the first time. Price is high because it's a real flagship deal this time, like the other manufacturers. I know company have to make money, they already lost so much because of this stupid covid quarantine thing, they have to wait with release for month, and it's also in the price of the end product, and I'm fine with it, cause I'm buying, imo the best phone in the market rn.
Sent from my OnePlus5T using XDA Labs
---------- Post added at 07:18 PM ---------- Previous post was at 07:11 PM ----------
Quote:
Originally Posted by jmd.desai08
Overpriced: true
iPhone SE : flagship processor, flagship display, flagship camera. $400
OnePlus 8: flagship processor, no flagship display, no flagship camera. 699 (300$ just for design is no justification) (flagship is respective company's flagship devices)
iPhone SE don't have flagship processor because they didn't include the A1 chip, and it's a little slower compared to iPhone 11. It's same chip, right, but they made few cuts here and there.
It also don't have flagship display, and flagship camera. Display is same as iPhone 8, and the camera have only one lense, and Apple's flagships have three lenses, so no flagship specs.
It's cheaper because they want more users for their cloud and services.
OnePlus 8 is like lite version of real flagship, and iPhone SE is just a middle range phone for people who don't need flagship-like device, it's targeted to other types of people.
Sent from my OnePlus5T using XDA LabsEdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19Making Your Home Screen Sexier made easy with Screenie. Screenie brings you out the latest Home Screen Setups. It also shows the Widget, Icon Pack used in each Home Screen Setup with their Links attached, So that you can download any of them through Play Store in One Click.
Features of Screenie:
⭐New Setups every day.
⭐Backup of Setup's(Launcher, Widgets) to make your work easier.
⭐Download Wallpaper and Setup in One Click.
⭐Icon Packs are displayed for each setup.
⭐Widgets used are displayed for each setup.
⭐Best collection of Home Screen Setups.
⭐Push Notifications of new setups.
⭐You can Rate the setups according to your interest.
⭐Favorite’s section(liked setups by user).
⭐Search by categories.
⭐High Rated Home Screen Setups.
⭐You can also share the setup with your friends.
⭐Explore Random Setups all over the world.Register or Login with Google
On the main screen of the module, in the terminal, select option 1 ( edit device fingerprint) should look like this. If not change it within the submenus.
I got the attached..
Ok looks right. If everything else is good, I think Google phone needs to be a system app, set as default phone app, and maybe clear Google play services data, it should pop up in google phone settings where you can enable it.
Ok looks right. If everything else is good, I think Google phone needs to be a system app, set as default phone app, and maybe clear Google play services data, it should pop up in google phone settings where you can enable it.The problem Is that I think the code Is obsolet cus it's not using the sintaxis 'android.x'
I would thank you if you can take a look at this AND can give me solutions. Thank you guys, see you around. 😎Updated Tutorial:
Hey guys, im back! Here's a TWRP port and root for umx u683cl as promised (Custom Rom Coming soon!)
Requirement:
-QPST installed
-Run Qfil
-Connect phone to Computer then adb reboot edl
-Tools > Partition Manager > right click on Recovery > Manage Partition Manager > Load image > Select my twrp.
-Once done Hold Volume UP and Close Qfil, It'll automatically reboot your phone.
-Install Magisk.zip
-Reboot to system and install magisk manager apk
-Enjoy
Stock : https://www.mediafire.com/file/uyatm...patch.zip/file
Feel free to buy me a coffee if this helped you thanks!blackberry launcher
an what launcher do u use
Register or Login with Google
What do you guys think about the Nova Launcher?
Evie launcher.
Such a great launcher. Minimalist and super awesome for navigating around the home screen. Drag down to get recent apps and an instant Google/phone search. Swipe up to get all your apps.
Weather Widget pls ?Here is the thread about Phh-Treble for Android 10.0, codename Quack.
The goal of Phh-Treble for Android 10.0 is the same as for Android 8.0, 8.1, and 9.0: Bring latest AOSP to the maximum number of devices running Google-certified Treble[1], with full hardware support.
You can download latest release at https://github.com/phhusson/treble_e...tions/releases
Which variant do I pick
To know which variant to download, use https://play.google.com/store/apps/d...k5.treblecheck . Don't use other Treble Check apps, they'll give erronous informations.
And then, you're free to choose between vanilla and gapps variant.
What works?
On some devices, everything. They are still not the majority though.
What you can expect on the majority of devices?
It should boot successfully on pretty much all devices with Google-certified Treble. [1]
Most features should work on the majority of devices out-of-the-box: RIL, WiFi, brightness control, buttons, gestures, ...
However, many devices still have issues with hardware video decoding and camera.
Is device XXX supported?
If it's a Google-certified Treble, yes it is. Unlike Google's GSI, Treble devices supported, there is no exception.
There might be bugs of course, but if you help me, I'll fix them!
Which vendor to use?
1. Always use your actual device's vendor
2. Always use OEM unmodified vendor, not some custom vendor
3. This includes boot.img. boot.img and vendor MUST BE the same version.
4. If you're on an Android 8.0 vendor, you'll need to stick to vendors with Security Patch Level before April 2019 (that's a bug of my GSI)
Enjoy!
[1] How do I know my device is Google-certified Treble?
Well it's easy, if your device has first been released with Oreo or more recent, and it has google apps, it has a Google-certified Treble.
Please note that this means only the vendor provided by the OEM is certified, not the one from device-specific ROM.Finally, you have decided what your product is going to look like and how you want your user to experience it. If you ever wanted to know what is UI UX design all about? Then this is the simplest way to understand them. The UI also called the user interface is responsible for giving the important pointers to the user suggesting the next move. The UX also is known as the user experience gives the user a good experience after following the pointers. Well, this is for the layman to understand the difference between the UI vs UX. ( delimp.com/what-is-ui-vs-ux-design-and-the-difference )
Why Should You Choose Minimalistic UI Design for Your Mobile App?
As soon as you install an app and open it for the first time, what is the first thing that instantly catches your attention? Well, for many out there, it has to be its design. If an app design is intuitive, it is certain to enamor the user and next they would focus on the features. However, if an app is highly-features, but has a boring or complex design, then the users are certain to uninstall it soon enough.
The “UI” in UI design stands for “user interface.” The user interface is the graphical layout of the application. “UX” stands for “user experience.” A user’s experience of the app is determined by how they interact with it.
UX design introduces to the term “user experience design”, while UI stands for “user interface design”.
On the most basic level, UI is built up of all the elements that allow someone to communicate with a product or service. UX, on the other hand, is what the individual communicating with that product or service gets away from the entire experience.
If you want to understand the difference between UI and UX, I advise you to read the blog articles gapsystudio.com/blog/ui-vs-ux-design/. The article The difference between UI and UX design describes each of the terms in detail.
Mobile app design services include a user interface (UI) and user experience (UX) designing. Designer create the overall style of the app, including logo, colors, fonts, and other graphic elements. Long story short ui/ux design services does everything to make the user comfortable.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThis is the best smart phone I've ever had. Battery life, performance, and price. I tried moving to another but I came back quickly. From my point of view the competition is just catching up and are charging twice as much if not more.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceNo. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- NFS Injector uses compiled binaries that are closed source... yuck. Not to mention the typos in the README. This one is hard to look at.
- LKT sets random nonsensical build.props that likely don't even exist.
- MAGNETAR uses (you guessed it) compiled binaries that install themselves to your /system/etc/ directory (???). Great idea, install an external closed source, compiled binary to the system partition.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- hispeed_load: 90 --> 80: Jump to a higher frequency if we are approaching the end of the frequency list, where a task may begin to starve or begin to stutter.
- hispeed_freq: : Set the "higher freq" (referencing hispeed_load) to the maximum frequency available to take advantage of Race-To-Idle.
- CAF CPU Boost Tweaks
- input_boost_freq: 1.4 GHz (closest freq) as a generic, universal boost frequency to the little cluster.
- input_boost_ms: 250 ms, not consuming too much power but boosting for important, interactive events such as clicking on things.
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
- readahead: 0: Disable readahead, which is intended for disks with long seek times (HDD), whereas mobile devices use flash storage with zero seek time.
- nr_requests: 128 --> 512: Allow more I/O requests to be issued before flushing the queue, slightly increasing latencies but allowing more requests to be executed before being put to sleep.
- noop / none: Use a scheduler with little CPU overhead to reduce I/O latencies, which is essential for fast flash storage (eMMC & UFS).
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16Hello everyone,
We have launched an android app, Factor Monsters (by Knowledge Platform), yesterday. Google Play is not showing downloads as for now and I came to know that it will show number of downloads after 2-3 days.
I am curious that, in such case, how can I benchmark our app's performance? We have received 30 ratings so far. Are they a good start? Is there any benchmark or tool to determine if our app is going fine or not?
I tried to do Google Search but was unable to find any answer which can give this information.
I shall look forward to learn from you in this regard.
Best,
Hira
New users from acquisition sources
First-week engagement rates
First-week retention rates
Most used features
Least used features
App-store views and ratings
App installs vs. churn
Glitches/bugsIt's amazing how much we actually use our phones in a given day, especially when we watch "videos"! Rate this thread to express how many hours of screen-on time you can get on the Samsung Galaxy Tab A series before depleting the battery.
I've been truly impressed by this tablet's battery life. Owning it for a few months, I recently switched to the Nexus Stock rom (Android 9.0, stock kernel, no root, no app for optimizing battery).
Test conditions:
- Wi-Fi always turned on
- Bluetooth turned for several hours
- Moderate usage (reading comics, listening to music, not very demanding games)
- Not many apps in the backgroud, just Facebook, Messenger and Discord
With this I managed to get more than 14h30 of SoT from 100% to 5%. Never seen such a good SoT before
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Servicei have installed the Joneplus tool on my oneplus 5 phone. Everything works good until one day I tried to listen to one of the recordings and the recording sound was bed...the voices sounds like in slow motion and "robotic"
I don't know why the recordings began to be like that ..maybe because I have update my phone to android 10?
how to i solve this issue? ( i already tried to uninstall and reinstall joneplus tool)
TNXToday I bring you 3 new wallpapers to add to your collection, ported straight from the OnePlus 8T's OxygenOS 11.
This means, swiping across desktops triggers a rotation effect on the moving parts of the wallpaper, as well as a color change when it's night time or day time. This is something that fake ports can't achieve, as they limit to just play a screen recording of the wallpaper instead of using the actual OpenGL-based code from the original wallpaper.
[Warning]: Your device needs to have good OpenGL performance in order for the wallpaper to look as fluid as it actually is. My baseline for testing has been an Xperia XZ Premium running Android 9.0 on a forced 4K resolution, and it performed particularly well there. Thanks to using that phone as baseline I was able to notice some performance issues as well as tweaking the wallpaper in order to look as fluid as possible, but YMMV.
P.S: These won't work on Samsung/Mediatek devices and everyone is aware. Please, refrain from complaining about it.
Check out this Twitter thread in case you would like to see a video recording of how the Live Wallpapers look like.
Want to see how they look like?
(download link in case the image doesn't work)Released in May 2014, the Samsung Galaxy Tab 4 comes in 3 sizes, 7", 8" and 10.1". All 3 are powered by a Qualcomm Snapdragon 400 quad-core 1.2GHz processor and 1.5GB RAM. They all share the same 16GB or 32GB of internal storage, 3.15MP camera, 1280x800 resolution display and HSPDA/LTE connectivity (depending on the model). The 7" has a 4000mAh battery, the 8" 4450mAh and 10.1" 6800mAh.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Servicesamsung tab a 2020 SM-T307U
looking if there is a root or if it is expected eventually..
i have 14 days to switch to a different tablet if root is not ever going to be available
Register or Login with GoogleCreate a TWRP-compatible device tree only from a recovery.img and (optional) ADB
Features
- Create device tree initial structure (like Android.mk, AndroidProduct.mk etc.)
- Add proper license headers in every file
- Automatically detect device architecture
- Pick stock recovery image info (eg. image size, kernel pagesize etc.)
- Inherit more infos directly from the device with ADB (optional)
- Create ad-hoc recovery.fstab
- Add needed init.rc files
- Take cmdline automatically
- A/B support
- System-as-root support
- dt.img support (not appended DTBs)
- dtbo.img support (device tree blobs overlay)
- Samsung Odin TAR support
- Samsung SEAndroid support
- Ramdisk compression support (LZMA, 7Z, GZIP etc...)
- MTK support
- Extract stock kernel automatically
- Fill BoardConfig.mk without needing to inherit external makefiles (like TwrpBuilder does), making a clean and standalone device tree
- Easily improveable with a text editor, w/o needing to know any programming language
- Create a ready-to-push git repo in device tree folder
What is needed
- A PC or a server with Linux, Bash and Git installed
- Stock recovery image from a device OTA or a ROM dump
- (optional) you can use ADB to retrieve additional informations
How to use it
XDA:DevDB Information
[SCRIPT]TWRP device tree generator[v1.1], Tool/Utility for all devices (see above for details)
Contributors
SebaUbuntu
Source Code: https://github.com/SebaUbuntu/TWRP-d...tree-generator
Version Information
Status: Stable
Current Stable Version: v1.2
Created 2020-04-19
Last Updated 2020-09-28GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
- Launcher supports work profile apps and dual apps from various oems
- Launcher supports Android 10+ gesture system but restricted.
- Groups allow users to create organized folders of apps available in the Groups Sheet
- Personalized search in the Search Sheet
- A revised single screen interface introducing a new layered material design.
- Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
- The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
- The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
- Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
- The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
- Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
- The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
- The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
- The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
- The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
- The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
- Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
- Recent Apps don't have a long click listener (no sheets).
- The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
- The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
- App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
- GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
- Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
- Users can block apps from showing badges and priority notifications.
- Launcher sheets can be accessed from the launcher menu.
- The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
- Widgets can be resized by long clicking on them and a resize module will appear (WIP).
- The launcher settings will theme itself on Android 10 light or dark mode.
- Launcher settings features smart suggestions that appear on certain variables available
- Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
- The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
- Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
- GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
- System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
- Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
- The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
- GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
- Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
Links:
XDA Original Post
V1 XDA Thread
Drywall Wallpaper Manager
Launcher Manager for Testing Launchers
GCA Telegram Channel
GCA Telegram News Channel
Download : GCA V2 Open Beta
(Download will also be available in the Telegram News Channel)Okay got it today. Here are as many angles as I could think of that would be helpful and I compared the size with a nexus 4 and an iPhone 5s. I've tried 3 different headphones and all connected without any problems (the slot is huge). However, i wouldn't use one with an L shaped connection. It was very difficult to remove. Straight ones were no problem. The speaker grills are kind of nice. Holding the phone in landscape doesn't block the sound this way. Although I'm not sure how long you could hold it. It's heavy as hell! I can't comment on battery life of course anytime soon, but if there's any other questions let me know. Attachment 4353540Attachment 4353541Attachment 4353542Attachment 4353543Attachment 4353544Attachment 4353545The Samsung Galaxy Tab A series has a crazy crisp display. Just kidding, this is automated text so who knows if this screen is any good. So, you be the judge! A higher rating indicates that it's extremely sharp and clear, and that you cannot see pixels with your naked eye.
Then, drop a comment if you have anything to add!"To prevent spam, you must have a higher post count in order to make a new thread in this development section.�But feel free to make new thread in the non-development sections like General, Q&A, etc. Thanks for your understanding! "
I've just registered, so what should I do now?
Anyway, I have a question about cordova. In the app I'm responsible for (I didn't make it) I have the following error:
```
Android resource linking failed
app/platforms/android/app/src/main/res/xml/config.xml:34: AAPT: error: resource drawable/icon (aka pl.example.exampleLdrawable/icon) not found.
```
in the app/config.xml file, I have this: android:icon="@drawable/icon"
But what is this location, I mean, where in the app should I put the icon? I tried app/platforms/android/res/drawable but that doesn't work.
I do have the files (icons) in dirs like drawable or drawable-hdpi-v4 but I have no idea where I should put them.
Can you help me please with that?XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThis tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/The module (flashed it in TWRP) doesn't work on OB 18 (OP 7). It broke the network as there was no signal and clicking the SIM & Network in settings force closes... Uninstalled it and all good.
FWIW, it worked fine on OB 17.Few days ago, I discovered a very useful application named xModGames.
It gives to the user the possibility to cheat on some popular games like 8 ball pool, clash of clans etc ...
I'm very curious on how this application works.
For example, on 8 ball pool, it draws guidelines. How this application could modify other applications and if I want create some mods for 8 ball pool, how can I proceed ?
Thanks in advanceI am a student at the University of Potsdam, Germany and I am currently writing my bachelor's thesis in the field of "business informatics". The title of my bachelor's thesis is "Multi-platform strategies by application developers on software platforms".
Therefore, I am investigating efficient methods for deploying apps on multiple platforms.
A platform is, for example, the "Apple App Store" or the "Google Play Store".
In this context, I conduct a survey among app developers.
It would be very helpful if you could spend 5 minutes for the following survey:
"https://survey.wi.uni-potsdam.de/index.php/453275?lang=en"
All information is published anonymously and will not be passed on to third parties.
Thank you for your help!The OnePlus 7 Pro is a 6.67" device with a 1440x3120p resolution display. The Snapdragon 855 chipset is paired with 6/8/12GB of RAM and 128/256GB of storage. The main camera is 48+16+8MP and the selfie camera is 16MP. The battery has a 4000mAh capacity.But last week I bought Xiaomi Mi 10 Youth Edition 5G ( mi 10 lite zoom) china rom but I was surprised to see that this Xiaomi phone doesn't support my CDMA sim that works in all my previous Xiaomi china rom phones
I tried to use DFS CDMA tool but I couldn't connect
And my phone is still locked
What should I do ?!
Please help me 😭but are looking for a simple app to do that?
NewPipe has been created with the purpose of getting the original YouTube experience
on your smartphone without annoying ads and questionable permissions.
The application is open source and you can check on it at GitHub.
NewPipe is free and open source
Your advantages:
- Quick help when you have a problem (nobody's ever had one)
- Dozens of people bring NewPipe forward and translate it into 60 languages.
- You can check the sourcecode on GitHub and contribute to NewPipe.
- NewPipe is covered by the GPL 3.0 license.
- Get NewPipe from F-Droid and we guarantee that it is generated from the sourcecode.
- NewPipe is available for free...
DOWNLOAD LATEST APK
NEWPIPE PROJECT PAGE
Releases link on Github
...newpipe advantages:
-Lightweight
-Downloads
-Extended Privacy
-Background Player
-Popup Player
-Subscriptions
-Bookmarks
-History
OK, but why NewPipe is free??
- We love what we are doing
- NewPipe is powered by a growing community
- Our goal is to make the internet a more free (libre) place and open it for everyone
- Your donations cover a majority of our costs
- F-Droid, WebLate, Sentry and other companies offer their services to open source projects for free
bring NewPipe forward,
support our developersRegister or Login with Google
OK I've compared and I can't see anything major. The only thing you do have is a few more mount points which I've not had in mine (listed). Where are they from? I think mounting the sdcard (modem firmware) is a bad idea so I'm going to skip that.
/sbl1 emmc /dev/block/bootdevice/by-name/sbl1
#/sbl2 emmc /dev/block/bootdevice/by-name/sbl2
#/sbl3 emmc /dev/block/bootdevice/by-name/sbl3
/tz emmc /dev/block/bootdevice/by-name/tz
/rpm emmc /dev/block/bootdevice/by-name/rpm
/aboot emmc /dev/block/bootdevice/by-name/aboot
#/sbl2b emmc /dev/block/bootdevice/by-name/sbl2b
#/sbl3b emmc /dev/block/bootdevice/by-name/sbl3b
#/tzb emmc /dev/block/bootdevice/by-name/tzb
#/rpmb emmc /dev/block/bootdevice/by-name/rpmb
#/abootb emmc /dev/block/bootdevice/by-name/abootb
#/usb-otg vfat /dev/block/sda1 /dev/block/sda flags=removable;storage;display=USB-OTG
/external_sd vfat /dev/block/mmcblk0p1
/usb-otg auto /dev/block/sda1
So, I have twrp installed, and a fast bootloop almost instantly on start. I haven't been able to solve it thus far. I can get into twrp which is something though.
So far dd is ending up with a corrupt partition and twrp insists on a zip for system flash. Trying to figure out how to convert it.
Actually you said you tried 10 unsuccessfully, so how did you then flash the v8 image?
adb reboot edl
I recommend you take down the twrp and remove the line which mounts the firmware partition as sdcard in case this is what wiped your IMEI. I build my own without this line and IMEI survived.Say "cheese", then rate this thread to express how photos taken with the Samsung Galaxy Tab A series come out. A higher rating indicates that photos offer rich color (without over-saturating), sharp detail (with all subjects in-focus), and appropriate exposure (with even lighting).
Then, drop a comment if you have anything to add!I am facing an issue where a folder by the name 'migrator' is getting created, at random timings in the sdcard folder.
This started happening around 6 months ago and wasn't too much of problem and I would just delete the folder. It would then be recreated at a later date. Recently, the phone is running out of space and has been slowing down the phone while it is gets created in the background.
I have tried deleting most applications one at a time to find any app that causes the issue, but haven't been successful in finding the cause.
I am rooted with magisk and currently on Oxygen OS 9.0.4
I would appreciate any help to find the root cause and fix the issue.
Thanks in advance!GCA or GO Custom Android Launcher is a pixel design inspired launcher with core component features from chromium OS desktop. Its designed and built for Android Go but also offers new devices a fresh and new experience for your homescreen.
Supporting Android 5.x+, GCA offers a single screen launcher replacement app for android users who want a pixel lite experience. Alot of the offered features come from my other launcher, Sapphyx Launcher, and rebuilt to be faster, lighter and ultimately offer a better experience in a small package. It runs beautifully on Android Go, smooth on devices with Android 5 (Like the Kindle Fires) and offers a theme engine that's customizeable by the user.
GCA features are dependant on what Google Apps are installed that depend on an action, whether Google services is installed or not and specific apps that are installed (Action Dash for Dash System Shortcut)
Core Features
-A single screen setup (no grid, one widget).
-A customizeable App Drawer with multi-purpose search.
-The App Drawer features apps with system shortcuts and app shortcuts and allows users to blacklist apps.
-App Drawer supports a secondary "Work" tab to help organize apps in a better fassion.
-App Shortcuts generate a list of selectable app shortcuts in a vertical menu of the app popup.
-Recent Apps
-Easy to use launcher customization
-Pixel/Chromium desktop like Cosmetics
-Launcher uses my wallpaper app, Drywall, as default wallpaper provider. If its not installed, fallback on user selected.
-Notification Badges and Underlining. Clicking on the app will dismiss. Is not supported on Android Go unless activated by OEM.
-Adaptive Icons
-Icon Packs
Adaptive Icons
-GCA Launcher uses James Fenn's adaptive icon view library. The code itself was inspired by lawnchair's backport of adaptive icons for pre oreo devices. It pulls v26 icon assets for foregrounds and backgrounds and relayers them as an adaptive icon view which behave similar to pixel launchers adaptive icons. How you choose to use them will affect performance of the launcher and should be chosen dependant of how capable your device is. Users can select which shape of adaptive icon path they want to use. This will also apply itself to app actions, predictions and app drawer button.
There are 3 options of icons you may use for your drawer.
Pixel Adaptive - will try and generate adaptive icons based on the assets gathered by the icon and created by the system, this will slow down your app drawer depending on your hardware. (Not recommended for Android Go, Does not support icon packs)
Palette Adaptive - will disregard any assets available from the icon and simply scale the icon drawable as foreground and apply the dominant color of the icon for the background drawable (Faster than pixel adaptive, supports icon packs)
Normal Icons - normal default icon behavior and style
What's Not Working / WIP
-Icon Packs that generate their own icons like Icon Pack Studio may cause crashes, please don't use them. Icon Packs developed with BluePrint library are recommended.
-If external data usage permission is denied on first start, homescreen scrim will not be available or work correctly. Homescreen scrim will set to default white if using a live wallpaper.
-GCA is setup to change available features based on Android OS, if you notice something that may not be correct or crashes, let me know. This is your only paywall.
-Android 5.X support is limited but work in progress. Cosmetics and style need updated but it is functional. Please report back any inconveniences and crashes.
-Android 10 support has been added but we are monitoring performance and compatibility.
-Adaptive Shape Views and Adaptive Icon performance may vary on devices.
Changelog
-A detailed changelog can be found in the application settings. It is written in html so translation is your responsibility, html can be copied.
Donations
/ Pledges
-Yearly pledges have been implemented in the app. You are not obligated for any reason to purchase these but if you want regular updates, its recommended. Pledges keep the project alive and a few cups of coffee or a beer is sent my way (depending on time of day).
Downloads
Google Play: https://play.google.com/store/apps/d...calsd.symphlyx
Xda Labs: https://labs.xda-developers.com/stor...calsd.symphlyx
Telegram: Support channel can be found in the app settings
Bug Reports / Request
Please use the telegram channel or xda forums for bug reports and request. Do not use the Google Play ratings as a place for this stuff.
While making request, take into consideration how itl affect performance. We are keeping Android Go as our target OS. If itl consume memory or increase size massively , im not interested. We are aiming to keep customization minimal and the launcher simple but their could be different ways to approach currently implemented features, and id love to hear your ideas.These are Nightly / Stable builds and ready for daily use. Always read OP before installing.
Features:
Known issues:
Changelog: Click Here
Download:
ROM: Click Here (Always download latest)
Gapps: Click Here (Recommended - Latest Arm64 nano or lesser Gapps variant)
TWRP: Click Here
Firmware: Click Here (Always download latest)
Mirrors: Click Here (Courtesy: @dustupajisk)
Magisk v22 or above for Root: Click Here
First Time Installation:
- Backup before you begin
- Remove PIN protection and then reboot to TWRP recovery
- Wipe Data under Advanced (Do not use Format Data - which erases internal memory)
- Wipe System and Cache under Advanced
- Flash required firmware
- Flash ROM + Gapps
- Optionally - Flash supported root
- Optionally - Flash No Verity v3 zip ONLY if you are decrypted [This is not tested on Android 10]
- Reboot and profit!
Update Installation:
- Backup before you begin
- Reboot to TWRP recovery
- Flash required firmware if new one available
- Flash ROM
- Optionally - Flash No Verity v3 zip ONLY if you are decrypted [This is not tested on Android 10]
- Reboot and profit!
Loving this? Support by donating.
Join us on Telegram Group for crDroid Oneplus 5/T for quicker updates and help
XDA:DevDB Information
crDroidAndroid, ROM for the OnePlus 5
Contributors
neobuddy89
Source Code: http://www.github.com/crdroidandroid
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
ROM Firmware Required: 10.0.0
Version Information
Status: Stable
Created 2019-09-25
Last Updated 2020-10-25@shadowstep, this thread is simply amazing! I can't thank you enough for everything you have done. Especially, the time and attention to detail on all of your posts. Your latest dark red version of the codeworkx recovery is awesome. Thank you very much!!
I hope this is okay to ask here. I figured you of all people would know if this is possible to do. I had posted this in the OxygenOS stable build thread in regard to the latest stable build 5.1.5 for the OnePlus 5:
EDIT: Removed attachments.
Quote:
Originally Posted by djsubterrain
Yeah no problem, I just got it to dump out the logs devs would normally need, I used to do testing for Shreesha in the OnePlus 2 forums so it's the logs he recommended getting.
You're most welcome! I'm glad you're enjoying the themed version. Also, regarding your query, I made two flashable zips (attached at the end of this post) for you - one with the dialer from OOS OB16 and the other with the dialer from OOS 5.1.5. Try flashing the OB16 one on your existing 5.1.5 installation and see if that works (make a few calls, etc. to check). If it does, cool. If it doesn't, just flash the 5.1.5 zip and you'll get back the pre-installed version.
I flashed the OB16 Dialer .zip you made, booted up, and tried it. It was refreshingly a different error than I had gotten before, in which it was now mentioning OPContacts force closing. I then tried to install the latest contacts .apk file over the stock 5.1.5 version, just with the package installer. That didn't seem to work, so I took a look at your script, and moved the following folders to the internal storage: Contacts, ContactsProvider, Dialer, OnePlusCamera, and OnePlusCameraService so I would have a backup of them in case the newer OB16 files didn't work. I then used a tool called Auto Tool v3.0 to extract the system.new.dat file so I could grab the OB16 files from the full ROM. Moved them all to the priv/app folder, and followed your permissions, 0755 for folders, and 0644 for files. Booted it back up, and everything is working perfectly!
I was wondering, if the following changes is what would be needed to do that automatically with your script? I haven't tried it or anything as I'm not too familiar with scripting, and wasn't sure if the flashable .zip needed to be compressed a certain way, uncompressed, or even signed/resigned? :
Also, thought these might be helpful to provide:Untouched OnePlus 5 Open Beta 16 Dialer, Contacts/ContactsProvider, and Camera/CameraService:oneplus5_ob16-dialer-contacts-camera.7z (29.2MB)Please let me know if you would like me to remove this link or anything from my post. Last thing I want to do is clutter your beautiful thread
Once again, thank you for everything! I greatly appreciate it.
You just made my night! Thank you so much for doing that for me
I flashed the OB16 Dialer .zip you made, booted up, and tried it. It was refreshingly a different error than I had gotten before, in which it was now mentioning OPContacts force closing. I then tried to install the latest contacts .apk file over the stock 5.1.5 version, just with the package installer. That didn't seem to work, so I took a look at your script, and moved the following folders to the internal storage: Contacts, ContactsProvider, Dialer, OnePlusCamera, and OnePlusCameraService so I would have a backup of them in case the newer OB16 files didn't work. I then used a tool called Auto Tool v3.0 to extract the system.new.dat file so I could grab the OB16 files from the full ROM. Moved them all to the priv/app folder, and followed your permissions, 0755 for folders, and 0644 for files. Booted it back up, and everything is working perfectly!
I was wondering, if the following changes is what would be needed to do that automatically with your script? I haven't tried it or anything as I'm not too familiar with scripting, and wasn't sure if the flashable .zip needed to be compressed a certain way, uncompressed, or even signed/resigned? :
Also, thought these might be helpful to provide:Untouched OnePlus 5 Open Beta 16 Dialer, Contacts/ContactsProvider, and Camera/CameraService:oneplus5_ob16-dialer-contacts-camera.7z (29.2MB)Please let me know if you would like me to remove this link or anything from my post. Last thing I want to do is clutter your beautiful thread
Once again, thank you for everything! I greatly appreciate it.
Also, yes, the changes that you've done are fine. You can simply extract the zip, add the required folders, make changes to the updater-script and re-zip. Don't have to sign the zip as TWRP supports flashing of unsigned zips.
P.S. - I'm okay with you keeping your zip linked. Just a suggestion - when making long posts, in addition to using the CODE tag, also add the HIDE tag before it (like I've done above for your CODE bit). It's just cleaner.
That's great! I'm glad you took matters into your own hands and troubleshooted the issue yourself. That's the best way to learn, and that's how I went about things too when I was starting up. Good stuff, and keep those curiosity levels up! Also, yes, the changes that you've done are fine. You can simply extract the zip, add the required folders, make changes to the updater-script and re-zip. Don't have to sign the zip as TWRP supports flashing of unsigned zips.
P.S. - I'm okay with you keeping your zip linked. Just a suggestion - when making long posts, in addition to using the CODE tag, also add the HIDE tag before it (like I've done above for your CODE bit). It's just cleaner.
I totally forgot about the bbcode hide tag Great suggestion as it is definitely feels cleaner, and more organized.
Once again, thank you for all you bring to the Android community, and especially to the OnePlus 5. If you are ever in need of webhosting, mirrors, or access to a dedicated server with plenty of bandwidth/storage in a California data center, I would be ecstatic to help out in any way to show my appreciation
Much appreciated! Seeing, and doing stuff is definitely the best way I learn I totally forgot about the bbcode hide tag Great suggestion as it is definitely feels cleaner, and more organized.
Once again, thank you for all you bring to the Android community, and especially to the OnePlus 5. If you are ever in need of webhosting, mirrors, or access to a dedicated server with plenty of bandwidth/storage in a California data center, I would be ecstatic to help out in any way to show my appreciation
@shadowstep in your descriptions of blu_spark's and codeworkx's recovery a significant difference is mentioned by pronouncing "FBE support" on codeworkx's custom build of TWRP but not on blu_spark's.
I was under the impression that blu_twrp supports FBE as well, could you point out any report or announcement which led you to the conclusion that FBE is unsupported on eng.stk's TWRP? Or how you came to this conclusion in general.
This is a relatively surprising information to me, that's why I'm asking - thanks...
@shadowstep in your descriptions of blu_spark's and codeworkx's recovery a significant difference is mentioned by pronouncing "FBE support" on codeworkx's custom build of TWRP but not on blu_spark's.
I was under the impression that blu_twrp supports FBE as well, could you point out any report or announcement which led you to the conclusion that FBE is unsupported on eng.stk's TWRP? Or how you came to this conclusion in general.
This is a relatively surprising information to me, that's why I'm asking - thanks...
I also didn't think it would be an issue, since everyone knows it supports FBE. Nonetheless, I totally get your point; it's absolutely fair to ask. Sorry for leaving it ambiguous, thus creating doubts. Once again, to be clear, it does support FBE as well.
blu_spark TWRP supports FBE as well. I didn't mention it explicitly because I was trying to keeping everything concise and didn't want to overshoot my self-made rule of word/sentence limit. I also didn't think it would be an issue, since everyone knows it supports FBE. Nonetheless, I totally get your point; it's absolutely fair to ask. Sorry for leaving it ambiguous, thus creating doubts. Once again, to be clear, it does support FBE as well.
Just a suggestion about the phrasing, it's good to set a own limits on the words used to describe things to keep it simple and tight but it's also very important (maybe even more) to get everything relevant in there, especially in relation to similar things like two versions of TWRP and to make sure to leave unintentional suggestions/implying out, this can be quite a task sometimes - however it's your thread, only yours, I totally respect that, so please read this comment only as mere feedback...
Shadow, you've won a fan!
Usually I take a lot of time at work exploring options and finally managed to find the best MOD's and Tools I want on my phone for daily driver.
This thread includes most of them, the only one I didn't knew about was the GPS one, which I'm testing right now.
A small question, each time I install a new OOS Update, does the GPS Zip get removed?
I'm currently on a OnePlus 5 with OOS 5.1.5 and the XXX Magisk MOD on top of it.
Also I'm interested in the "remove PIN, Pattern" one. Does it only allow my phone do be unlocked via Fingerprint?
Can you give me a bit more information on it? Since it doesn't have a XDA Thread.
Thanks for clearing this up, even though I know about FBE support of bluspark it got me on a totally wrong track and made me doubt that you'd know something I maybe had missed, as this "feature of concern" (encryption!) is certainly one users will look out for it's probably a good idea to adjust the disclaimer accordingly, if you point out this feature on one project that prominently but don't even mention it on the other at all it will imply to probably more than only myself that it's missing... especially as your target users in this thread are rather the inexperienced ones!
Just a suggestion about the phrasing, it's good to set a own limits on the words used to describe things to keep it simple and tight but it's also very important (maybe even more) to get everything relevant in there, especially in relation to similar things like two versions of TWRP and to make sure to leave unintentional suggestions/implying out, this can be quite a task sometimes - however it's your thread, only yours, I totally respect that, so please read this comment only as mere feedback...
Peace & I'm out
Thanks again!
Quote:
Originally Posted by timartinhof
Shadow, you've won a fan!
Usually I take a lot of time at work exploring options and finally managed to find the best MOD's and Tools I want on my phone for daily driver.
This thread includes most of them, the only one I didn't knew about was the GPS one, which I'm testing right now.
A small question, each time I install a new OOS Update, does the GPS Zip get removed?
I'm currently on a OnePlus 5 with OOS 5.1.5 and the XXX Magisk MOD on top of it.
Also I'm interested in the "remove PIN, Pattern" one. Does it only allow my phone do be unlocked via Fingerprint?
Can you give me a bit more information on it? Since it doesn't have a XDA Thread.
Coming straight to your questions, the optimized GPS mod contains nothing but an optimized version of the gps.conf file (which I edited myself, after hours of Googling and research). It might/might not work for everyone, but it works just fine for me, so I put it up here for those who wanted to use it. Do let me know if you notice any improvements/issues with using it.
Also, yes, every time you install an OOS update, all your system mods get removed (not the Magisk modules, but mods that actually modified the system partition -- which my TWRP flashable zips do without breaking SafetyNet). Hence, you'll have to re-flash it after every OOS update.
And finally, the remove security flashable zip you're referring to, it's basically useful for scenarios where you've rebooted your phone (and you can't unlock it with your fingerprint yet because after a reboot, you need to enter your pin/pattern/password one time mandatorily) and it doesn't accept your pin/patten/password for some reason. Flashing this zip in recovery will remove your pin/pattern/password security and you can simply swipe up on your homescreen then to get into your phone without entering a password after rebooting. It will NOT just keep fingerprint security enabled, but will remove the lockscreen security entirely (without removing your stored fingerprint data, which means if and when you re-enable pin/pattern/password security, the system will automatically re-enable fingerprint unlock as well). I hope this explains!
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceNow on functionality of our App:
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )These are Alpha / Test builds and not recommended for daily use. Always read OP before installing.
Features:
Known issues:
Changelog:
Initial Build
Download:
ROM: Click Here (Always download latest)
Gapps: Click Here
TWRP: Click Here
Firmware: Click Here (Always download latest)
Mirrors: Click Here (Courtesy of @dustupajisk)
First Time Installation:
- Backup before you begin
- Remove PIN protection and then reboot to TWRP recovery
- Wipe Data under Advanced (Do not use Format Data - which erases internal memory)
- Wipe System and Cache under Advanced
- Flash required firmware
- Flash ROM + Gapps
- Reboot and profit!
Update Installation:
- Backup before you begin
- Remove PIN protection and then reboot to TWRP recovery
- Flash required firmware if new one available
- Flash ROM + Gapps
- Reboot and profit!
Format complete data is not required since encryption works..
However, PIN of previous Android Versions will not work on this.
PIN of this version will not decrypt in recovery. So, remove PIN before rebooting to recovery.
Source:
https://github.com/crdroidandroid/android_device_oneplus_msm8998-common/commits/lineage-18.0
https://github.com/crdroidandroid/android_device_oneplus_cheeseburger/commits/lineage-18.0
https://github.com/crdroidandroid/android_device_oneplus_dumpling/commits/lineage-18.0
https://github.com/crdroidandroid/android_kernel_oneplus_msm8998/commits/10.0/
https://github.com/crdroidandroid/proprietary_vendor_oneplus/commits/11.0-oneplus5
https://github.com/crdroidandroid/android_device_oppo_common/commits/lineage-18.0
Loving this? Support by donating.
Join us on Telegram Group for crDroid Oneplus 5/T for quicker updates and help
Cheers!
XDA:DevDB Information
crDroidAndroid, ROM for the OnePlus 5
Contributors
neobuddy89
Source Code: https://github.com/crdroidandroid/
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
Version Information
Status: Testing
Created 2020-10-02
Last Updated 2020-10-19Can we consider android development as career? Is it have good scope /future in terms of jobs?
Sent from my GT-I9300 using xda premium
In England I've recently been looking for IT based roles and had a look at android developer jobs. To my surprise there are many that I found! The only down side is, is that a lot of them wanted you to know how to develop for more than one platform, which unless I'm mistaken I've not heard of a tremendous amount of people that happen to be able to do both at the same level. It might be a while before they realise this, or I could be completely wrong and there are many, many people who are able to develop for multiple platforms like Android/IOS.
I've also seen a lot of freelance work being offered for not just the Android platform but all other major platforms. So overall I'd say if you are good enough of a developer then you could definitely get a decent wage from being an android developer, either in a permanent role, or as a freelancer.
I work for a software development company in UK. We have different development teams for different platforms. I guess, in ads they ask for work skills in various platforms, just to be able to substitute a colleague, just in case. Big companies usually devide teams, from my experience.
In the current scenario, If you have knowledge of any programming language then you must get a good salary package, but the demand of android developer is much more in the market because the android phone user are more in the market and company want to develop versatile android app.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI'm an independant Sound Designer / Music Producer and the founder of Chirp Chirp Sounds). I create audio for games, animations, films and also work as a ghost producer.
Just want you to know if you need some creative sound stuff (whether it is music, sound design, dialog editing etc) feel free to message me. I know how important your projects are and I'll be glad to make them sound good.
These are some of my works:
- - Onward Internet (Sound Design & Music)
- - Brick Shot 2 (Sound Design)
- - Fast Track (Sound Design)
- - Wobblers (Music & Sound Design)
- - Magic Mountains (Sound Design)
- - Tower of Beauty (Music & Sound Design)
- - Tummy Slide (Sound Design)
- - "M U R M U R" short animation (Sound Design)
Here's my soundcloud profile
e-mail: [email protected]
chirp-chirp!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceOrangeFox Recovery
Installation:
0. Backup your ROM, your data, your internal storage, and your settings/apps, to an external device
1. Reboot to fastboot screen, connect USB and send fastboot commands "fastboot flash recovery <recovery image file name including extension>"
OR
1. Reboot to existing TWRP recovery and flash image file to recovery partition
2. Reboot to recovery
3. Enjoy!
Features:
* Updated with latest TWRP commits
* Built-in support for installing init.d functionality
* Built-in support for installing Magisk
* AromaFM
* Flashlight
* Password, torch, led
* Superb new UI and themes
* OrangeFox theme engine:
- choice of theme (black, dark, etc)
- choice of color scheme
- choice of splash screen
* Alternative lockscreen
* And many more!
Source Code:
https://gitlab.com/OrangeFox
https://github.com/neobuddy89/androi...eseburger-twrp
Screenshots:
https://files.orangefox.tech/Screenshots/R10/
IMG Download:
19 Feb 2020: https://sourceforge.net/projects/crd...r.img/download
Frequently Asked Questions:
* See https://forum.xda-developers.com/sho...28&postcount=3
Credits
* TeamWin - for TWRP
* The OrangeFox Team - for your hard work
XDA:DevDB Information
OrangeFox Recovery Project, ROM for the OnePlus 5
Contributors
neobuddy89
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
Version Information
Status: Stable
Created 2020-02-18
Last Updated 2020-02-18The Barnes & Noble Nook HD and HD+ are the successors to the wildly popular Nook Color and its somewhat less popular younger brother, the Nook Tablet. The flagship HD+ builds on its predecessors with impressive specs including a 9" IPS display boasting a retina-pleasing 1920 x 1200 resolution, a dual-core 1.5 GHz TI OMAP 4470 processor, a full gig of RAM, and up to 16 gigs of storage. Its little brother offers much the same specs, but with a lower 1.3 GHz OMAP 4470 chip and a 7" IPS panel with a 1440 x 900 resolution.It's Cleaner
See more content, and fewer reminders that you were shopping for cat food last November.
Without ads, XDA feels like a fresh spring day.
It's Faster
Ads are a necessary evil, and unfortunately they slow down your experience, both on mobile and desktop.
So what do you get when you kill all the ads? A faster, lighter site.
It's Good for XDA
Why not just use AdBlock? That's totally your right! But realize that AdBlock doesn't help XDA. We
have multiple full-time developers and nearly 15 servers. Dat shiz ain't free! If you love XDA and want
ensure its future existence, consider getting XDA Ad-Free instead of using AdBlock.
Why are you doing this?
We know ads suck, we really do, and we try to work with our ad providers to remove the most obnoxious types. However, over the years we've gotten countless requests from passionate XDA users that are willing to pay to remove ads in a gesture to support the site. Some of these people use ad-blocking software, some don't. Either way, we wanted to at least make the optional available. So for less than $1 per week, we will let you use our ad-free template. What is your stance on ad-blocking software?
Obviously we prefer if people didn't block ads, but it's your right to do so. If you want to still use an ad-blocker but let ads come through on XDA, you can add us to your whitelist. Are there any other benefits with XDA Ad-Free?
Not at this time. If enough people use it, we'll consider adding new features and functions. But for now, it simply removes all ads from both the forums and the Portal. As a result, pages are more content-dense and they load a bit faster. Here's a comparison of what pages look like before and after ads: Comparison. Does Ad-Free work on desktop and mobile?
Yes, as long as you are logged into your account. Ok soooo how much does it cost?
XDA Ad-Free is $3.49 for one month, $10.99 for three months, or $29.99 for a year. You can choose to buy XDA Ad-Free one-time, or you can do recurring to keep the Ad-Free magic going. And you can gift it! What a great way to show appreciation to a fellow XDA member or developer by giving them total ad banishment. You can pay via bitpay (Bitcoin) or PayPal. What if I want to cancel?
You can cancel by going to the Ad-Free Manage Page. I have more questions!
We published an article with a bunch of data from ad-free. Check it out! ZOMG! I have even more questions!
Cool. Drop us an email at[email protected].Discuss mobile app protyping, graphics, animation, and the technical aspects of UI/UX implementation and testing. Find useful design resources, argue about best practices for Android design, or find an XDA member willing to help with your project. Creative design is integral to a good user experience. This forum has tips, links, and guides that can help you make your application both functional and beautiful.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceAfter 12 hours of trying to root Galaxy tap A SM-T515, I could root it on the latest update without twrp .
No bootloop!!
No failed on odin
Register or Login with Google
Finally!!
After 12 hours of trying to root Galaxy tap A SM-T515, I could root it on the latest update without twrp .
No bootloop!!
No failed on odinNow you can also run demand from various ad formats on the same ad placement.
Like showing a native ad on a banner ad placement or showing a MREC on a native ad placement, depending on the higher CPM.
Checkout SDK X from GreedyGame for more details and sign up for the exclusive Early Access Program.You know the story by now after 2 years, lets get started.
GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
Launcher supports work profile apps and dual apps from various oems
Launcher supports Android 10+ gesture system but restricted.
Groups allow users to create organized folders of apps available in the Groups Sheet
Personalized search in the Search Sheet
A revised single screen interface introducing a new layered material design.
Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
Recent Apps don't have a long click listener (no sheets).
The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
Users can block apps from showing badges and priority notifications.
Launcher sheets can be accessed from the launcher menu.
The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
Widgets can be resized by long clicking on them and a resize module will appear (WIP).
The launcher settings will theme itself on Android 10 light or dark mode.
Launcher settings features smart suggestions that appear on certain variables available
Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
General Note:
This is a pre beta of which means parts of the launcher are not even functional yet. I did a pre beta to find errors i couldn't find myself and to get feedback on the progress we currently are at. If you see a page that is blank or something isn't functional, chances are it wasn't ready for the public yet. Please be patient with things.
Common Questions:
Why does GCA Launchers Adaptive icons behave so differently compared to the ones found in stock launchers?
-That is because the icons use a different mechanic and were made from scratch so everyone could enjoy adaptive icons and it not be exclusive to 7.1+ users. My icons can be modified from the icon to the shape override.
Can we get a launcher import option?
-No, not currently. Almost all launchers that exist use the base of Googles Launcher3 which adding an import option for them is easy. I would have to take the database, tear it apart, create a converter and place the data we need were it belongs. We are not there yet.
The System UI seems to behave differently from other apps.
-GCA Launcher has a theme engine similar to pixel launcher and trys to make the choice of a light or dark navbar or statusbar. Using Android10s dark mode may confuse things but eventually il have it all sorted out.
The launcher interface isn't what I expected. Shouldn't it behave like pixel launcher?
-No, it behaves like it should be. How it was designed.
Does it support quickswitch?
-It never will unless Google changes the api for the recents provider. I blame the lawnchair team of this common question as many users have assumed this is a premium feature now and should be supported by all launchers now which isn't the case.
Does this launcher support dark mode from android10?
-yes but we have some work todo yet
Why do things look weird in the launcher settings? Preference category is hard to read and matches the toolbar color.
-Try changing the color scheme in the style settings. This is the GCA theme engine at work.
Ratings:
If you post a rating for GCA Launcher coming from V1, more than likely i will dis regard it. V1 is being deprecated soon and all bugs and errors you will find in V1 on the playstore are being disregarded. V2 is a rewrite with new features and new bugs.
I updated the build earlier to fix something for Android 8 users and ended up screwing something up for Android 9 users so il be keeping tabs on everything as much as possible but I will not be able to do anything if no one says anything. Please provide feedback as much as possible. Thank you in advanced.
Those of you keeping me informed of crashes, thank you, thank you, thank you
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
Shelf apps can be changed by long clicking on a Shelf favorite and their will be a Favorite option to select a different package. This option isn't available in the App Drawer apps so it might be easy to miss.
When changing the icon sizes, make sure your changing the icon size and bot just the text size. Both options are in one dialog.
Id your having a hard time switching out your default launcher, you can use my No'Me app i have listed above. It helps alot.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI'm Jane, account manager come from Ecomobi, a platform which connect advertiser and publisher.
Building by well - experienced leaders in affiliate network, we own large quality mobile traffic in Brazil - India - Indonesia - Nigeira - Vietnam - Malaysia
Clear payment policy, many bonuses, high - security when become VIP publisher and many many interesting chance.
If you own mobile trafffic and wanna earn much more money, plz contact me.
Welcome all and i'm so proud to work with you.
Contact me if u 're interested plz contact at skype : jane.ecomobi.
Hope for co-operating soon !!!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI'm the developer of Blokada, a simple to use ad blocker for Android that works for all apps and doesn't require root. The idea is to make the app very simple to use, almost unnoticeable in daily operation, yet perfectly functional. I'm asking the awesome xda community to take a look, give feedback, and have fun!
I take it this is another local VPN blocking solution? What licence is it released under? I wouldn't trust any VPN that all my data is passing through unless it's open source, so I would highly recommend moving in that direction. Would you say the primary advantage over NetGuard is ease of use? I personally need much finer-grain control of per-app host blocking, but I can see how this could be very useful to others.
First of all, thanks for your great app！
Most of ads removed for mine, still some (may be local) ads remained. I am using this in Japan.
I understand your concept, ease of use first . if only some customization would be... (ex, extra choice of country ? something)
anyway thanks again, keep going!
First of all, thanks for your great app！
Most of ads removed for mine, still some (may be local) ads remained. I am using this in Japan.
I understand your concept, ease of use first . if only some customization would be... (ex, extra choice of country ? something)
anyway thanks again, keep going!
Quote:
Originally Posted by x-fer
What amazed me is the amount of ads that ping even on apps I've paid for the ad-free versions within the app. Just from a day of use I had over 2000 blocks. The weather channel app has been the worst offender so far.
Guys, thanks a lot for a very motivating feedback so far! Filter configuration and customization features are coming in the next release.
If you have a moment please like / follow / share / +1 the social media of your choosing:
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceNo. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- NFS Injector uses compiled binaries that are closed source... yuck. Not to mention the typos in the README. This one is hard to look at.
- LKT sets random nonsensical build.props that likely don't even exist.
- MAGNETAR uses (you guessed it) compiled binaries that install themselves to your /system/etc/ directory (???). Great idea, install an external closed source, compiled binary to the system partition.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- hispeed_load: 90 --> 80: Jump to a higher frequency if we are approaching the end of the frequency list, where a task may begin to starve or begin to stutter.
- hispeed_freq: : Set the "higher freq" (referencing hispeed_load) to the maximum frequency available to take advantage of Race-To-Idle.
- CAF CPU Boost Tweaks
- input_boost_freq: 1.4 GHz (closest freq) as a generic, universal boost frequency to the little cluster.
- input_boost_ms: 250 ms, not consuming too much power but boosting for important, interactive events such as clicking on things.
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
- readahead: 0: Disable readahead, which is intended for disks with long seek times (HDD), whereas mobile devices use flash storage with zero seek time.
- nr_requests: 128 --> 512: Allow more I/O requests to be issued before flushing the queue, slightly increasing latencies but allowing more requests to be executed before being put to sleep.
- noop / none: Use a scheduler with little CPU overhead to reduce I/O latencies, which is essential for fast flash storage (eMMC & UFS).
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16The Pixel 3 XL is a 6.3" phone with a 1440x2960p resolution display. The Snapdragon 845 chipset is paired with 4GB of RAM and 64/128GB of storage. The main camera is 12.2MP and the selfie camera is 8+8MP. The battery has a 3430mAh capacity.This tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceInstructions:
* READ EVERTHING BEFORE YOU START OR ASK QUESTIONS * I'm not responsible for bricked devices, dead SD cards, * thermonuclear war or you getting fired because the alarm app failed. Please * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at me for messing up your device, I will laugh at you. Hard & a lot. :D
- I’m not an expert, I’ve just put some pieces together to achieve the following.
- If you have problems, I’m not sure if I’m able to help you
- You need to have some basic knowledge
- Always have the correct software and backup all your data.
o Also download before you start the stock files, so that you are able to quickly reverse everything via: sammobile
- Remember to backup your data!!!!
Working ROMS (Which I’ve tested so far):
IF you want to install a custom ROM, you need to choose the correct custom ROM
Choose the ARM 32-bit with 64-bit binder AB (also known as A64B).
From OEM stock firmware:
Download TWRP https://forum.xda-developers.com/gal...3934805/page35
- Unlock bootloader
- Hold Vol Up & Vol Down buttons during restart to enter Download mode
- Install TWRP to AP with Odin
- Hold Power & Vol Up buttons during restart to enter TWRP recovery
- Install latest Multidisabler from TWRP
- Wipe->Format Data
- Reboot to system
- Check if OEM unlock is enabled in the developer settings (it should be enabled and greyed out) IF so yeey you did It. If not start over.
Install custom ROM:
Well installing a custom Rom is quite easy .
- Download a GSI ROM you like and put it on a SD cart
- Go into TWRP
- Select “install”
- Click on “install image”
- Click the on the ROM
- In the next screen where we need to select the partition, select the “System Image”
- Swipe to confirm
- If you want ROOT and or install GAPPS follow the extra steps bellow. If NOT, just reboot the system
Extra’s install MAGISK and or install GAPPS
First of all download the files you want.
Magisk: here
GAPPS: here
You want root? You need to prepare the TWRP image yourself, simply use Magisk Manager to Select and Patch a File. Which we can prepare and flash after you finished the setup of the tablet. You need more info check the following: link
- Go back to the TWRP home screen
- Select “Wipe”
- Select advanced wipe
- Check “system”
- Click on “repair or change file system”
- Click on “resize file system” (if you’ve receive an error, don’t worry just do It again).
o You should see “resizing… done.”
- Go back to the TWRP home screen
- Select “install”
- Select the zip file(‘s) you want and flash them
o IF you receive an error if you want to install the GAPPS zip like “not enough space” go back and resize the system partition
o IF you receive an errro if you want to install Magisk, go back and resize the system partition
- Remove “dalvik and cache”
- Reboot system
- Setup your tablet
Now for the last step to root the tablet all the way
- Go into Magisk manager
- On the Magisk dashboard you’ve should see that you have the latest version of magisk. Press on the “install” button at the right side
o Select “Select and Patch a File” select the TWRP IMG you still have on the SD card
o Magisk should create a “magisk_patched.img”.
- If you have the “magisk_patched.img” go into TWRP and flash this IMG over the recovery
o Install
o Select “install image”
o Select the “magisk_patched.img”
o Flash it over the “recovery”
o Reboot system
Yeey you have a Samsung sm-t515 which is rooted and you have a custom ROM.The Samsung Galaxy Note 10+ is a 6.8" phone with a 1440x3040p resolution display. The Exynos 9825/Snapdragon 855 chipset is paired with 12GB of RAM and 256/512GB of storage. The main camera is 12+12+16MP and the selfie camera is 10MP. The battery has a 4300mAh capacity.The LG Nexus 5X was announced by Google on September 29th 2015. Manufactured by LG, the Nexus 5X has a 5.2" 1080P display, Qualcomm Snapdragon 808 hexa-core processor, 2GB of RAM and either 16GB or 32GB internal storage. The rear camera uses a 12.3MP sensor, and a 5MP camera is out front. The Nexus 5X is powered by a 2700mAh battery and will utilize a USB Type-C port.The Samsung Galaxy Tab 2 is an Android tablet released in the spring of 2012. It has many different versions, with variations coming in capacity, connectivity, and screen size. The screen size options are 7" and 10.1". Storage capacities vary between 16 GB and 32 GB. There are also HSDPA enabled versions as well as Wi-Fi versions. A Samsung Galaxy Tab 2 can be bought with any combination of these variations. They are all powered by a TI OMAP 4430 dual-core processor with a clock speed of 1.0 GHz.Samsung Galaxy S20 is a 6.2" phone with a 3200×1440p resolution display. The Qualcomm Snapdragon 865/Exynos 990 chipset is paired with 12GB of RAM and 128/256GB of storage. The main camera is 12+12+64MP and the selfie camera is 10MP. The battery has a 4000mAh capacity.Register or Login with Google
Welcome to the XDA Android apps and games forum. Here you can find apps and games made by XDA members. Many developers use this forum as a way to get feedback for their apps so feel free to report bugs and request new features. We also have a Community Apps set of forums, which contains authorized support forums for popular apps such as Xposed, Framaroot, MX Player, AirDroid and others.does this work on nougat?
No issues on a Tab E running 7.1.1
Bill
Register or Login with Google
Will this work on samsung galaxy tab a 10.1 (2016) brought two weeks ago..running Android 8.1.0. I have a microsd 64gb, and the internal storage of tablet is 32gb.
I have the same question (Galaxy Tab A (2016) running Android 8.1.0 with 16GB of RAM and an external 128GB SD card.
Scott
No replies?
Scott*** Disclaimer I am not responsible for any side effects (if any) or damages (if any) caused by this application. This is a 100% systemless app. If you are having problems, please just uninstall it then reboot.
Kitana Tweak is an application that aims to increase the performance of your device, also by focusing on battery.
Include performance, battery, kernel tweaks, I/O, and a lot many other tweaks.
Boost
F-strim
Hot Clean
Battery Improvement
Increase WiFi Scan
Kernel Tuner
Kernel Panic
Sleepers Optimization
Entropy
Bypass JNI
YouTube Resolution
GPU Rendering
Rendering Quality
Liquid Smooth UI
Better Scrolling
Performance Tuner
CPU Optimizer
FPS Unlock
16bit Transparent
Net Buffer Size
Net TCP Tweak
Net Speed+
Fast Streaming
IPv4/IPv6 Support
RIL Tweak
Fast Dormancy
Google DNS
ARM Wideband
I/O Boost
I/O Queue
SD Tuner
Scheduler Tuner
Cache Reclaiming
Cache Allocation
z-RAM Enabler
Swappiness
OOM Killer
RAM Profile
Low RAM Flag
KSM/u-KSM
Clean RAM
Disable Logs
Disable I/O Stats
Installation instructions
Make sure you meet the requirements:
Current version: 1.0.0-alpha03, 2020-08-03 [new] New Material Design [new] New Dashboard [new] Dark Theme added [new] Activated Tweaks Logs Reader [new] App Size Optimized [new] Optimize Services Tweak [new] WiFi Scan Interval With Slider [new] Sleep Mode [new] Fast Charging Tweak [new] App Cache Optimization [new] CPU Governor Changer [new] Optimize CPU [new] Boost CPU [new] GPU Boost [new] GPU Rendering by Skia [new] JPEG Top Quality [new] Updated RAM Profile [new] Runtime Optimization [new] Multitasking Tuner [new] Never Kill Launcher [new] DNS Optimization: Google, Cloudflare & OpenDNS [new] Updated TCP Tuner [new] Hide Debug Notification [new] Disable Error Logging [new] Disable Error Reporting [new] Disable Tracking [new] Tune Debug Services [new] Quick Boot [new] Fix Black Screen [new] Clear Call Delay [new] Better Audio Quality [planned] Doze services [planned] Tweaks Profiles
Telegram Group: Join The Group Now
If you like my work, so please hit the thanks (like) buttonThe beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Galaxy S8 from Samsung comes in two flavors this year. You can choose between the classic S8 or the S8+. The standard S8 comes with a 5.8" screen with 1440 x 2960 pixels. The Snapdragon 835 chipset has an octa-core (4x2.45 GHz Kryo & 4x1.9 GHz Kryo) CPU and an Adreno 540 GPU. You'll have options for either 64GB or 128GB of internal storage and 4GB of RAM. The primary camera has a 12MP sensor and the selfie camera is 8MP. The 3000mAh battery comes with quick charging and wireless charging.Tested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.Register or Login with Google
OnePlus 8T
Samsung Galaxy Z Fold2
Samsung Galaxy Note 20 Ultra
Samsung Galaxy Note 20
OnePlus 8 Pro
Huawei P40 Pro
Samsung Galaxy S20
Huawei Mate 30 Pro
OnePlus 7T
Samsung Galaxy Note 10+
Google Pixel 4 XL
OnePlus 7 Pro
OnePlus Nord N100
OnePlus Nord N10 5G
Apple iPhone 12
OPPO Reno4 Z 5G
OPPO Reno4 / 4 Pro 5G
Huawei Mate 40 Pro
Lenovo Legion Duel
Realme 7iI installed this rom today to get native android gamepad support because stock rom android 8 doesn't have native gamepad support.
Under Android 8 the gamepad buttons are mapped incorrectly, thus playing in geforce now is impossible.Warren, try this. Check to make sure your device fingerprint and such are back to stock. Then flash this Magisk module (attached) and reboot. What this does is pretty much the same thing as the Magisk Hide Props settings (spoofs your phone model as a Pixel 4 XL), but it's systemless and can be toggled if needed. Force stop the Phone app and Google Play Services too for good measure, then wait a few minutes and open the Phone app again. I found it from clicking the "@pixelprops" link from that Telegram group ih8legal shared earlier. It worked for me, so I think it might for you. Let me know if it does. I know being in Ireland (which is not one of the supported call screening countries) is an issue, but there's still hope.you dont have adb installed
install it like:
Requirements :
1) Java SE Development Kit http://www.oracle.com/technetwork/ja...s-2133151.html
2) android-sdk-windows (Archive) https://developer.android.com/sdk/older_releases.html
Procedure :
------------------
1) Install Java JDK in C:\Program Files
2) Extract android-sdk-windows in C:\
3) Go to desktop
4) Right_Click on My Computer
5) Left_Click on Properties
6) Left_Click on Advance System Settings
7) Left_Click on Environment Variables
8) (System Variables) Scroll down and select PATH option
9) Left_Click on Edit
10) Add New Path [C:\android-sdk-windows\tools]
11) Click ok
12) Run Command Prompt
13) Type adb and press enter Congrats you successfully installed adb in your pcThe OnePlus 5T is the second phone launched by OnePlus in 2017, following the OnePlus 5. The 5T has a 6.01" display with a 1080 x 2160 pixel resolution. The Snapdragon 835 is paired with 6/8GB of RAM and 64/128GB of storage. The dual camera setup has a 20MP sensor and a 16MP sensor. The selfie camera is 16MP. The battery has a 3300 mAh capacity.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
Hi all! Has anyone tried this? I know it's an old thread but it's the first time I hear about the Link Collider and I'm interested in some feedback from you guys. I have my own website and it's really low ranked on Google and I wonder if this can help to rank it higher. I was thinking about hiring a Seo specialist, but I still want to try to do this on my own. I have basic knowledge of SEO and not much practice, but I'm open to learning and trying new things. I would be grateful if you'll leave a review on this free SEO booster.This is going to be quite helpful to people who are just starting out with modding this device. Great work, shadowstep!
Kudos to you, shadowstep. Definitely a well put together guide.
Register or Login with Google
Wow man. Great Great work. And hats off for your dedication.
Really well done bro.
This is going to be quite helpful to people who are just starting out with modding this device. Great work, shadowstep!
Good job
Pretty sure at least a few of these will come in useful to more advanced users as well, but yeah.
Kudos to you, shadowstep. Definitely a well put together guide.
This is a really, really good useful thread.
Nice one for putting it together, i'm sure this will help a lot of people when looking for certains things. As they all can now be found in 1 single thread.
Hats off to you.
Good job man, thanks
Great thread!!
You can also add magisk modules created by you for op5 gcam.
@shadowstep You might want to add this thread to the list, I created a batch script when I had my OP2 which will capture all the logs a developer might need to debug an issue, should work with any Android phone including the OP5:
https://forum.xda-developers.com/one.../logs-t3533826
I did make an executable (.exe) version too but some AVs might flag it due to the tool I used, it's just an exe which contains all the files required inside it, which it extracts temporarily when it's run, they then disappear again once it's done :
https://androidfilehost.com/?fid=529152257862698787
August 23, 2018
The new 5.1.5 stable build has been running great, but I miss the updated OnePlus Dialer introduced on the latest Open Betas with rectangles for contact pictures instead of circles. Tried installing the the last apk, com.android.dialer_19.0.0.180505154345.5f45edf-250000_minAPI23(nodpi).apk, uploaded from apkmirror.com over the current dialer, however then it immediately crashes when trying to open.
Thought about trying to remove the older dialer from the system app directory, and replacing it, but was worried that might not work. Anyone happen to do this successfully, or have any suggestions?
This indeed seems useful! I just tested this and it grabbed logs alright. If you don't mind, let me find some time later on in the week and I'll try and clean up the batch script a little along with updating the ADB and 7-Zip libraries that you are shipping in your zip file (since there are newer ones available). Once that is done, I'll add it to the collection. Thanks for your work!The Google Pixel 4 XL is a 6.3" phone with a 1440x3040p resolution display. The Qualcomm SDM855 Snapdragon 855 chipset is paired with 6GB of RAM and 64/128GB of storage. The main camera is 12.2+16MP and the selfie camera is 8MP. The battery has a 3700mAh capacity.I'm a beginner trying to make my first app (a calculator) look fancier.
I've started with by adding colors to the buttons. Quickly I've noticed that by adding color to a button's background it looses its border with another button. So I've tried to use margins. Everything went great until I had to deal with the last LinearLayout, last line of the calculator buttons. It's different than the previous LinearLayouts and I guess the picture describes it well enough:
Turns out I cannot post the picture, so I'll try to describe it as detailed as possible: the thing is that my 3rd row includes 4 buttons(1, 2 ,3 and -) and so does the 4th, but there 2 out of 4 buttons are split vertically and I guess because of that the margins of the forth row do not allign with the ones from the 3rd even though their properties are the same (android:layout_marginVertical="3dp" and android:layout_marginHorizontal="5dp")
The buttons of the 3rd row do not allign with the ones from 4th
I've tried to manually make margins( to the left and right insted of "Horzontal"), however that does not seem to be a proper soliution, or maybe I'm just missing something
my code for the 4th row :
<LinearLayout android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:orientation="horizontal"> <LinearLayout android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:orientation="vertical"> <Button android:id="@+id/dot" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:background="#D79E2D" android:gravity="top|center" android:text="." android:textSize="30sp" /> <Button android:id="@+id/equals" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:background="#D79E2D" android:text="=" android:textSize="40sp" /> </LinearLayout> <Button android:background="#D79E2D" android:id="@+id/n0" android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="0" android:textSize="25sp" /> <LinearLayout android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:orientation="vertical"> <Button android:background="#D79E2D" android:id="@+id/changeSign" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="+/-" android:textSize="30dp" /> <Button android:background="#D79E2D" android:id="@+id/Back" android:layout_width="match_parent" android:layout_height="0dp" android:layout_weight="1" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="Del" android:textSize="30sp" android:gravity="top|center" /> </LinearLayout> <Button android:id="@+id/plus" android:layout_width="0dp" android:layout_height="match_parent" android:layout_weight="1" android:background="#D79E2D" android:layout_marginVertical="3dp" android:layout_marginHorizontal="5dp" android:text="+" android:textSize="25sp" /> </LinearLayout>Custom ROM eroor system ui forclose has installed all apk and upgrade to TWRP. So that data apk congratulations do not download back already Install ROM cfw then restore Data fixed eroor(fast time and saved Bandwithe). Format systems;cache same eroor. How is there software for Extract to move DATA backup ? Dekstop, AndroidThe ROM is mostly "stock-alike" because I'm no friend of "heavy modifications" anymore.
Before you start, make a Nandroid(Backup) of your system. Safe is safe!
Features
- Based on last Android 10.0 DBT XXU3BTH4 FW
- DBT as CSC active
- Stock Kernel
- Bluetooth Patch
- Removed RMM
- Odexed (for better Performance)
- Knox-free
- A bit debloated (Knox- and MS-stuff)
- Stock alike
- Flashbable through Custom Recovery
Changelog
Changelog v3.1
- Fixxed bluetooth-probs
- Patching of bluetooth didnt work anymore, so you have to use now Bluetooth Library Patcher as Magisk Modul, otherwise you lose every reboot your bluetooth connections
Changelog v3.0
Changelog v2.0
- Rebased auf XXU3BTFN Android 10.0 (Security Patch vom 01.07.2020)
- Be on android 10 fw, otherwise it wont work!!!
Changelog v1.0
What do you need?
How to get Root?
Pictures
None, since everybody knows the Stock FWs
Download
Download Modem/Bootloader
How-To flash:
- Place the Zip on the internal or better external memory.
- Boot into Recovery -> Hold Vol. Up at restart
- --> Fullwipe if coming from another ROM
- Then click on install in TWRP
- Searches the folder where you put the Zip in
- And flash them now by clicking on the zip and dragging the slider to the right at TWRP
- Then reboot -> Reboot to System = Boot with Magisk!
- The reboot with a fullwipe usually takes a while - can take up to 10 minutes. So keep calm.
Troubeshooting
- If you got an bootloop or it stays on samsung logo, make a fullwipe. Otherwis it wont boot correctly into root partition.
- I had the same problems. Only a fullwipe solved it.
Credits
XDA:DevDB Information
Stock ROM, ROM for the Samsung Galaxy Tab A series
Contributors
hanspampel
ROM OS Version: 10.x Q
Version Information
Status: Stable
Current Stable Version: 30.08.2020
Created 2020-06-01
Last Updated 2020-09-29Yes from the telegram group .
I cannot find them Lazy-custom2-dev-vX.17.zip
Look for this JSON link = custom2 - https://github.com/ederekun/LazyRele...2/custom2.json
Look like this
{
"kernel": {
"name": "Lazy Kernel",
"version": "vX.17 | custom2-dev",
"link": "https://github.com/ederekun/LazyReleases/raw/custom2/Lazy-custom2-dev-vX.17.zip",
"changelog_url": "https://github.com/ederekun/LazyReleases/raw/README/Dev_changelog.txt",
"date": "2020-08-16",
"sha1": "84ce1b65cc790291d593cd557cb2c996c09ad1eb"
},
"support": {
"link": "https://t.me/lazykernel"
}
}
I just copy and paste url and download it... bit of a complicated thingThe Amazon Fire HD 8 and HD 10 are two mid-range tablets, running on Amazon's Fire OS 5, which is based on Android Lollipop. Both have a 1.5GHz quad-core processor, 1GB of RAM, 1280 x 800 display (either 8" or 10.1"), 5MP rear camera, 720p front camera, microSD support and stereo speakers with Dolby audio. The Fire HD 8 comes with either 8GB or 16GB internal storage, while the Fire HD 10 has the option of either 16GB or 32GB.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Service*** Disclaimer I am not responsible for any damage you made to your device You have been warned
Fully release the potential of GPU to continuously improve gaming experience. The main functions are optimize the GPU driver to game performance and stability. Including OpenGL and Vulkan optimizations.
How many processors are supported?
Currently, a total of 31 different processors are supported.
Can you help me with the installation?
Of course, let's proceed step by step. Also you can reach the required notes by typing the following commands in the chat section.
1 - Soc List
First, you should download the Device HW Info application on Google Play and learn the platform processor information from the system tab. Remember, you have to choose the drivers you will use according to the platform information. You can also access application link by typing #cpu_checker in the group chat section.
Then you can check the processor you are using from the list below. Don't worry if your processor is not listed, you can contact the dev.
Adreno 500 Series:
- sd835
- sd820/sd821
- sd660
- sd652/sd653
- sd650
- sd636
- sd632
- sd630
- sd625/sd626
- sd617
- sd450
- sd439
- sd435
- sd430
- sd429
2 - Driver Packages
Then you can choose the package you will install from the list below. Remember that each package has its own characteristics.
OpenGL and Vulkan (both in one) - Recommended
- It contains both OpenGL and Vulkan drivers, Do not install any other driver modules with this package.
OpenGL
- It contains only OpenGL drivers, this package and Vulkan package must be installed separately.
- OpenGL should be installed in the first step, Vulkan should be installed in the second step.
OpenGL lite
- It contains only OpenGL lite drivers, this package and Vulkan package must be installed separately.
- This package specially designed for those who have bootloop, black screen, flickering screen and google play application problems and some branded devices like OnePlus, LG, Sony, Realme.
- OpenGL lite should be installed in the first step, Vulkan should be installed in the second step.
Vulkan
- It contains only Vulkan drivers, this package and OpenGL or OpenGL lite package must be installed separately.
- OpenGL or OpenGL lite should be installed in the first step, Vulkan should be installed in the second step.
3 - Driver Versions
Do you need information about the versions of the drivers? Let's take a look at the version information. Version information contained in the zip file such as v1.0 is only for determining the version of the zip file. My advice is always use the most up-to-date.
Adreno 500 Series:
OpenGL and Vulkan
- [email protected] - 1.1.128 (v4.5) - Avaiable soon!
- [email protected] - 1.1.128 (v4.1_fix) - fix version for Vulkan issue on Android 9 roms
- [email protected] - 1.1.128 (v4.0)
- [email protected] - 1.1.128 (v2.4)
OpenGL
OpenGL lite
Vulkan
4 - Installation Methods
Then you have to decide which installation method to choose. My advice is primarily the flashable method. The numbers 1 to 2 at the beginning of the files are for specifying the installation methods.
[1] Magisk Module (systemless)
- Support for Android 9 and above operating system.
- If it cause any problem, you can get rid of the problem by disabling or removing the module via Magisk manager application or by deleting the Adreno folder in /data/adb/modules/ via custom recovery.
[2] New Flashable (via custom recovery)
- Support for Android 9 and above operating system.
- If it cause any problem, the system backup or rom must be reinstalled.
- treble/non-treble support with a single zip.
5 - Installation (How To Install)
Be careful, my suggestion is always use flashable installation!
Thank you very much for the video of How To Install by the Soap - Customization and Gaming YouTube Channel. Also don't forget to subscribe!
Flashable installation:
- First of download both in one package drivers or separated OpenGL/lite and Vulkan drivers. You can access download links by typing #downloads in the group chat section.
- Boot into recovery
- Just in case backup your system and vendor partitions to an external device
- Install the drivers
- Wipe dalvik cache
- Reboot into system
- Download OpenGL ES Extensions app and check if your version of OpenGL and Vulkan drivers has changed
For root, after you boot into the rom, you can go back to recovery and install latest Magisk Canary build by typing #magisk_canary in the group chat section.
Magisk module installation: Required latest Magisk Canary build!
- First of download both in one package drivers or separated OpenGL/lite and Vulkan drivers with GPU cache cleaner scrpit. You can access download links by typing #downloads and #gpu_cache_cleaner in the group chat section.
- Install the drivers via Magisk manager
- Boot into recovery
- Install GPU cache cleaner script
- Wipe dalvik cache
- Reboot into system
- Download OpenGL ES Extensions app and check if your version of OpenGL and Vulkan drivers has changed
Downloads
Google Drive Folder
We also have Telegram Group and Channel! You can join us from the links below.
Group: @adrenodrivers
Channel: @adrenodriverschannel
Troubleshoot Guide
Having trouble after installing the drivers? Here are the problems and solutions we know.
Bootloop, black screen, screen flickering and app application problems.
- This problem is usually caused by the GPU caches not being cleaned. You can solve this problem by installing the script via recovery. You can reach download link by typing #gpu_cache_cleaner in the chat section.
- You can also try installing the separated OpenGL lite package specially designed for such problems with separated Vulkan package. You can access driver packages by typing #driver_package in the group chat section.
Bootloop problem after Magisk module installation.
- First you need to clear the GPU caches.
- You can also try installing the separated OpenGL lite package specially designed for such problems with separated Vulkan package. You can access driver packages by typing #driver_package in the group chat section.
- If the problem still persists, it is most likely due to the Magisk stable builds. You should uninstall the drivers and install the Magisk canary builds via recovery. Then you can re-install the drivers via the new Magisk canary manager. You can access Magisk canary stuffs by typing #magisk_canary in the group chat section.
I installed the drivers but my OpenGL or Vulkan version hasn't changed?
- The main reason for this problem is that some devices are different from the hardware processor information that the platform processor information uses.
- The solution to the problem is very simple. You should download the Device HW Info application on Google Play and learn the platform processor information from the system tab. Remember, you have to choose the drivers you will use according to the platform information. You can also access application link by typing #cpu_checker in the group chat section.
- If the problem still persists, it is most likely due to the Magisk stable builds. You should uninstall the drivers and install the Magisk canary builds via recovery. Then you can re-install the drivers via the new Magisk canary manager. You can access Magisk canary stuffs by typing #magisk_canary in the group chat section.
If you experience a different problem than the listed issues, please contact the dev within XDA or admins within the group.
Thanks to
heindrix and his driver topic
ayandebnath and his FlameGApps project
D1stRU3TOR and his Seshstation kernel
Kyliekyler and his MAGNETAR project
k1ks and his NFS INJECTOR project
FeraVolt and his FDE.AI project
All my friends who contributed to the development of the project
And many others...
Sources
[email protected]: https://developer.android.com Android 11 R Beta
[email protected]: https://developer.android.com Android 11 R Beta
[email protected]: https://developer.android.com Android 11 R Beta
Vulkan 1.1.128: https://developer.android.com Android 11 R Beta
Vulkan 1.1.128: https://github.com/XiaoMi Android 10Now you can also run demand from various ad formats on the same ad placement.
Like showing a native ad on a banner ad placement or showing a MREC on a native ad placement, depending on the higher CPM.
Checkout SDK X from GreedyGame for more details and sign up for the exclusive Early Access Program.i wish you've a good day
i just joined this community it is an impressive fourm and you guys helped me a lot of time; i really apprecite that you guys doing a great stuff for people like me.
but suddenly i didn't find anything helpful for my device which is: Oppo A9 2020 (CPH1937)
i signed up to request a hand for rooting my device. but i don't know how request
then i decided to open a new thread; so i can reach you.. to send you my voice..
could you please get my device rooted?EdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19Now my problem is, I don't find a starting point. I have to say I don't have much (read: almost none) experience with writing Android apps (although I have a lot of programming experience otherwise). Thus I have no idea how such an animation would be implemented. I searched for references to the Scroller class and replaced the duration argument of the startScrolling method by 5ms, but this didn't change anything.
Is there any way to run the app in some kind of debug mode to see which methods are called at which time? Another idea how to find the right spot might be the trigger of the scroll: I am using the hardware page turn buttons of the device to scroll down exactly one page. How would this be implemented, what should I search for to find the code that reacts on these buttons? (Also: how can I press these buttons in the emulator?)
I am sorry if I am asking too many noob questions. If there is relevant documentation I have obviously missed, please point me to it. Thank you very much for any help!"To prevent spam, you must have a higher post count in order to make a new thread in this development section.�But feel free to make new thread in the non-development sections like General, Q&A, etc. Thanks for your understanding! "
I've just registered, so what should I do now?
Anyway, I have a question about cordova. In the app I'm responsible for (I didn't make it) I have the following error:
```
Android resource linking failed
app/platforms/android/app/src/main/res/xml/config.xml:34: AAPT: error: resource drawable/icon (aka pl.example.exampleLdrawable/icon) not found.
```
in the app/config.xml file, I have this: android:icon="@drawable/icon"
But what is this location, I mean, where in the app should I put the icon? I tried app/platforms/android/res/drawable but that doesn't work.
I do have the files (icons) in dirs like drawable or drawable-hdpi-v4 but I have no idea where I should put them.
Can you help me please with that?Note: This will wipe your device so anything stored on it will be lost please backup anything important like photos/contacts/etc
- Download and install Sugar QCT from here (Be sure to install the usb drivers as well)
- Included in the zip is the username and password that you will need to use to run the program please do not post it here.
- Boot the device into recovery by turning the device off and then holding the power button until it restarts 3-4 times and boots to recovery
- Select the option to go into emergency download mode
- Now plug the device into your computer and open Sugar QCT
- From the list select pepito/PVG100 (US) or pepito_vdf (Vodafone)
- Now select Upgrade this will download the palms firmware package and flash it to the device
- When it finishes do not close sugar
- Unplug your device and hold the power button for a few minutes so it will restart out of EDL mode, use a rubber band or something to apply pressure to it so you don't have to hold it
- Go to where Sugar QCT is installed (C:\Program Files (x86)\SUGAR QCT_SP_Gotu2\bin\)
- In there you should see a folder called PVG100-xxxx (The x's are your serial number)
- Copy that to your desktop or anywhere else that you like
- In the folder, there should be some random looking mbn files these are actually the firmware files just names are randomized to make using them harder.
- There should be a file called B1AMD0D0CV00.mbn if not look for a file that starts with a B it will be the boot.img
- You will need to push that to an android device and patch it with magisk manager.
- Once that is done replace the B1AMD0D0CV00.mbn in your copy of the firmware with the patched boot.img
- Boot it back into emergency download mode as previously stated
- Close and reopen sugar
- Copy your firmware copy back into C:\Program Files (x86)\SUGAR QCT_SP_Gotu2\bin\ be sure it is the same folder structure
- Now select your model again and then press the upgrade button in sugar this will now flash your modified firmware to the device.
- Once it finishes hold the power button for a few minutes so it will restart out of EDL mode, use a rubber band or something to apply pressure to it so you don't have to hold it
- When it restarts and powers up then go through setting the phone up and install magisk manager and you're rooted.
Before people ask i would recommend not installing twrp or trying to port it unless you flash it to the boot partition because without stock recovery there is no way to get into EDL so if you flash a bad twrp bringing it up your stuck.
Thanks to @StormSeeker1 for telling me about holding the power button for a few minutes to get out of EDL previously you had to let the phone die to get out of it which is a pain.Step 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingI'm making a menu and I want to add images to each item.
I have tried this:
<item android:id="@+id/TwitterMenu" android:title="Twitter" android:icon="@drawable/twitter_logo"/>
But Android Studio add a grey tint to it. I want the original colors of the picture. How can I do it?
Thanks!!A Highly Customizable and Easy to Use Torrent Search Android App that lets you search for the torrents and gives you the magnet link of the torrent to download. There are lots of customization features users can set them as per their choice.
Features:
- Search torrent
- Get magnet link of the torrents
- Copy the magnet link directly and open torrent download client directly from the app
- Voice Search
- Browse top torrents
- Add torrents to favorite to check them later
- Get suggestions for the query while you type based on your recent searches
- Turn on/off torrent search engine according to your choice
- Change torrent search engine url manually in case default one doesn't work in your country or your ISP
- Change Theme color
- Toggle Dark mode
- Test a url whether it is working or not
Join TeleGram Channel
Join TeleGram Group
Version Information
Status: Stable
Current Stable Version: 19.0.0
Stable Release Date: 2020-10-12
Download
XDA Labs
Google Drive
Play Store
Pro Version Play Store
Go to TorrCrow Pro to get the PRO version on XDA Labs or PM me
Happy TorrentingThe 2014 Moto G is the successor to Motorola's best selling phone of the same name. It features a 5" 720p IPS LCD display, 1.2GHZ quad-core Cortex-A7, 1GB of RAM and either 8GB or 16GB or internal storage. It has an 8MP primary camera and 2MP secondary camera. The Moto G is powered by a non-removable 2070mAh battery. Software-wise, the Moto G runs on pure Android, with no custom launcher to be seen. There's also an optional dual-SIM device variant for those are regular travellers.Released in November of 2016, the Lenovo P2 features a 5.5 inch screen with a resolution of 1920x1080. The Snapdragon 625 chipset has an octa-core 2.0 GHz cortex-A53 CPU and an adreno 506 GPU. There are options for 3/4GBs of RAM and 32/64GB of storage space. The primary camera has a 13MP sensor and the selfie cam is 5MP. This is all powered by a massive 5100 mAh battery that is designed to last about two days.Change the boot image (NOT the bootanimation) that shows BEFORE the boot animation.
This has only been tested on the T285, but should work on the T280.
If in doubt, check to see if your PARAM partition is mmcblk0p16.
There are programs on the Play Store that can show the partitions, there names and other info.
This app does make a backup of the original PARAM partition and stores it on your /sdcard as PARAM.bak.
MAKE SURE YOUR SDCARD IS MOUNTED WHEN YOU GET INTO TWRP or CWM.
(Have NOT tested in CWM as I have TWRP installed).
Many thanks to [email protected] for the original script for the Samsung Galaxy Tab 3 8.0.
He has kindly allowed me to modify his script for the Tab A (SM-T285).
His xda page is: Samsung Galaxy Tab 3 8.0 Boot Logo
To change the logo (.jpg file), replace the logo.jpg in the tmp folder with your own .jpg file.
Remember the Galaxy TAB A (SM-T285) display is 720x1280.
Steps to install:
- Reboot into recovery
- Select Install from recovery menu
- Select TAB-A-T285-LogoChanger.zip
- Follow recovery install prompts
- Reboot and enjoy!
If you need a restore script, please contact me or post a message.
Downloads:
Google: T285 Boot Logo Changer
Mega: T285 Boot Logo ChangerXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceDon't worry go ahead. But before doing anything to your device first check the firmware you need to install is approved for your device.
I am using hisuite since first day when I got P40 Pro never received any official update. I do regular update with the help of hisuite and always use offline firmware download. GMS working just fine no problem at all.
Thanks,
goldybewon
Huawei P40 Pro
Anyway a step by step will be helpfull for lot's of users. What is require, version, where to pick up the files, where to put in hisuite, update, downgrade, what version to check up the files....
That would be what is missing so far.
RegardsXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI have installed npm 6.14.4, installed gradle 6.3, installed javac 1.8.0_251, installed android sdk, Installed Android studio, installed corvoda 9.0.0
All system variables set.
Running windows 10 pro 1909
Cordova requirements output:
Requirements check results for android:
Java JDK: installed 1.8.0
Android SDK: installed true
Android target: not installed
No android targets (SDKs) installed!
Gradle: installed C:\gradle-6.3\bin\gradle
Some of requirements check failed
Can't build android application it gives error?
Cordova build android output:
Checking Java JDK and Android SDK versions
ANDROID_SDK_ROOT=C:\Program Files\AndroidTbox\sdk (recommended setting)
ANDROID_HOME=C:\Users\7ammudy\AppData\Local\Androi d\Sdk (DEPRECATED)
Subproject Path: CordovaLib
Subproject Path: app
Starting a Gradle Daemon (subsequent builds will be faster)
FAILURE: Build failed with an exception.
* What went wrong:
A problem occurred configuring root project 'android'.
> Could not resolve all artifacts for configuration ':classpath'.
> Could not find com.android.tools.build:gradle:6.3.
Searched in the following locations:
- https://dl.google.com/dl/android/mav...gradle-6.3.pom
- https://dl.google.com/dl/android/mav...gradle-6.3.jar
- https://jcenter.bintray.com/com/andr...gradle-6.3.pom
- https://jcenter.bintray.com/com/andr...gradle-6.3.jar
Required by:
project :
* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
* Get more help at https://help.gradle.org
BUILD FAILED in 9s
C:\cmder\myapp\platforms\android\gradlew: Command failed with exit code 1 Error output:
FAILURE: Build failed with an exception.
* What went wrong:
A problem occurred configuring root project 'android'.
> Could not resolve all artifacts for configuration ':classpath'.
> Could not find com.android.tools.build:gradle:6.3.
Searched in the following locations:
- https://dl.google.com/dl/android/mav...gradle-6.3.pom
- https://dl.google.com/dl/android/mav...gradle-6.3.jar
- https://jcenter.bintray.com/com/andr...gradle-6.3.pom
- https://jcenter.bintray.com/com/andr...gradle-6.3.jar
Required by:
project :
* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
* Get more help at https://help.gradle.org
BUILD FAILED in 9s
C:\cmder\myapp ([email protected])I ask for help in translating Android app into French, German, Japanese, Chinese, Portuguese, Italian, Spanish.
It's very simple, just 120 words.
The application is completely free, without ads.
"ABC for Kids" is a very simple game that teaches young kids the order of letters in the English alphabet.
play.google.com/store/apps/details?id=com.tim4dev.abckids
(Sorry, I'm not allowed to insert links)
Text for translation is uploaded to ranslate.google.com
I will send invitations to e-mail.
Each assistant will be listed in the application in the "Credits" menu and in the app's description on Google Play.
Thanks.Quote:
Originally Posted by samplebird
I cannot see picture. In other pictures and video I have seen the Pro CC screen is definitely slightly darker than the non-color version, and you can see slight black specks in the screen which are the color pixel layer. It still looks very easy to read on, mine is in the mail I hope it is not so much worse than normal eink for reading a book.
Where did you order from?
There are also matte screen protectors for the device I have found online. My intention is to remove the factory layer, add glass screen protector, and add matte plastic protector on top of that.
In my opinion, matte screen protectors may not a good choice. As it may make you feel more worse about this color e-ink(lower resolution).
Yes, it is more darker. compared with normal e-ink, it is not good enough. But it could show colors! Thats pretty good!
I ordered it from JD.com(at least for now, it only sold on this website). It is 1999 CNY for A5Pro CC(6+128),1799 for CC 4+64 and 1599 for A5Pro(4+64, normal e-ink).
Well, I'm Chinese. Normally, JD.com could offer an oversea delivery, and I also see this tag under this product. But I don't know the fee and will it work under this CO-19 situation.
If you have any problem with the Chinese language. I'm glad to help you with it.
***I strongly recommend you should only buy this phone from JD.com! This is the only way Hisense sale this phone for now!***
My CC is 6+128. I'm glad to answer you if you have any questions about it.
By the way, if you cannot find a suitable screen protector. You can try the screen protector for Xiaomi 8. Most A5 owners use the protector of Xiaomi 8. And they said it is pretty suitable for A5.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceUpdate - Android 10 25th October, 2020
Build type: Monthly
Device: Oneplus 5/T (cheeseburger/dumpling)
Device maintainer: neobuddy89
Required firmware: 10.0.0-H1 Short changelog:
* Android October 2020 Security update (nothing really new)
* Updated crDroid Music app (Fixes and improvements)
* Updated Weather service provided - google icon pack and added MET Norway provider
* Added new leaf icon shape
* cheeseburger/dumpling: Upstreamed kernel to v4.4.240
* cheeseburger/dumpling: Updated doze configs
* cheeseburger/dumpling: Updated audio configs
* cheeseburger/dumpling: Switched back to AOSP NFC
* cheeseburger/dumpling: Removed non-working QC perf - fixes logspam Download (crdroid 6):
OP5: https://crdroid.net/cheeseburger Join us on TG: https://t.me/crDroid_OnePlus5_5T
Cheers!recently I discovered custom fonts on android for myself. I became aware of it's aesthetics and importance, and started to be interested in fonts. At first, I wanted to install Google Sans instead of Roboto, but then I found the official Ubuntu Font and instantly loved it. You can see how it looks on the screenshot below.
I downloaded the font files directly from their website and packed it into a Magisk Module. I renamed and put it in place to replace the default Roboto Font. I also fixed the : on the lock screen clock, which was just a square. For other devs with the same problem:
At this point, I want to thank Ubuntu for being open source. They love this kind of develepment, this kind of spreading and enjoying of software code, and so do I. I think the world is a little bit better through this.
I think this only works on phones with Roboto as default font.
Changelog:
V2: Fix colon symbol ":" on the lock screen
v1: Initial ReleaseI'm an independant Sound Designer / Music Producer and the founder of Chirp Chirp Sounds). I create audio for games, animations, films and also work as a ghost producer.
Just want you to know if you need some creative sound stuff (whether it is music, sound design, dialog editing etc) feel free to message me. I know how important your projects are and I'll be glad to make them sound good.
These are some of my works:
- - Onward Internet (Sound Design & Music)
- - Brick Shot 2 (Sound Design)
- - Fast Track (Sound Design)
- - Wobblers (Music & Sound Design)
- - Magic Mountains (Sound Design)
- - Tower of Beauty (Music & Sound Design)
- - Tummy Slide (Sound Design)
- - "M U R M U R" short animation (Sound Design)
Here's my soundcloud profile
e-mail: [email protected]
chirp-chirp!Having schema markup on a website can help search engines identify web content relevant to users, but invalid schema can lead to this information being ignored. Elite Site Optimizer's Schema Markup validator crawls your website content, identifies the schema markup entities, and validates the available properties and attributes values. It finds issues such as missing properties, attributes, and values, then provides suggestions to fix the issues. JSON-LD, Microdata, and RDFa formats can be checked and validated with ESO.
Why Use A Schema Markup Validator?
Modern search engines classify content with the help of schema content type tags and use them to serve the most relevant content to users depending on their search terms. Content encoded with the right schema markup guides search engines to associate that content with the intended audience. ESO’s schema markup validator tool validates all three formats of rich snippets according to schema.org and Google guidelines for using rich snippets. This helps webmasters fix issues faster and improve their SEO. Effective schema markup is especially vital for the webmasters of eCommerce stores, news sites, and blogs for helping reach their audience from search engine traffic.No. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- LKT sets random nonsensical build.props that likely don't even exist.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- CAF CPU Boost Tweaks
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16Hi.
This is my first time working with ROMs, wanted to see if I could unpack and repack them and have them work, so I would know if my later changes cause problems. I've noticed if I unzip a ROM, then zip it again, without any changes made, I get this error within a few seconds of starting the flash. If I don't unpack and repack the zip, it flashes fine.
I use the Android Kitchen, to unpack/repack, and signed the zip. Anyone know what's going on?
Did a full wipe with TWRP before flash attempt.
Code:
Starting ADB Sideload feature...
Target: google/occam/mako:5.1.1/LMy48M/2167285:user/release-keys
detected filesystem ext4 for /dev/block/platform/msm_sdcc.1/by-name/system
Patching system image unconditionally...
E1001: Failed to update system image.
Updater process ended with ERROR: 7
Can anyone please help me correct error 7 with the following updater-script
The error i get is :
Installing zip file '/external_sd/lineage-15.1
20180524-UNOFFICIAL-Ocm.zip
Checking for Digest file...
Target: htc/ocmdtwl_01405/htc_ocmdtwl:8.0.0/OPR6.
170623.013/1010171.4:user/release-keys
detected filesystem ext4 for /dev/block/bootdevice/
by-name/system
Patching system image unconditionally...
E1001: Failed to update system image.
Updater process ended with ERROR: 7
Error installing zip file '/external_sd/lineage-15.
-20180524-UNOFFICIAL-ROm,zip'
Updating partition details...
... done
i had the same error and i could do nothing...then I thought my sd maybe giving the error so i tried the sideload mode and believe me..........it worked
option 2:-if u have backed up your rom (or by anyhow if you can) try flashing another (in my case...an older) version of twrp. it also worked for me. would be glad if this helps you.
---------- Post added at 11:30 PM ---------- Previous post was at 11:05 PM ----------
[/COLOR]
Quote:
Originally Posted by SL.Pirate
i had the same error and i could do nothing...then I thought my sd maybe giving the error so i tried the sideload mode and believe......me it worked
but...at the moment i am having another problem...i'd appreciate if someone could help. the rom has been installed correctly (I guess) but...when it reboots,it says encryption unsuccessful. ther'es a key sayng reset phone but nothing happens after pressing it.i tried wiping all the partitions and reinstalling the rom and no use.
if the samething happens to you....go to twrp,select wipe,advanced wipe and select (only) the data partition. then you gotta select repair or change file system select change file system and then select the correct format for the partition.(in and most of the cases...it is the EXT4 format.go ahead and reboot your device.this should probably work.If not...try other formats also from bottom to to. (HINT:-see what other partitions are formatted to).This should probably work if thats the case.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Service- If you don't have any background, consider learning programming using Scratch or Alice. It seems just suitable for kids but actually for everyone who want to think logically.
- If you have some basic background and want to have solid Java background (which I recommend) before moving to Android development, you should start with "Head First Java". They also have "Head First Android", but personally I don't like it so much.
- After you have a solid Java background, you can start learning Android using this free course on Udacity. It has 5 parts that cover everything that you need to make literally any app on Play Store.
- After you completed the above course, let's make your own project. You don't have to learn other courses or textbooks in order to make an app. You should try to make your own app using what you have learned with the above course. When you making your project, you will encounter real-life problems. By solving it (using Google, StackOverflow, XDA, other tech forums, ...), you will learn more than any course or textbook can help you.
I hope you will find this post helpful for you. If anyone has a question, please leave your question belowWhat i'm trying to do right now is download my device’s device specific configuration and kernel to the root of my custom lineage os's source code.
I'm following this guide: https [COLON//] www [DOT] lineageosrom [DOT] com/2017/01/how-to-build-lineageos-rom-for-any [DOT] html
my phone is ulefone armor 5s
Please help me out.Register or Login with Google
I flashed your recent ver 1.2.1 but it cant boot sys rather it goes to twrp everytime btw i am stock kernel andriod 10
Really? You created an account for this post?
This shouldn't be caused by ktweak, as it's a magisk module so it only applies after the system boots. Did you flash ktweak via TWRP or did you install it as a magisk module through the manager?
I am using canary and flash through magisk
Very interesting. I haven't had any users report an issue like this yet. Is it possible something outside of magisk was installed or flashed? Maybe a kernel update or something of the sort? I'll keep an eye out for any similar reports.
How can I root vivo v9 1723?
I tried many methods but nothing work for me.
Please help
I'm sorry, this isn't the right thread to ask that haha. But you could try to ask on the Vivo v9 xda forum and see if there are any guides for your device. Good luck!
So if i delete module from twrp manager system boots normal
Could you try v1.2.1 and see if the issue still happens?XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceQuote:
Originally Posted by joygram
Hisense A6, A6L, A5 ... can not unlock bootloader
you can enter A5 hardware edlmode
teardown your phone
jump this point with clip(?)
and connect usb cable
if can not enter
you need take off power cable ( right bottom corner)
and retry
you can enter EDL mode
you need A5's QFIL firmware
Hi, thanks for the useful information.
Previously I bricked my A5 and was able to re-flash with 6.09.06.
I thought I would be able to issue the "adb reboot edl" command. But it didn't seem to work for me.
If I issue the "adb devices" command, I get the response "List of devices attached" with a number and the word "device".
I can do an "adb shell" command ... works well ... can go in there and put in some linux commands.
But when I issue the "adb reboot edl" command, it appears to work. The phone becomes unresponsive. If I issue the command "adb devices", it says that nothing is there.
But when I go into the QFIL program ... there is "No Port Available".
Any ideas ?The Apple iPhone 12 is a 6.1" phone with a 1170x2532p resolution display. The Apple A14 Bionic chipset is paired with 4GB of RAM and 64/128/256GB of storage. The main camera is 12+12MP and the selfie camera is 12MP. The battery has a 2815mAh capacity.I added two pictures where you can see what I mean by "Adrenaline".
Can someone help me by chance?
I would be very happy.
Sorry for my bad English.
package com.0000.00000; import androidx.appcompat.app.AppCompatActivity; import android.app.*; import android.os.*; import android.view.*; import android.view.View.*; import android.widget.*; import android.content.*; import android.graphics.*; import android.media.*; import android.net.*; import android.text.*; import android.util.*; import android.webkit.*; import android.animation.*; import android.view.animation.*; import java.util.*; import java.text.*; import java.util.HashMap; import java.util.ArrayList; import android.widget.LinearLayout; import android.widget.TextView; import com.google.android.gms.ads.AdView; import com.google.android.gms.ads.AdRequest; import android.widget.ListView; import android.widget.ArrayAdapter; import android.widget.BaseAdapter; import android.widget.EditText; import com.google.android.gms.ads.InterstitialAd; import com.google.android.gms.ads.AdListener; import android.content.Intent; import android.net.Uri; import android.app.AlertDialog; import android.content.DialogInterface; import android.text.Editable; import android.text.TextWatcher; import android.widget.AdapterView; import com.google.gson.Gson; import com.google.gson.reflect.TypeToken; public class PerksActivity extends Activity { private ArrayList<Integer> image_list = new ArrayList<>(); private HashMap<String, Object> map_var = new HashMap<>(); private String saved = ""; private double length = 0; private double r = 0; private String value1 = ""; private String value2 = ""; private String value3 = ""; private String value4 = ""; private ArrayList<HashMap<String, Object>> map_list = new ArrayList<>(); private LinearLayout linear1; private LinearLayout linear2; private LinearLayout linear3; private LinearLayout linear10; private LinearLayout linear11; private LinearLayout linear12; private TextView textview4; private AdView adview1; private LinearLayout linear15; private LinearLayout linear16; private LinearLayout linear44; private ListView listview1; private EditText edittext1; private LinearLayout linear929; private TextView textview8; private InterstitialAd admob; private AdListener _admob_ad_listener; private Intent page_intent = new Intent(); private AlertDialog.Builder popup; @Override protected void onCreate(Bundle _savedInstanceState) { super.onCreate(_savedInstanceState); setContentView(R.layout.perks); initialize(_savedInstanceState); initializeLogic(); } private void initialize(Bundle _savedInstanceState) { linear1 = (LinearLayout) findViewById(R.id.linear1); linear2 = (LinearLayout) findViewById(R.id.linear2); linear3 = (LinearLayout) findViewById(R.id.linear3); linear10 = (LinearLayout) findViewById(R.id.linear10); linear11 = (LinearLayout) findViewById(R.id.linear11); linear12 = (LinearLayout) findViewById(R.id.linear12); textview4 = (TextView) findViewById(R.id.textview4); adview1 = (AdView) findViewById(R.id.adview1); linear15 = (LinearLayout) findViewById(R.id.linear15); linear16 = (LinearLayout) findViewById(R.id.linear16); linear44 = (LinearLayout) findViewById(R.id.linear44); listview1 = (ListView) findViewById(R.id.listview1); edittext1 = (EditText) findViewById(R.id.edittext1); linear929 = (LinearLayout) findViewById(R.id.linear929); textview8 = (TextView) findViewById(R.id.textview8); popup = new AlertDialog.Builder(this); listview1.setOnItemClickListener(new AdapterView.OnItemClickListener() { @Override public void onItemClick(AdapterView<?> _param1, View _param2, int _param3, long _param4) { final int _position = _param3; if (_position == 0) { popup.setTitle(map_list.get((int)_position).get("d").toString()); popup.setMessage(map_list.get((int)_position).get("e").toString()); popup.setPositiveButton("Schliessen", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface _dialog, int _which) { } }); popup.create().show(); } if (_position == 1) { popup.setTitle(map_list.get((int)_position).get("d").toString()); popup.setMessage(map_list.get((int)_position).get("e").toString()); popup.setPositiveButton("Schliessen", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface _dialog, int _which) { } }); popup.create().show(); } if (_position == 2) { popup.setTitle(map_list.get((int)_position).get("d").toString()); popup.setMessage(map_list.get((int)_position).get("e").toString()); popup.setPositiveButton("Schliessen", new DialogInterface.OnClickListener() { @Override public void onClick(DialogInterface _dialog, int _which) { } }); popup.create().show(); } } }); edittext1.addTextChangedListener(new TextWatcher() { @Override public void onTextChanged(CharSequence _param1, int _param2, int _param3, int _param4) { final String _charSeq = _param1.toString(); map_list = new Gson().fromJson(saved, new TypeToken<ArrayList<HashMap<String, Object>>>(){}.getType()); length = map_list.size(); r = length - 1; for(int _repeat17 = 0; _repeat17 < (int)(length); _repeat17++) { value1 = map_list.get((int)r).get("a").toString(); value2 = map_list.get((int)r).get("b").toString(); value3 = map_list.get((int)r).get("c").toString(); if (!(_charSeq.length() > value1.length()) && value1.toLowerCase().contains(_charSeq.toLowerCase())) { } else { if (!(_charSeq.length() > value2.length()) && value2.toLowerCase().contains(_charSeq.toLowerCase())) { } else { if (!(_charSeq.length() > value3.length()) && value3.toLowerCase().contains(_charSeq.toLowerCase())) { } else { map_list.remove((int)(r)); } } } r--; } listview1.setAdapter(new Listview1Adapter(map_list)); ((BaseAdapter)listview1.getAdapter()).notifyDataSetChanged(); } @Override public void beforeTextChanged(CharSequence _param1, int _param2, int _param3, int _param4) { } @Override public void afterTextChanged(Editable _param1) { } }); _admob_ad_listener = new AdListener() { @Override public void onAdLoaded() { admob.show(); } @Override public void onAdFailedToLoad(int _param1) { final int _errorCode = _param1; SketchwareUtil.showMessage(getApplicationContext(), "Werbung konnte nicht Geladen werden!!!".concat(String.valueOf((long)(_errorCode)))); } @Override public void onAdOpened() { } @Override public void onAdClosed() { } }; } private void initializeLogic() { adview1.loadAd(new AdRequest.Builder().addTestDevice("0815") .build()); map_var = new HashMap<>(); map_var.put("a", getResources().getString(R.string.perksstriche)); map_var.put("b", getResources().getString(R.string.perksueberlebende)); map_var.put("c", getResources().getString(R.string.perksstriche02)); map_var.put("d", getResources().getString(R.string.perksinfopopupheadername)); map_var.put("e", getResources().getString(R.string.perksinfopopuptxtname)); map_list.add(map_var); map_var = new HashMap<>(); map_var.put("a", getResources().getString(R.string.perkablenkungname)); map_var.put("b", getResources().getString(R.string.perksueberlebendenadamfrancisname)); map_var.put("c", getResources().getString(R.string.perkslehrbarimblutnetzlevel30name)); map_var.put("d", getResources().getString(R.string.perkablenkungpopupheadername)); map_var.put("e", getResources().getString(R.string.perkablenkungpopuptxt)); map_list.add(map_var); map_var = new HashMap<>(); map_var.put("a", getResources().getString(R.string.perkadrenalinname)); map_var.put("b", getResources().getString(R.string.perksueberlebendenmegthomasname)); map_var.put("c", getResources().getString(R.string.perkslehrbarimblutnetzlevel40name)); map_var.put("d", getResources().getString(R.string.perkadrenalinpopupheadername)); map_var.put("e", getResources().getString(R.string.perkadrenalinpopuptxt)); map_list.add(map_var); listview1.setAdapter(new Listview1Adapter(map_list)); ((BaseAdapter)listview1.getAdapter()).notifyDataSetChanged(); saved = new Gson().toJson(map_list); image_list.add(R.drawable.perk_ueberlebende); image_list.add(R.drawable.adam_francis_perk_ablenkung); image_list.add(R.drawable.meg_thomas_perk_adrenalin); } @Override protected void onActivityResult(int _requestCode, int _resultCode, Intent _data) { super.onActivityResult(_requestCode, _resultCode, _data); switch (_requestCode) { default: break; } } public class Listview1Adapter extends BaseAdapter { ArrayList<HashMap<String, Object>> _data; public Listview1Adapter(ArrayList<HashMap<String, Object>> _arr) { _data = _arr; } @Override public int getCount() { return _data.size(); } @Override public HashMap<String, Object> getItem(int _index) { return _data.get(_index); } @Override public long getItemId(int _index) { return _index; } @Override public View getView(final int _position, View _view, ViewGroup _viewGroup) { LayoutInflater _inflater = (LayoutInflater)getBaseContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE); View _v = _view; if (_v == null) { _v = _inflater.inflate(R.layout.perkssearch, null); } final LinearLayout linear1 = (LinearLayout) _v.findViewById(R.id.linear1); final ImageView imageview1 = (ImageView) _v.findViewById(R.id.imageview1); final LinearLayout linear2 = (LinearLayout) _v.findViewById(R.id.linear2); final LinearLayout linear3 = (LinearLayout) _v.findViewById(R.id.linear3); final TextView textview1 = (TextView) _v.findViewById(R.id.textview1); final TextView textview2 = (TextView) _v.findViewById(R.id.textview2); final TextView textview3 = (TextView) _v.findViewById(R.id.textview3); textview1.setText(map_list.get((int)_position).get("a").toString()); textview2.setText(map_list.get((int)_position).get("b").toString()); textview3.setText(map_list.get((int)_position).get("c").toString()); imageview1.setImageResource(image_list.get((int)_position)); if (textview2.getText().equals(getResources().getString(R.string.perksueberlebende)) ) { textview2.setTextColor(0xFFFFFFFF); } if (textview2.getText().equals(getResources().getString(R.string.perksvonkeinezuordnungname)) ) { textview2.setTextColor(0xFFFFFFFF); } if (textview2.getText().equals(getResources().getString(R.string.perksueberlebendendwightfairfieldname)) ) { textview2.setTextColor(0xFF8BC34A); } return _v; } } @Deprecated public void showMessage(String _s) { Toast.makeText(getApplicationContext(), _s, Toast.LENGTH_SHORT).show(); } @Deprecated public int getLocationX(View _v) { int _location[] = new int[2]; _v.getLocationInWindow(_location); return _location[0]; } @Deprecated public int getLocationY(View _v) { int _location[] = new int[2]; _v.getLocationInWindow(_location); return _location[1]; } @Deprecated public int getRandom(int _min, int _max) { Random random = new Random(); return random.nextInt(_max - _min + 1) + _min; } @Deprecated public ArrayList<Double> getCheckedItemPositionsToArray(ListView _list) { ArrayList<Double> _result = new ArrayList<Double>(); SparseBooleanArray _arr = _list.getCheckedItemPositions(); for (int _iIdx = 0; _iIdx < _arr.size(); _iIdx++) { if (_arr.valueAt(_iIdx)) _result.add((double)_arr.keyAt(_iIdx)); } return _result; } @Deprecated public float getDip(int _input){ return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, _input, getResources().getDisplayMetrics()); } @Deprecated public int getDisplayWidthPixels(){ return getResources().getDisplayMetrics().widthPixels; } @Deprecated public int getDisplayHeightPixels(){ return getResources().getDisplayMetrics().heightPixels; } }XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceHello everyone! You might/might not know that OxygenOS (and ROMs based on it) have an in-built/native call recording feature. However, it is not enabled for everyone as it is region-locked and it might/might not be illegal to record calls where you are, with/without notifying the other party that the call is being recorded.
This thread has been created with the intent of enabling this call recording feature on OxygenOS (and ROMs based on it). There are several ways to achieve this, which have been listed below. You can use any method, as per your preference, and it should work. Let's get straight to it then!
Ways to Enable
Non-Root Method(s)
Detailed Information and Usage
Non-Root Method(s)
- ADB command via a computer
Requirements: A working ADB interface on a computer, USB debugging enabled on the deviceUsage: Run the following command to enable native call recording:
Code:
adb shell settings put global op_voice_recording_supported_by_mcc 1 Reboot Survival: No, the command would have to be run again after every reboot.
- Magisk module
Requirements: Latest MagiskUsage: Download and copy the EnableOOSNativeCallRecording-Magisk v9.1.zip to your device. Once done, install it in Magisk Manager as a module.Reboot Survival: Yes, Magisk will automatically run the module at every boot and enable native call recording.
- Flashable zip
Requirements: TWRPUsage: Download and copy the EnableOOSNativeCallRecording-Flashable v8.0.zip to your device. Once done, reboot to recovery (TWRP) and just flash the zip.Reboot Survival: Yes, the zip adds a rc script file to the /etc/init folder, which executes at every boot.Note: This method should work for rootless users too, but it needs TWRP and hence an unlocked bootloader.
- Tasker profile
Requirements: Tasker, a rooted deviceUsage: Download and copy the EnableOOSNativeCallRecordingv2.prf.xml to your device. Once done, import it in Tasker as a profile.Reboot Survival: Yes, Tasker will run the profile every time the global variable of call recording changes to zero (i.e. disables itself) and enable native call recording.
- App which runs on boot
Requirements: A rooted deviceUsage: Download and install the EnableOOSNativeCallRecording v2.0.apk and run it. At the first launch, grant root access to the app.Reboot Survival: Yes, the app will automatically run at every boot and enable native call recording.
- App which doesn't run on boot
Requirements: A rooted deviceUsage: Download and install the EnableOOSNativeCallRecording v1.0.apk and run it. At the first launch, grant root access to the app.Reboot Survival: No, the app will have to be run manually after every reboot to enable native call recording.
Downloads
Compatibility
Device(s)
Important Read-Me Points
- (Magisk module only) The module installation has been designed to use the existing TeleService.apk from your device and modify it. Hence, if you update your ROM, there is a chance that the original apk that was modified is updated with the ROM update, which might lead to bootloops/other issues after installing the update, with this module installed. To avoid this from happening, always update your ROM by following these steps: Uninstall the existing module -> Reboot -> Download and apply the system update -> Reboot -> Download and install the latest module -> Reboot your phone again once the installation is complete
- (App method only) After your device fully boots up, a notification message will appear in the status bar/pull down notification panel to let you know that call recording has been enabled (which will go after 10 seconds if you don't swipe it away).
- (App method only) There is also a "Read Me" link in the notification message if you want to read a short information regarding the app.
- (All methods) Please make sure that you wait for at least 30 seconds after boot before checking if the call recording menu option is visible for you under the stock dialer's settings.
- (All methods) All your recordings will be stored at /storage/emulated/0/Record/PhoneRecord in the aac format.
- (All methods) The mod works only works when using the stock OxygenOS dialer, and it will not run on a different dialer.
- (All methods) If something (the app/magisk script/anything) that is supposed to run on boot is not executing on boot, you need to turn off advanced optimisation: Settings -> Battery -> Battery optimisation -> Three dot menu (⋮) -> Advanced optimisation -> Turn off.
- (All methods) The mod enabled the native call recording feature, but may/may not turn on auto-recording of the calls. If you wish to do that, after using one of the methods listed above, open the Stock Dialer App -> Three dot menu (⋮) -> Settings -> Auto-record calls -> Turn on.
- (All methods) If you have hidden root from the stock dialer app via Magisk Hide, the call recording option will disappear after sometime. Make sure that the stock dialer is not checked in the Magisk Hide selection list.
Disclaimers
- I am not the developer of the Enable OOS Native Call Recording app. I merely stumbled upon it in OnePlus 3T's Themes, Apps and Mods forum and I take no credit for it. Please direct all your thanks and/or donations towards @padlad, the original developer of the app. Link to the original thread is here.
- I am not the developer of the flashable zip that adds the necessary command to the ramdisk. The zip was posted later in this thread and I take no credit for it. Please direct all your thanks and/or donations towards @Zackptg5, the original developer of the flashable zip.
- I am not the developer of the Tasker profile. The profile was posted later in this thread and I take no credit for it. Please direct all your thanks and/or donations towards @strongst, the original creator of the Tasker profile (original idea by @Fif_).
- You are doing this at your own risk. I am not responsible for bricked devices, dead SD cards, thermonuclear war, or you getting fired because the alarm app failed. Please do some research if you are unsure of how to go about something.
- It might be illegal in your country to record calls with/without notifying the other party that the call is being recorded. Either ways, you are responsible for using this mod.
Thanks To
- @padlad, for creating the Enable Call Recording app and the Tasker profile
- @Zackptg5, for creating the flashable zip
- @strongst, for creating the Tasker profile and for being super helpful to everyone
- @My Name is ShaoXIa, for doing excellent research work and making great recommendations for improving the stability and effectiveness of the Magisk module
- @Taknok, for improving race condition handling at boot
- @topjohnwu, for Magisk and all the work he's ever done for the community
- @osm0sis, for the AnyKernel3 template and all the work he's ever done for the community
- @joaomgcd, for Tasker
- @Tomek Kondrat, for the mention in this XDA article
- All of you guys for viewing this thread
Changelog
Enable OOS Native Call Recording Apk
EnableOOSNativeCallRecording-Magisk Zip
- v1.0 - Initial release for Magisk v13.1, v13.2, v13.3
- v2.0 - Update for Magisk v14.0
- v3.0 - Update for Magisk v15.0
- v3.1 - Reduced the script execution delay from 2 minutes post boot to 10 seconds post boot
- v3.2 - Slightly increased the script execution delay from 10 seconds post boot to 30 seconds post boot
- v4.0 - Update for Magisk v16.0
- v5.0 - Update for Magisk v17.0
- v5.1 - Made the script execute the command 5 times at an interval of 30 seconds after boot
- v5.2 - Made the script execute the command every minute infinitely post the initial run
- v5.3 - Adjusted the script to make the infinite loop run asynchronously
- v5.4 - Reverted changes made in v5.2 and v5.3 as most of the users preferred and had no issues with v5.1
- v6.0 - Fixed call recording automatically getting disabled after a while
- v6.1 - Reverted the last change which caused SIM settings force closes
- v7.0 - Permanently fixed call recording automatically getting disabled after a while and fixed the SIM settings force close issue that was caused by the release of v6.0
- v8.0 - Update for Magisk v19.0
- v9.0 - Updated template and added manufacturer check
- v9.1 - Base template update and manufacturer check bug fix
- v9.2 - Improve race condition handling at boot and fixed installation failures with Magisk Canary
EnableOOSNativeCallRecording-Flashable Zip
- v1.0 - Initial release
- v2.0 - Updated to remove the separate init file and run the command from existing the init.rc file
- v3.0 - Updated to include device codenames in addition to the official device names
- v4.0 - Synced with the latest AnyKernel template and new BusyBox
- v5.0 - Synced with the latest AnyKernel template and changed backup/restore method
- v6.0 - Completely re-wrote flashable zip; now works for rootless users too who have an unlocked bootloader and TWRP installed
- v7.0 - Added a slight delay in command execution to support Treble OOS; shifted the script to /system/etc/init
- v8.0 - Permanently fixed call recording automatically getting disabled after a while
EnableOOSNativeCallRecording Prf Xml
OP Update Information
Created: July 10, 2017
Last Updated: August 23, 2020Welcome to「CRB」
Hi everyone!
I made this application to make it easier for people to build a custom ROM. Still being in beta release, any feedbacks are welcome!
The new version was created from scratch, to be better performing, more flexible and easier to be updated. It supports Android 10 and has many more features than the previous one.
This software is provided "as is". Use at your own risk.
I'm not responsible for any damage to your device.
WSL - Case sensitive
Some versions of Windows do not support case sensitive. You can test it in CRB -> Settings -> Test WSL.
Run CRB as Administrator.
Note: some devices also require this step
lpmake and lpunpack
super.img
lpmake and lpunpack (linux version) Download
Features:
- Supports files format zip, 7z, jar, tar, ozip, md5, img, dat.br, dat, payload.bin, super.img.
- Custom Image for build image with all the options available.
- APKTool a tool for reverse engineering Android apk files.
- Debloater for remove and restore apps with only one click.
- Deodex for deodexing Android's stock ROM.
- Zipalign for optimize RAM usage.
- APK Drag & drop Updater.
- Easy edit build.prop and updater-script.
- Remove Knox automatically.
- Auto-generating updater-script.
- Converting file_contexts.bin to standard text.
- RAMDisk for build only ramdisk image.
- Case Sensitive files supports.
- Build custom Android data image.
- Output formats img, new.dat, new.dat.br, lz4.tar.
- Remove DM-Verity.
- Supporting Android 10.
- log for all task.
Thanks Note:
JamFlux for knowledge exchange.
Hyper.Alvi for tips and test.
hanspampel for tips and test.
el0xren for tips and test.
Duy Minh for Vietnamese language.
Fazri Arrashyi Putra for Indonesian language.
Hakan GÜVEN for Turkish language.
David for Chinese language.
hanspampel for German language.
Spyros Kaparos for Greek language.
JamFlux for Spanish language revised by elxufas.
fivanbe for update Spanish language in latest update.
Credits:
APKTool - Connor Tumbleson and Ryszard Wisniewski
FLinux - Xiangyan Sun
sDat2Img - Andrei Conache
sefcontext_parser - Jake Valletta
Brotli - Jyrki Alakuijala and Zoltán Szabadka
BusyBox - Denys Vlasenko
Magiskboot - John Wu (topjohnwu)
vdexExtractor - Anestis Bechtsoudis
compact_dex_converter - fOmey
7-Zip - Igor Pavlov
LZ4 - Yann Collet
UberApkSigner - Patrick Favre-Bulle
make_ext4fs - SuperR. for initial repository and anpaza for update it.
RMVerity - SuperR.
Img2sDat - Andrei Conache
Smali/Baksmali - Ben Gruver
Payload_Dumper - ius
ImgExtractor - unix3dgforce and blackeange
tune2fs and resize2fs - Google
OmcTextDecoder - fei-ke
AAPT - Google
Notepad++ - Don Ho
Decrypt Oppo - Bjoern Kerler
Join the community:
Telegram Channel
YouTube Channel
Requirements:
Windows 64-bit Platform
.NET Framework 4.7.2
Java (JDK) for APK-Tool
Languages available:
English, Italian, German, Spanish, Greek, Turkish, Chinese, Indonesian, Vietnamese, Russian.
Downloads:
Download [ Zip format ]-[ 77.0 MB ]-[ AFH ]
MD5: 59afeb9bc3b6b5f5c052fa2b922f1d96
Changelog
## [2.2.1] - 2020-07-25
### Note
- CRB require administrator privileges for enable case sensitive in project folder with WSL.
### Added
- Main -> Extract and Settings (Test WSL) will show UAC dialog (administrator privileges).
- Main -> Title will be show "(Elevated)" when is running with administrator privileges.
### Fixed
- Single .new.dat.br extraction.
### Changed
- Licensing Agreements Dialog will be close after ticks box.
- Windows Subsystem for Linux (WSL) Dialog will be close after ticks box.
- Kernel Tools -> Disable DM-Verity/ForceEncrypt added new devices.
- Updated German language.
XDA:DevDB Information
CRB Kitchen, Tool/Utility for the Chef Central
Contributors
MrWaehere
Version Information
Status: Beta
Current Stable Version: 1.6.1
Stable Release Date: 2020-01-14
Current Beta Version: 2.2.1
Beta Release Date: 2020-07-25
Created 2020-04-23
Last Updated 2020-07-25This tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/Hi!
I use your rom from the 1009 build, and after i installed this version (1017) my twrp was replaced with lineageos own recovery and my data partition became encrypted.
So now i cannot upgrade, because i cannot select the new build in the lineage recovery.
And i didn't wanted to encrypt my data, i didn't enabled that (and i think it wasn't with the 1013 build, because with twrp i was able to browse the 1017 build for upgrade).
Is really my only option to upgrade is to replace my recovery back to twrp by adb?
My battery drains too fast, with the latest oxygen os 9.x my battery was good for 48 hours, now i am happy if it keeps for 16 hours, but sometimes only 10 hours.
Anyway thanks for you work!
Quote:
Originally Posted by T1mb3
UPDATE:
* Sync LineageOS sources:
* Many smaller features are now back
* Upstream kernel
* More detailed changelog
* LineageOS-18.0/lineage-18.0-20201017-UNOFFICIAL-cheeseburger.zip DownloadI just bought 2 days ago the Samsung galaxy tab A 8.0 (2017_ SM-T380 model.
It didn't come with any type of stylus and I read that it being the T series that the S-Pen wont work with it.
Does anyone know of a stylus I can use for it that's in some what of a comparison to the S-Pen?
I know they make these stylus I saw in Best Buy called the Bamboo stylus. I don't know much about them or if they even work with this model of tablet. I had found them in the section with all the iPad accessories.
Thank youRegister or Login with Google
The ultra-compact Palm Palm (PVG100) was first made available for purchase in November 2018. It features a 3.3” 720 x 1280 IPS LCD display, offering a pixel density of ~445 PPI. Under the hood sits a Qualcomm Snapdragon 435 SoC, which utilises an octa-core (4 x 1.4 GHz & 4 x 1.1 GHz) CPU, an Adreno 505 GPU and 3 GB of system RAM. A dedicated microSD card slot is included, allowing expansion of the 32 GB of system RAM. The primary camera is capable of capturing images at 12 MP, the secondary at 8 MP. The whole 63g package is kept powered-up by a non-removable 800mAh battery. Here members are free to browse the existing threads available for the Palm Palm, which may include topics such as ROM development, custom recoveries and rooting guides, or simply request general support for their device.The OnePlus Nord N10 5G is a 6.49" phone with a 1080x2400p resolution display. The Qualcomm SM6350 Snapdragon 690 5G chipset is paired with 6GB of RAM and 128GB of storage. The main camera is 64+8+5+2MP and the selfie camera is 16MP. The battery has a 4300mAh capacity.More
870 posts
Join Date:Joined:Sep 2011
Less
got this phone in july 2017 and now on September 2020, still getting a 6h+ sot.
Not using the dash (using apple 5w charger), not leaving it plugged at night, and recharge it ONLY when needed, makes a huge difference.
And its my work/personal phone. So a lot of calls, hotspot, pictures, music and games. Every single day I do more than 6h of SOT, so 1 or more charge in a day since 2017... Very good phone imo.For a few years I've had this problem with my Nokia 2330, everything I go to Applications and click on the Games folder, the phone is loading, after loading it shows me a white screen for a split second and then shuts off.
If anyone needs to know exactly what happens lemme know and I will record a video.
The model is Nokia 2330-c2
Ive had this problem for 6 years now, and ive been struggling to fix it for a very long time.
If anyone still has this phone then PLEASE HELP ME FIX IT. The white display problem occurs on other things along with the Games folder. So if you still have the phone then PLEASE help me.
Thanks.Hi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
Thanks
Have a great day
There really is no "best" network. All ad networks have their ups and downs. They'll have a good campaign, then it will end, then later they'll get another, and so on. It's best to have multiple networks and mediate them. That way you get the benefit of the ups, and can mitigate the downs.
Using Enhance, you can now integrate all of the services that providers offer without ever having to touch an SDK again. With little to NO coding at all and without touching source code, Enhance® is the easiest way to integrate 3rd party services into your project or to keep them up to date. (Ads, Mediation, Analytics, Attribution, Crash Reporting and more) No more SDK integration!!!
Hi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
You also want to think about which ad formats are you using when choosing which networks to activate. Take a look at Appodeal's Performance Index on ad networks by country and device to get a better idea of what works best.
Hi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
Thanks
Have a great day
Admob are great for global fill and can pretty much give you close to 100% of all your ad inventory. But there are ad networks that will give you maybe 60% but at a higher CPM rate. Rather than using one or the other, use both.
60% filled from the higher CPM network then fill the 40% using admob. Same fill as you were getting before but more revenue. So yeah, have more than one ad network.
I do agree with yvonne. and maybe consider a mediation platform. That way you have the choice of using multiple ad networks and they will be able to advise on what ad networks would be the best.
If you want, I can have a look at your app and offer some advice.
Hi guys , i just release a game on playstore and appstore , i have ad from Admob ,
I read on the internet that the best way to increase your revenue is to put in your game more that one ad network , it's that true ? if yes , please tell me , which is the best ad network
Thanks
Have a great day
But it is also good to keep in mind, that most of your traffic will be, basically, stolen, your app hacked and ads removed or replaced by other ads. That's sad but true. That's why I would recommend you to check out Addvertize - this is a technologically cutting edge new project that is focused not only on serving best performing ads, but also on protecting your apps from any interference, plus on a smart monetization of additional 3rd non-google play party traffic, which might be actually huge.
Besides adding multiple ad networks, you can also try serving ads from different ad formats on the same placement. For example, you can show a native ad on your banner placement or a MREC on a native ad placement.
If your app is in India we can help you make additional revenue other than what you are already making. It is a revenue share model and involves no cost at all. It works with a simple URL integration in the app. Mail me at [email protected] media if you want to explore this opportunity
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceQuote:
Originally Posted by konop
I am a developer and want to monetize my app.
Can you advice me ad networks? or other ways to do that?
Different monetization models for mobile apps:
Premium: users pay to have access the app.
Freemium: there is a "free" limited version of the app for the users to test before they decide to get the full version.
Subscriptions: payments are made weekly/monthly/yearly.
In-app advertising: keeps the app free to play, developers profit implementing ads in different formats (banner, native, videos, interstitials, etc.)
In-app purchases: users need to pay to have access to certain elements or special features of the app. But the app itself is still free.
All of these models can be combined. Experienced developers have had good results mixing in-app ads with in-app purchases.
The most popular monetization model is in-app ads (free to play). To implements this model in your app you can choose an ad network, or go with mediation.
I would say mediation is the best you can do, since it makes several ad networks compete in real time, so you can get the highest paying bid. Try Appodeal! You can integrate various ad networks in one stable SDK. And with the help of their 24/7 support team, installing it in your app should be fast and easy.You know the story by now after 2 years, lets get started.
GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
Launcher supports work profile apps and dual apps from various oems
Launcher supports Android 10+ gesture system but restricted.
Groups allow users to create organized folders of apps available in the Groups Sheet
Personalized search in the Search Sheet
A revised single screen interface introducing a new layered material design.
Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
Recent Apps don't have a long click listener (no sheets).
The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
Users can block apps from showing badges and priority notifications.
Launcher sheets can be accessed from the launcher menu.
The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
Widgets can be resized by long clicking on them and a resize module will appear (WIP).
The launcher settings will theme itself on Android 10 light or dark mode.
Launcher settings features smart suggestions that appear on certain variables available
Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
General Note:
This is a pre beta of which means parts of the launcher are not even functional yet. I did a pre beta to find errors i couldn't find myself and to get feedback on the progress we currently are at. If you see a page that is blank or something isn't functional, chances are it wasn't ready for the public yet. Please be patient with things.
Common Questions:
Why does GCA Launchers Adaptive icons behave so differently compared to the ones found in stock launchers?
-That is because the icons use a different mechanic and were made from scratch so everyone could enjoy adaptive icons and it not be exclusive to 7.1+ users. My icons can be modified from the icon to the shape override.
Can we get a launcher import option?
-No, not currently. Almost all launchers that exist use the base of Googles Launcher3 which adding an import option for them is easy. I would have to take the database, tear it apart, create a converter and place the data we need were it belongs. We are not there yet.
The System UI seems to behave differently from other apps.
-GCA Launcher has a theme engine similar to pixel launcher and trys to make the choice of a light or dark navbar or statusbar. Using Android10s dark mode may confuse things but eventually il have it all sorted out.
The launcher interface isn't what I expected. Shouldn't it behave like pixel launcher?
-No, it behaves like it should be. How it was designed.
Does it support quickswitch?
-It never will unless Google changes the api for the recents provider. I blame the lawnchair team of this common question as many users have assumed this is a premium feature now and should be supported by all launchers now which isn't the case.
Does this launcher support dark mode from android10?
-yes but we have some work todo yet
Why do things look weird in the launcher settings? Preference category is hard to read and matches the toolbar color.
-Try changing the color scheme in the style settings. This is the GCA theme engine at work.
Ratings:
If you post a rating for GCA Launcher coming from V1, more than likely i will dis regard it. V1 is being deprecated soon and all bugs and errors you will find in V1 on the playstore are being disregarded. V2 is a rewrite with new features and new bugs.
I updated the build earlier to fix something for Android 8 users and ended up screwing something up for Android 9 users so il be keeping tabs on everything as much as possible but I will not be able to do anything if no one says anything. Please provide feedback as much as possible. Thank you in advanced.
Those of you keeping me informed of crashes, thank you, thank you, thank you
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
Shelf apps can be changed by long clicking on a Shelf favorite and their will be a Favorite option to select a different package. This option isn't available in the App Drawer apps so it might be easy to miss.
When changing the icon sizes, make sure your changing the icon size and bot just the text size. Both options are in one dialog.
Id your having a hard time switching out your default launcher, you can use my No'Me app i have listed above. It helps alot.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
The Google Nexus 5, released in Q4 2013, has been created in collaboration with LG. As with all previous Nexus devices, the Nexus 5 runs on a clean version of Android, in this case Android 4.4 KitKat. The Nexus 5 is powered by a powerful Qualcomm Snapdragon 2.3GHz quad-core processor, 2GB of RAM and an Adreno 330 GPU. The 4.95" True HD IPS Plus display has a resolution of 1080 x 1920, with a pixel density of 445 ppi. Storage comes in at either 16GB or 32GB. Other features include an 8MP camera, LTE connectivity and a 2300mAh battery.
The Nexus 5 was released on October 31st, 2013. Initially available in black and white, it is now available red as well. The Nexus 5 has received strong developer support, and many custom ROMs, kernels and more are available on XDA. Click on to see full specs for the Nexus 5.
Resource Links:
Be sure to check out other great XDA Developer TV Videos.No. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- LKT sets random nonsensical build.props that likely don't even exist.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- CAF CPU Boost Tweaks
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16Discover the best, most-loved by the XDA community, such as famous root tools like SuperSU and Framaroot, the Xposed system modification framework, battery-saving app Greenify, and the ultimate video player, MX Player. Ask questions, see tips and tricks, and learn to use these apps like a pro.By pittvandewitt and MrWhite214
Introduction
Many users are enhancing their smartphone audio experience with the popular ViPER4Android software, but some of us have a hard time installing the driver or they don't like the look of the app. As a solution for these troubles we have rewritten the 2.4.0.1 app source and added all 2.5.0.5 features to it. Many more features have been implemented too.
With our huge success of ViPER4Android 2.6 we decided to completely rewrite the ViPER4Android app in Kotlin. This allowed us to squeeze out the remaining bugs and clean up the code even more. After a long time of waiting for you and developing for us, ViPER4Android 2.7 is finally here!
There are many new features and improvements compared to 2.6, of which some can be found in the changelog. Hit the download button to check it out yourself!
Downloads
You can download the latest version on XDA Labs
If you were pointed here for the installer by @Zackptg5, the link can be found here
pittvandewitt's vdc service
If you've always wanted to get the most neutral and arguably best sound coming from your headphones, make sure to join the VDC service to request a file!
Donate
You can donate to us via PayPal or buy our donation package from XDA Labs with extra features!
Donate via PayPal
Dev Note
If you want to include the app in your work, you're free to do so as long as you give proper credits
Legal notice
We are not associated with vipersaudio nor audlabs.
Stating their Github readme we're free to use the driver as long as it's not used commercially.
The driver parameters are obtained from the 2.4.0.1 source. The graphical EQ interface is inspired by the Cyanogenmod DSP application
The app is still named ViPER4Android, because the driver isn't any different from what ViPER ACOUSTIC provides.
Renaming it without changing anything would be considered kanging, which is not what is going on here.
Credits
ViPER ACOUSTIC for the driver
Bappo for Swedish translation
pittvandewitt for Dutch translation
sazuke0703 for Thai translation
R1DEN for Russian translation
Hede for Danish translation
gloeyisk for Indonesian translation
LCS for Chinese simplified and traditional translations
razor84 for Turkish translation
Installation
Download and install the APK from XDA Labs
Follow the instructions when opening the app
XDA:DevDB Information
ViPERAndroid, App for the Apps & Games
Contributors
Team_DeWitt, pittvandewitt, Mr_White_214
Version Information
Status: Beta
Current Beta Version: 2.7.2.0
Beta Release Date: 2020-10-21
Created 2018-04-09
Last Updated 2020-10-21More
12 posts
Join Date:Joined:Mar 2019
Less
Great call quality on the t285 (normal calls)
Review for normal call function, not speaker phone.
Call quality is really good, the main phone speaker is very large, it needs to be turned down to be less audible to others and to hold phone closer to ear (ok, tablet, but i use it as phone). Friends and family hear me really very well. Because the tablet is bigger and heavier than a real phone, the speakers and mic can be bigger I guess. phone calls are very functional on this device, as good as any real phone i have used, only it looks a bit daft due to 7" size.
(at last a general consumer question i can actually answer lol!)XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Servicejust wanted to give a quick rundown of my experience with a cheap aftermarket LCD (yes, you read right...) for the Oneplus 5 from Aliexpress.
I broke my screen in July, since I knew I'd get a Pixel 4a or a Oneplus Nord anyways I wasn't that worried about quality, I just needed something to hold me over till I get the new phone. I ordered an aftermarket display from Aliexpress for 23 EUR. The display arrived and it immediately looked... weird. It didn't have the round edges of the original screen and it seemed thicker. Doesn't matter, it's cheap and I'll just need it for a few weeks, tops, so what could go wrong?
Here are the issues I immediately noticed:
* Quality control is bad, the upper right nut in the frame for the screw on the mainboard is loose on the display and can't be fastened
* No adhesive for various parts that are glued to the original frame, so they sit loose
* No oleophobic coating on the screen
* Much thicker than the original display
* LCD not OLED, so colors are off and it's not as bright as the original display
But it gets worse. Once I had everything back together the display was not closing properly. There's a metal notch on the frame that bends the main PCB and prevents the SIM cart tray from inserting properly. That metal notch is neither present on original display, nor on sellers pictures.
PCB is bending on metal notch
Comparison original display to display from seller
Screenshot from seller without metal notch
Conclusion: the item is faulty. Since that I've dremeled the notch off and the phone closes now, but even for a screen as cheap as this, this is absolutely unacceptable, in my opinion. There are several sellers now that feature pictures of this display replacement with the notch visible, but I don't think repairing a manufacturing defect should be the responsibility of the customer.
Overall can not recommend. This might be okay for the cheapest of cheap repairs, but manufacturing defects aside, it also seriously lowers the quality of the device. I don't have a repair business, but this is the tenth screen I replaced over various iPhones, a Oneplus One, a Nexus 6 and now this Oneplus 5 and this is the lowest quality screen replacement I've ever seen. And I've put some really cheap LCDs into iPhones. It will hold you over for a few weeks like it did for me, but you can say goodbye to any resale value left.
On the plus side: it doesn't have the wobbly screen effect while scrolling...
tl;dr: don't buy, unless you are in a pinch.The Essential Phone is an very unique device that sports a 19:10 aspect ratio. This edge-to-edge display is 5.71" in size with a resolution of 1312x2560 pixels. This phone comes with the Snapdragon 835 chipset and 4GB of RAM. There are 128GB of internal storage with no expandable microSD slot. The back dual camera has two 13MP sensors and can shoot up to 4K video resolution. This phone is powered by a 3,040mAh battery.I have one question, i never flash rom on my OP5T, what is difference between Cheeseburger and Dumpling ?
Thank for reponse ^^
Register or Login with Google
Hello
I have one question, i never flash rom on my OP5T, what is difference between Cheeseburger and Dumpling ?
Thank for reponse ^^
It's the devices codenames.
OP5T - dumpling
OP5 - cheeseburger
Oops, i don't think it's possible name of device haha, very thanks !
It's possible on this rom get old gesture on OP5T ?
I use the old gestures.
I do this my turning off the navbar in RR customisations (not all ROMs have this option which is needed).
Then I use an app called Vivid N.G. to use the original OnePlue gestures
I flash rom and all work fine
But it's possible to install Oneplus Gapps ?
Thanks, but when i flash gapps nano and use rom ? It's possible to flash Oneplus Gapps ?
I am not familiar with OnePlus Gapps. Have a link?Invalid post specified. This can happen for a variety of reasons-- most likely because the thread or post you are trying to view has been moved or deleted. Please return to the forum home
and browse for another similar post.I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveThe Xiaomi Mi Note 10 is a 6.47" phone with a 1080x2340p resolution display. The Qualcomm SDM730 Snapdragon 730G chipset is paired with 6GB of RAM and 128GB of storage. The main camera is 108+12+5+20MP and the selfie camera is 32MP. The battery has a 5260mAh capacity.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Realme 7i is a 6.5" phone with a 720x1600p resolution display. The Qualcomm SM6115 Snapdragon 662 chipset is paired with 8GB of RAM and 128GB of storage. The main camera is 64+8+2+2MP and the selfie camera is 16MP. The battery has a 5000mAh capacity.You know the story by now after 2 years, lets get started.
GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
Launcher supports work profile apps and dual apps from various oems
Launcher supports Android 10+ gesture system but restricted.
Groups allow users to create organized folders of apps available in the Groups Sheet
Personalized search in the Search Sheet
A revised single screen interface introducing a new layered material design.
Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
Recent Apps don't have a long click listener (no sheets).
The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
Users can block apps from showing badges and priority notifications.
Launcher sheets can be accessed from the launcher menu.
The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
Widgets can be resized by long clicking on them and a resize module will appear (WIP).
The launcher settings will theme itself on Android 10 light or dark mode.
Launcher settings features smart suggestions that appear on certain variables available
Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
General Note:
This is a pre beta of which means parts of the launcher are not even functional yet. I did a pre beta to find errors i couldn't find myself and to get feedback on the progress we currently are at. If you see a page that is blank or something isn't functional, chances are it wasn't ready for the public yet. Please be patient with things.
Common Questions:
Why does GCA Launchers Adaptive icons behave so differently compared to the ones found in stock launchers?
-That is because the icons use a different mechanic and were made from scratch so everyone could enjoy adaptive icons and it not be exclusive to 7.1+ users. My icons can be modified from the icon to the shape override.
Can we get a launcher import option?
-No, not currently. Almost all launchers that exist use the base of Googles Launcher3 which adding an import option for them is easy. I would have to take the database, tear it apart, create a converter and place the data we need were it belongs. We are not there yet.
The System UI seems to behave differently from other apps.
-GCA Launcher has a theme engine similar to pixel launcher and trys to make the choice of a light or dark navbar or statusbar. Using Android10s dark mode may confuse things but eventually il have it all sorted out.
The launcher interface isn't what I expected. Shouldn't it behave like pixel launcher?
-No, it behaves like it should be. How it was designed.
Does it support quickswitch?
-It never will unless Google changes the api for the recents provider. I blame the lawnchair team of this common question as many users have assumed this is a premium feature now and should be supported by all launchers now which isn't the case.
Does this launcher support dark mode from android10?
-yes but we have some work todo yet
Why do things look weird in the launcher settings? Preference category is hard to read and matches the toolbar color.
-Try changing the color scheme in the style settings. This is the GCA theme engine at work.
Ratings:
If you post a rating for GCA Launcher coming from V1, more than likely i will dis regard it. V1 is being deprecated soon and all bugs and errors you will find in V1 on the playstore are being disregarded. V2 is a rewrite with new features and new bugs.
I updated the build earlier to fix something for Android 8 users and ended up screwing something up for Android 9 users so il be keeping tabs on everything as much as possible but I will not be able to do anything if no one says anything. Please provide feedback as much as possible. Thank you in advanced.
Those of you keeping me informed of crashes, thank you, thank you, thank you
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
Shelf apps can be changed by long clicking on a Shelf favorite and their will be a Favorite option to select a different package. This option isn't available in the App Drawer apps so it might be easy to miss.
When changing the icon sizes, make sure your changing the icon size and bot just the text size. Both options are in one dialog.
Id your having a hard time switching out your default launcher, you can use my No'Me app i have listed above. It helps alot.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceTested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.Quote:
Originally Posted by Gooldy Games
Once and for all. Remember one thing. You should integrate analytics services into your app to get prorper information and on time.
30 is rather good but the amount of marks rarely indicates the amount of downloads. I would suggest 100-500 in your case.
You would suggest 100 - 500 of what in his case? Downloads?
Usually, you can expect that less than 0,5% of the users will review your app, and that 1 - 3% will give you the rating. Top games (Clash of Clans) get up to 10% ratings. But with such a low data, anything could happen. Also, many things could affect them:
- have you reviewed your app? With 30 reviews, your review is 3,3% of all your reviews...
- have your friends or family reviewed your app?
- have you asked people to review your app?
Anyway, good indicator would be to check how many impressions have you generated. Ad providers are much quicker with their dashboard updates. Also, integrating Google Analytics or Flurry could give you detailed insight in your users count, session length etc.
If you got 30 unincentivised reviews from general audience (not your facebook friends etc) it would mean you are most likely in 5000+ downloads range. But I guess you got these reviews from your friends or people that are somewhat familiar with you, and you are in 100 - 500 downloads range. Anyway, you can't expect any detailed and accurate data with such a low reviews count.General Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsThe ASUS ROG Phone II is a 6.59: phone with a 1080x2340p resolution display that runs at 120Hz. The Snapdragon 855 Plus is paired with 12GB of RAM and 256/512GB of storage. The main camera is 48+13MP and the selfie camera is 24MP. The battery has a 6000mAh capacity.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceUnofficial TWRP 3.4.0-* For Galaxy S10/e/+/5G Exynos
Disclaimer
I am not responsible for bricked devices, dead SD cards, thermonuclear war, or you getting fired because the alarm app failed.
Please do some research if you have any concerns about features included in this recovery before flashing it!
YOU are choosing to make these modifications, and if you point the finger at me for messing up your device, I will laugh at you.
Features:
- built from latest Android 10 kernel source - built from android-9.0 recovery sources - built in full 64 mode - toybox/busybox support - compatible only with Android 10.0
Instructions:
Prerequisites: Samsung USB drivers, Odin v3.14.1
If you already have the bootloader unlocked you can skip to step 6.
- Make sure OEM Unlock is ON in developer settings;
- Turn off the phone;
- Use vol down + bixby key + usb cable plugged to a pc to start the phone in download mode;
- Long press vol up then confirm you want to unlock bootloader (this is needed one time only);
* Please be aware all your data will be erased including internal storage and phone will reboot!!
- Let the phone boot normally, pass the setup and connect to internet (wireless or mobile data) in order to unlock RMM;
- Make sure OEM Unlock is ON in developer settings;
- Turn off the phone;
- Use vol down + bixby key + usb cable plugged to a pc to start the phone in download mode, short press vol up to confirm you want to go to download mode;
* If by any chance you see RMM state=Prenormal or KG state=Prenormal, redo from step 5!
- Download appropriate TWRP tar file according to your device (beyond0lte - G970F/G970N, beyond1lte - G973F/G973N, beyond2lte - G975F/G975N), beyondx - G977B/G977N
- Open Odin v3.14.1 and place the downloaded TWRP .tar file in AP tab and click Start - once you press start grab the phone and press vol up + bixby + power to force it boot straight in TWRP after flashing
- In TWRP home screen press wipe - format data - yes
If you already have TWRP installed, download .img file according to instructions from step 9 from above, and install from your current TWRP with Install image - browse to image location and select - Recovery
Sources:
- Device trees - beyond0lte / beyond1lte / beyond2lte / beyondx
- Kernel - https://github.com/corsicanu/android...ee/android-9.0
- Recovery - https://github.com/omnirom/android_bootable_recovery
- TeamWin, geiti94, jesec, dyneteve, ianmacd, testers, donors and anyone else involved in making this possibleHello there! Welcome to our Real Life Review section for Samsung Galaxy Tab A series. Here we let the XDA
community vote on and review the various facets of a device. So jump in, contribute some ratings
& reviews. Just no iPhone jokes, kay?
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Moto G 2015
is Motorola's 3rd generation Moto G. Released in July 2015, the mid-range Moto G features a 720p 5" IPS LCD display, 13MP rear camera and 5MP front facing camera. It's powered by 1.4GHz quad-core Qualcomm Snapdragon 410 processor. It comes in two variants, one with 1GB of RAM and 8GB internal storage, the other with 2GB RAM and 16GB internal storage. Both support up to 32GB microSD cards. The Moto G runs on a 2470mAh battery.
On the exterior, the Moto G features IPX7 certification, meaning it's water resistant up to 1 meter and 30 minutes. Click on to see full specs for the Moto G 2015.- zip version error
Just delete compatibility.zip in the rom zip.
- TWRP error 7
This error is related to the previous one, just redownload the ROM and delete compatibility.zip again but don't use WinRAR to do it, please use other utility (ex 7-zip) problem solved.
Hope this guide helpsv20.2
- [MagiskSU] Properly handle communication between daemon and application (root request prompt)
- [MagiskInit] Fix logging in kmsg
- [MagiskBoot] Support patching dtb/dtbo partition formats
- [General] Support pre-init sepolicy patch in modules
- [Scripts] Update magisk stock image backup format
v20.1
- [MagiskSU] Support component name agnostic communication (for stub APK)
- [MagiskBoot] Set proper header_size in boot image headers (fix vbmeta error on Samsung devices)
- [MagiskHide] Scan zygote multiple times
- [MagiskInit] Support recovery images without /sbin/recovery binary. This will fix some A/B devices unable to boot to recovery after flashing Magisk
- [General] Move acct to prevent daemon being killed
- [General] Make sure "--remove-modules" will execute uninstall.sh after removal
v20.0
- [MagiskBoot] Support inject/modify mnt_point value in DTB fstab
- [MagiskBoot] Support patching QCDT
- [MagiskBoot] Support patching DTBH
- [MagiskBoot] Support patching PXA-DT
- [MagiskInit] [2SI] Support non A/B setup (Android 10)
- [MagiskHide] Fix bug that reject process names with ":"
- [MagicMount] Fix a bug that cause /product mirror not created
v19.4
- [MagiskInit] [SAR] Boot system-as-root devices with system mounted as /
- [MagiskInit] [2SI] Support 2-stage-init for A/B devices (Pixel 3 Android 10)
- [MagiskInit] [initramfs] Delay sbin overlay creation to post-fs-data
- [MagiskInit] [SARCompat] Old system-as-root implementation is deprecated, no more future changes
- [MagiskInit] Add overlay.d support for root directory overlay for new system-as-root implementation
- [MagiskSU] Unblock all signals in root shells (fix bash on Android)
- [MagicMount] Support replacing files in /product
- [MagiskHide] Support Android 10's Zygote blastula pool
- [MagiskHide] All random strings now also have random length
- [MagiskBoot] Allow no recompression for ramdisk.cpio
- [MagiskBoot] Support some weird Huawei boot images
- [General] Add new "--remove-modules" command to remove modules without root in ADB shell
- [General] Support Android 10 new APEX libraries (Project Mainline)
v19.3
- [MagiskHide] Hugely improve process monitor implementation, hopefully should no longer cause 100% CPU and daemon crashes
- [MagiskInit] Wait for partitions to be ready for early mount, should fix bootloops on a handful of devices
- [MagiskInit] Support EROFS used in EMUI 9.1
- [MagiskSU] Properly implement mount namespace isolation
- [MagiskBoot] Proper checksum calculation for header v2
v19.2
- [General] Fix uninstaller
- [General] Fix bootloops on some devices with tmpfs mounting to /data
- [MagiskInit] Add Kirin hi6250 support
- [MagiskSU] Stop claiming device focus for su logging/notify if feasible
This fix issues with users locking Magisk Manager with app lock, and prevent
video apps get messed up when an app is requesting root in the background.
v19.1
- [General] Support recovery based Magisk
- [General] Support Android Q Beta 2
- [MagiskInit] New sbin overlay setup process for better compatibility
- [MagiskInit] Allow long pressing volume up to boot to recovery in recovery mode
- [MagicMount] Use proper system_root mirror
- [MagicMount] Use self created device nodes for mirrors
- [MagicMount] Do not allow adding new files/folders in partition root folder (e.g. /system or /vendor)
v19.0
- [General] Remove usage of magisk.img
- [General] Add 64 bit magisk binary for native 64 bit support
- [General] Support A only system-as-root devices that released with Android 9.0
- [General] Support non EXT4 system and vendor partitions
- [MagiskHide] Use Zygote ptracing for monitoring new processes
- [MagiskHide] Targets are now per-application component
- [MagiskInit] Support Android Q (no logical partition support yet!)
- [MagiskPolicy] Support Android Q new split sepolicy setup
- [MagiskInit] Move sbin overlay creation from main daemon post-fs-data to early-init
- [General] Service scripts now run in parallel
- [MagiskInit] Directly inject magisk services to init.rc
- [General] Use lzma2 compressed ramdisk in extreme conditions
- [MagicMount] Clone attributes from original file if exists
- [MagiskSU] Use ACTION_REBOOT intent to workaround some OEM broadcast restrictions
- [General] Use skip_mount instead of auto_mount: from opt-in to opt-out
v18.1
- [General] Support EMUI 9.0
- [General] Support Kirin 960 devices
- [General] Support down to Android 4.2
- [General] Major code base modernization under-the-hood
v18.0
- [General] Migrate all code base to C++
- [General] Modify database natively instead of going through Magisk Manager
- [General] Deprecate path /sbin/.core, please start using /sbin/.magisk
- [General] Boot scripts are moved from <magisk_img>/.core/<stage>.d to /data/adb/<stage>.d
- [General] Remove native systemless hosts (Magisk Manager is updated with a built-in systemless hosts module)
- [General] Allow module post-fs-data.sh scripts to disable/remove modules
- [MagiskHide] Use component names instead of process names as targets
- [MagiskHide] Add procfs protection on SDK 24+ (Nougat)
- [MagiskHide] Remove the folder /.backup to prevent detection
- [MagiskHide] Hide list is now stored in database instead of raw textfile in images
- [MagiskHide] Add "--status" option to CLI
- [MagiskHide] Stop unmounting non-custom related mount points
- [MagiskSU] Add FLAG_INCLUDE_STOPPED_PACKAGES in broadcasts to force wake Magisk Manager
- [MagiskSU] Fix a bug causing SIGWINCH not properly detected
- [MagiskPolicy] Support new av rules: type_change, type_member
- [MagiskPolicy] Remove all AUDITDENY rules after patching sepolicy to log all denies for debugging
- [MagiskBoot] Properly support extra_cmdline in boot headers
- [MagiskBoot] Try to repair broken v1 boot image headers
- [MagiskBoot] Add new CPIO command: "exists"
v17.3
- [MagiskBoot] Support boot image header v1 (Pixel 3)
- [MagiskSU] No more linked lists for caching su_info
- [MagiskSU] Parse command-lines in client side and send only options to daemon
- [MagiskSU] Early ACK to prevent client freezes and early denies
- [Daemon] Prevent bootloops in situations where /data is mounted twice
- [Daemon] Prevent logcat failures when /system/bin is magic mounting, could cause MagiskHide to fail
- [Scripts] Switch hexpatch to remove Samsung Defex to a more general pattern
- [Scripts] Update data encryption detection for better custom recovery support
v17.2
- [ResetProp] Update to AOSP upstream to support serialized system properties
- [MagiskInit] Randomize Magisk service names to prevent detection (e.g. FGO)
- [MagiskSU] New communication scheme to communicate with Magisk Manager
v17.0/17.1
- [General] Bring back install to inactive slot for OTAs on A/B devices
- [Script] Remove system based root in addon.d
- [Script] Add proper addon.d-v2 for preserving Magisk on custom ROMs on A/B devices
- [Script] Enable KEEPVERITY when the device is using system_root_image
- [Script] Add hexpatch to remove Samsung defex in new Oreo kernels
- [Daemon] Support non ext4 filesystems for mirrors (system/vendor)
- [MagiskSU] Make pts sockets always run in dev_pts secontext, providing all terminal emulator root shell the same power as adb shells
- [MagiskHide] Kill all processes with same UID of the target to workaround OOS embryo optimization
- [MagiskInit] Move all sepolicy patches pre-init to prevent Pixel 2 (XL) boot service breakdown
v16.7
- [Scripts] Fix boot image patching errors on Android P (workaround the strengthened seccomp)
- [MagiskHide] Support hardlink based ns proc mnt (old kernel support)
- [Daemon] Fix permission of /dev/null after logcat commands, fix ADB on EMUI
- [Daemon] Log fatal errors only on debug builds
- [MagiskInit] Detect early mount partname from fstab in device tree
v16.6
- [General] Add wrapper script to overcome weird LD_XXX flags set in apps
- [General] Prevent bootloop when flashing Magisk after full wipe on FBE devices
- [Scripts] Support patching DTB placed in extra sections in boot images (Samsung S9/S9+)
- [Scripts] Add support for addon.d-v2 (untested)
- [Scripts] Fix custom recovery console output in addon.d
- [Scripts] Fallback to parsing sysfs for detecting block devices
- [Daemon] Check whether a valid Magisk Manager is installed on boot, if not, install stub APK embedded in magiskinit
- [Daemon] Check whether Magisk Manager is repackaged (hidden), and prevent malware from hijacking com.topjohnwu.magisk
- [Daemon] Introduce new daemon: magisklogd, a dedicated daemon to handle all logcat related monitoring
- [Daemon] Replace old invincible mode with handshake between magiskd and magisklogd, one will respwan the other if disconnected
- [Daemon] Support GSI adbd bind mounting
- [MagiskInit] Support detecting block names in upper case (Samsung)
- [MagiskBoot] Check DTB headers to prevent false detections within kernel binary
- [MagiskHide] Compare mount namespace with PPID to make sure the namespace is actually separated, fix root loss
- [MagiskSU] Simplify su_info caching system, should use less resources and computing power
- [MagiskSU] Reduce the amount of broadcasting to Magisk Manager
- [ImgTool] Separate all ext4 image related operations to a new applet called "imgtool"
- [ImgTool] Use precise free space calculation methods
- [ImgTool] Use our own set of loop devices hidden along side with sbin tmpfs overlay. This not only eliminates another possible detection method, but also fixes apps that mount OBB files as loop devices (huge thanks to dev of Pzizz for reporting this issue)
v16.4
- [Daemon] Directly check logcat command instead of detecting logd, should fix logging and MagiskHide on several Samsung devices
- [Daemon] Fix startup Magisk Manager APK installation on Android P
- [MagiskPolicy] Switch from AOSP u:r:su:s0 to u:r:magisk:s0 to prevent conflicts
- [MagiskPolicy] Remove unnecessary sepolicy rules to reduce security penalty
- [Daemon] Massive re-design /sbin tmpfs overlay and daemon start up
- [MagiskInit] Remove magiskinit_daemon, the actual magisk daemon (magiskd) shall handle everything itself
- [Daemon] Remove post-fs stage as it is very limited and also will not work on A/B devices; replaced with simple mount in post-fs-data, which will run ASAP even before the daemon is started
- [General] Remove all 64-bit binaries as there is no point in using them; all binaries are now 32-bit only.
Some weirdly implemented root apps might break (e.g. Tasker, already reported to the developer), but it is not my fault
- [resetprop] Add Protobuf encode/decode to support manipulating persist properties on Android P
- [MagiskHide] Include app sub-services as hiding targets. This might significantly increase the amount of apps that could be properly hidden
v16.3
- [General] Remove symlinks used for backwards compatibility
- [MagiskBoot] Fix a small size calculation bug
v16.2
- [General] Force use system binaries in handling ext4 images (fix module installation on Android P)
- [MagiskHide] Change property state to disable if logd is disabled
v16.1
- [MagiskBoot] Fix MTK boot image packaging
- [MagiskBoot] Add more Nook/Acclaim headers support
- [MagiskBoot] Support unpacking DTB with empty kernel image
- [MagiskBoot] Update high compression mode detection logic
- [Daemon] Support new mke2fs tool on Android P
- [resetprop] Support Android P new property context files
- [MagiskPolicy] Add new rules for Android P
v16.0
- [MagiskInit] Support non skip_initramfs devices with slot suffix (Huawei Treble)
- [MagiskPolicy] Add rules for Magisk Manager
- [Compiler] Workaround an NDK compiler bug that causes bootloops
v15.4
- [MagiskBoot] Support Samsung PXA, DHTB header images
- [MagiskBoot] Support ASUS blob images
- [MagiskBoot] Support Nook Green Loader images
- [MagiskBoot] Support pure ramdisk images
- [MagiskInit] Prevent OnePlus angela sepolicy_debug from loading
- [MagiskInit] Obfuscate Magisk socket entry to prevent detection and security
- [Daemon] Fix subfolders in /sbin shadowed by overlay
- [Daemon] Obfuscate binary names to prevent naive detections
- [Daemon] Check logd before force trying to start logcat in a loop
v15.3
- [Daemon] Fix the bug that only one script would be executed in post-fs-data.d/service.d
- [Daemon] Add MS_SILENT flag when mounting, should fix some devices that cannot mount magisk.img
- [MagiskBoot] Fix potential segmentation fault when patching ramdisk, should fix some installation failures
v15.2
- [MagiskBoot] Fix dtb verity patches, should fix dm-verity bootloops on newer devices placing fstabs in dtb
- [MagiskPolicy] Add new rules for proper Samsung support, should fix MagiskHide
- [MagiskInit] Support non skip_initramfs devices using split sepolicies (e.g. Zenfone 4 Oreo)
- [Daemon] Use specific logcat buffers, some devices does not support all log buffers
- [scripts] Update scripts to double check whether boot slot is available, some devices set a boot slot without A/B partitions
v15.1
- [MagiskBoot] Fix faulty code in ramdisk patches which causes bootloops in some config and fstab format combos
v15.0
- [Daemon] Fix the bug that Magisk cannot properly detect /data encryption state
- [Daemon] Add merging /cache/magisk.img and /data/adb/magisk_merge.img support
- [Daemon] Update to upstream libsepol to support cutting edge split policy custom ROM cil compilations
v7.5.0
- Support new MagiskSU communication method (ContentProvider)
- Fix several issues with hidden stub APK
- Support using BiometricPrompt (face unlock)
v7.4.0
- Hide Magisk Manager with stub APKs on Android 9.0+
- Allow customizing app name when hiding Magisk Manager
- Generate random keys to sign the hidden Magisk Manager to prevent signature detections
- Fix fingerprint UI infinite loop
v7.3.5
- Sort installed modules by name
- Better pre-5.0 support
- Fix potential issues when patching tar files
v7.3.4
- App is now fully written in Kotlin!
- New downloading system
- Add new "Recovery Mode" to Advanced Settings
v7.3.0/1/2
- HUGE code base modernization, thanks @diareuse!
- More sweet changes coming in the future!
- Reboot device using proper API (no more abrupt reboot)
- New floating button in Magisk logs to go to bottom
v7.2.0
- Huge UI overhaul
- More sweet changes coming in the future!
v7.1.2
- Support patching Samsung AP firmware
- Much better module downloading mechanism
v7.1.1
- Fix a bug that causes some modules using new format not showing up
v7.1.0
- Support the new module format
- Support per-application component granularity MagiskHide targets (only on v19+)
- Ask for fingerprint before deleting rules if enabled
- Fix the bug that causes repackaging to lose settings
- Several UI fixes
v7.0.0
- Major UI redesign!
- Render Markdown natively (no more buggy WebView!)
- Support down to Android 4.1 (native Magisk only support Android 4.2 though)
- Significantly improve Magisk log disply performance
- Fix post OTA scripts for A/B devices
- Reduce memory usages when verifying and signing boot image
- Drop support for Magisk lower than v18.0
v6.1.0
- Introduce new downloading methods: no longer uses buggy system Download Manager
- Introduce many new notifications for better user experience
- Add support for Magisk v18.0
- Change application name to "Manager" after hiding(repackaging) to prevent app name detection
- Add built-in systemless hosts module (access in settings)
- Auto launch the newly installed app after hiding(repackaging) and restoring Magisk Manager
- Fix bug causing incomplete module.prop in modules to have improper UI
v6.0.1
- Update to use new online module's organizing method
- When fingerprint authentication is enabled, toggling root permissions in "Superuser" section now requires fingerprint beforehand
- Fix crashes when entering MagiskHide section on some devices
- Remove support to Magisk version lower than v15.0
- Ask storage permissions before patching stock boot image
- Update dark theme CardView color
v6.0.0
- Update to latest AndroidX support library
- Fix crashes when online repos contain incomplete metadata
- Optimize BootSigner to use as little memory as possible, prevent OutOfMemoryError
- Support new communication scheme between Magisk v17.2 and Magisk Manager
- Enable excessive obfuscation to prevent APK analysis root detections (still not 100% obfuscated due to backwards compatibility with stable channel)
Magisk-v7 is quite a significant update compared to v6. A lot has changed, new features are added, and improved compatibility a lot, especially in selinux issues.
Open Source!
My previous releases has some controversy due to the fact that I included closed source property with unexpected intentions. I had worked hard to create/improve open source tools, so that they can fit my own needs. Magisk is now 100% open source, including the binary it uses.
Brand New Magisk Manager
The Magisk Manager is completely a different application compared to the previous crappy app. It has now packed with features, and it is now part of the core experience of Magisk itself. New features and improvements are still planned, so stay tuned in this application's development!
Repo System, Module Management
We've been putting a lot of effort into constructing this repo system. This change is to make installing Magisk Modules a lot more easier. What I'm aiming is to make Magisk something like Xposed, an interface and a platform for developers to work on. Providing a repo system is a good step towards the goal, as it makes installing new stuffs and receiving updates super simple. I also drastically simplified the Magisk Module template. Right now, I believe anyone with basic knowledge can create their own Magisk Module easily. Changing a few values into a config file should make porting existing mods to Magisk much easier.
Safety Net
My decision to remove root management from Magisk seems to cause some debate. People might wonder why I would remove such feature that made Magisk so popular. Well, I have to emphasize again, Magisk is never meant for bypassing Safety Net. The Xposed and root bypasses are some fun projects that I'm messing with what Magisk is capable of. One of the two main reasons I dropped this feature in Magisk is
1. Xposed is no longer working with Safety Net enabled. I had tried to bypass it with some mounting tricks and process killing, but all of those are not able to fix the issue. Soon suhide is available and it is able to bypass Xposed had made me really frustrated, as I do not want to keep working on a "not complete solution".
2. On the open source side, phh is also developing his own "suhide". phh just released a test build for hiding root (link to his test build), I'm gonna take a look and include it into the Magisk version of phh root.
These two methods are much better than the one I was using. It doesn't need a toggle, it is per app basis, and many more. Also, I'm not creating a root solution, I'm creating an interface that root solutions can rely on. So I decide to give the hiding root "responsibility" to the root solutions, not managed by the interface, Magisk, itself.
Just to let all of you know, one of Magisk Manager's future feature will be a GUI to manage these two root hiding solutions. It will need some time to develop, and I also wanted to do some things in the core Magisk side to add this support natively. So please don't be pissed that I dropped the whole root management thing. It is for a bigger plan
Due to a bug in the template zip, there will be issues flashing the zip files if the path has spaces.
This commit in magisk-module-template should fix the issue.
All repos online is updated with this fix, developers please include this patch into your modules.
2016.10.19 Magisk v8
This release is aimed for bug fixes, and most importantly the ability to hide itself from Safety Net's detection.
Template Cache Module Fix
Due to a bug in the template script, if your module is a cache module, your scripts might not be executed correctly, also flashing in Magisk Manager will cause the UI to break.
This particular commit is the fix, only cache modules are needed to be updated, other modules are working fine.
Search Bar in Download Section
Magisk Manager 2.1 brings search bar to the "Downloads Section", so that it's easier to find a module once the list gets too long.
SuperSU Integration
In the previous release (v7), I decided to automatically convert SuperSU into a Magisk module while installing Magisk. In this release (v8), I make Magisk 100% compatible with SuperSU out of box, not needed to modify how SuperSU work in anyway. For v8 and future releases, Magisk will detect SuperSU patched boot image, and only add the required additional patches to the boot image.
Also, I created further integration for Magisk and SuperSU: Magisk will create a script placed in /data/custom_ramdisk_patch.sh when SuperSU detected. What this means is that the next time you upgrade SuperSU by flashing SuperSU zip in custom recovery, Magisk will automatically be injected. You can also apply OTA updates with FlashFire, and enable SuperSU injection, which will also inject Magisk on-the-go!
For users that was using v7 with SuperSU along with the Helper Module, please manually restore your boot image (should be stored in /data/stock_boot.img), and flash the latest SuperSU, then flash Magisk-v8.
Magisk Hide
This feature should've been released a few weeks ago, but university is killing me lately; overwhelming schoolwork prevents me to finalize the tool, so please pardon my absence and lack of support. But it's still better late than nothing .
In the weeks I have been inactive, Safety Net got a couple updates, each makes bypassing more of an hassle. Magisk v8 introduce "Magisk Hide", the tool to properly hide Magisk, preventing Magisk to break Safety Net features. What it can do is hide all Magisk modules' files and mounts from target processes (e.g. Safety Net), including Magisk compatible phh root maintained by myself.It cannot hide SuperSU, it cannot hide Xposed. If you want to hide any of them, please use suhide developed by Chainfire.
It should not cause issues as I have been testing quite some while, but if you replace some files with Magisk (known: /system/etc/customize/ACC/default.xml), Google Play Service will constantly crash. Due to this fact, this feature is not enabled by default. You have to manually enable it in the settings of Magisk Manager v2.1 after you upgraded to Magisk v8, and reboot to apply the settings.
Right now, you can manage your own hide list with ways similar to suhide, no GUI:
Code:
(All commands should be run in a root shell)
# Show current list
/magisk/.core/magiskhide/list
# Add new process (the package name should work fine)
/magisk/.core/magiskhide/add <process name or package name>
# Remove a process (might need a reboot to make an effect)
/magisk/.core/magiskhide/rm <process name or package name>
The process com.google.android.gms.unstable (Safety Net) will always automatically be added to the list if Magisk Hide is enabled, so if you just want to bypass Safety Net, just enable in Magisk Manager and you're good to go.
Safety Net - The Already Lost Cat-And-Mouse Game
Keep in mind, in the latest update of Safety Net that just happened in a few hours, Google seems to step up the game, and it might got to the point that no modifications are allowed, and might be impossible to bypass.
Currently on my HTC 10, no matter what I did to the boot image, even just a repack of 100% stock boot image, Safety Net will not pass under any circumstances. On the other hand, my Nexus 9 running stock Nougat seems bypass without issues, with root and modules all enabled and working fine. The boot verification might vary from one OEM to another, HTC's implementation might just be one of the first included into Safety Net, but eventually all major OEMs' method will be included, and at that time I think any Android "mod", including custom kernels, will pretty much break Safety Net. These verification should be coded deep into the bootloader, which is not that easy to crack. So the conclusion is that I will not spend that much time bypassing Safety Net in the future.
The attachment is a screenshot about where to enable Magisk Hide in the app
I spend some time playing with the possibility of Universal MultiROM by only using Magisk.
Surprisingly, it is not that difficult at all! Here is a small POC video demonstrating my HTC 10 dual booting stock rom and CM 13.
No other dependency is required (e.g. modified TWRP recovery, kext kernel patch etc.). You only need Magisk injected into the boot image, and along with proper settings, by swapping out the boot image, you can load any rom systemless-ly.
What this means is that all Magisk supported device can enjoy MultiROM features! What a great news for flashaholics LOL.
NOTE! The process showed in this video in far from what it will be eventually. I will make the process nice and smooth
2016.11.14 Magisk v9
This release comes with significant updates and changes, doing adjustments to pave the road for the next major update v10: the update with Multirom support!
Please spend some time reading this lengthy release note, the most important information are included in quotes, or bolded and colored in RED.
Also, many other fixes not mentioned here are listed in the changelog.
The End of Cache (post-fs) Modules
This shall be the biggest change for this update. One of Magisk's cool feature is that it can mount files before data and build.prop is loaded (post-fs). Most modules only uses this advantage to modify read-only props (e.g. DPI, fake device model etc.) without modifying build.prop, however with a new tool included in this release (will be introduced in the next section), dealing things in post-fs is not needed anymore.
Instead of having both "Cache Modules" and "Normal Modules" at the same time, confusing both developers and users, creating complexity in module management, the decision is made that "Cache Modules" are no longer supported after this update.
How about some features that require mounting in post-fs mode (known: Changing Boot Animation)? No worries, post-fs mode is still there (as Multirom will depend on this), I only removed the interface for modules.
Quote:
Magisk no longer let you install cache modules, you have to manually add the files you want to replace, which is actually super easy.
You can place your new files into the corresponding location under /cache/magisk_mount, Magisk will automagiskally manage selinux contexts, permissions and the mounting for you.
For example, you want to replace /system/media/bootanimation.zip, copy your new boot animation zip to /cache/magisk_mount/system/media/bootanimation.zip with any root explorer, Magisk will mount your files in the next reboot.
remove all installed cache modules under /cache/magisk, which is the previous path where cache modules locate.
Further more, to push developers to upgrade their cache modules, the latest Magisk Manager (v2.5) will filter out cache modules, which means cache modules available in the Magisk repo are NOT shown under the "Download" section in Magisk Manager.
Cache Module developers please refer to the following instructions to update your current module:
Take a look at the changes in this commit (if you're famlier with git, you can just cherry pick this commit, and deal with some minor merge conflicts)
Check the "resetprop" section to understand how to change props without using a cache module, and update your modules accordingly. For example, if you want to replace the build.prop, you no longer need to enable "automount", or bind mount the file manually in your script, as nothing will load it again.; instead, you should enable post-fs-data script, and read your new build.prop file with proper commands. If you want to change certain prop values, just switch from post-fs script to post-fs-data script, and instead of calling "setprop", please call "/data/magisk/resetprop" to set your props.
Remember to remove the "cacheModule" entry or set to false in the module.prop file, or else your module will never show up in the Magisk Download section in the Magisk Manager!
New Badass Tool - resetprop
To be honest, this tool itself deserves a new thread on XDA, as it is super powerful and super cool.
"resetprop", originally named "xsetprop", was initially developed by @nkk71 to bypass the crazy tough detections for Safety Net. Developers found method to bypass the check by modifying the kernel source code, which served the need but the solution is far from perfect as it requires the source code to be available and kernel compiling.
The tool was originally made to directly modify the system prop database. With seeing the potential of this tool, I contacted @nkk71 and start collaborating together, which brings the original simple tool into a full-fledged, all-in-one prop management tool.
Here are some technical details:
System props are handled by "init", a binary located in the ramdisk which starts right after kernel is loaded. "props" are supposed to only have a single writer, and multiple reader, which means only the process "init" has the full control to the prop database. We modify the props (by calling setprop) through an interface called property_service, which will pass the request to init; property_service also handles the triggering of "events" that should be triggered by a prop change. What read-only props means is that property_service will block all requests for modifying props starting with "ro.", as those props are not allowed to be changed once set. To overcome this difficulty, we can mimic how init behaves by directly modifying the trie structured database. However we will not be able to trigger events, as we completely skipped the property_service part. This might be ideal for SN bypasses, but not applicable for Magisk, as I want to load any prop, which should trigger some events to make some changes. So we went a step further and added a feature to "delete" a system prop! As a result, by directly deleting the prop entry in the database, then send a request to property_service, property_service will accept the request and trigger events if needed.
Quote:
The new tool - resetprop can modify/delete any system prop, including read-only props (prop names starting with "ro.")
You can also read a whole build.prop, overwriting all existing props. The binary will be installed to /data/magisk/resetprop.
Here are some examples for cache module developers to adapt to the new changes:
Code:
# Set any prop (with trigger)
/data/magisk/resetprop ro.sf.lcd_density 480
# Set any prop (without trigger)
/data/magisk/resetprop -n ro.crypto.state encrypted
# Delete any prop
/data/magisk/resetprop --delete magisk.version
# Read props from a prop file
/data/magisk/resetprop --file /magisk/somemod/new_build.prop
Magisk Hide - Greatly Improved
Another update to pass SN, please grab it before it expires lol
People started to panic when Google device to check boot loader / boot-verity etc. As stated in the previous section, resetprop fixes the issue easily with setting all detecting props to the valid values. However, more detection has been added. One of those is that simply adding Magisk directories into PATH will break Safety Net. Not sure if I should be glad because the word "magisk" is now officially on the tech giant's blacklist......
So in order to hide root (here I'm only referring Magisk phh superuser, as SuperSU users shall always rely on CF's suhide, not MagiskHide), I had to change the way things works.
Quote:
For the new changes that are required to NOT modify PATH, the phh's superuser has to be upgraded.Please make sure your phh superuser is upgraded to r266-2 (or any version higher).
Older version will NOT work with Magisk v9, please upgrade phh's su before upgrading.Also, along with the new Magisk Manager v2.5, we finally had an GUI to add/remove apps from the MagiskHide list!
Development
I added build.sh into the main Magisk repo, you can call the script and it will guide you with help messages.
Custom version names are supported, both in Magisk and Magisk Manager (if using custom name, update will disable)
So feel free to clone the repo and develop Magisk yourself! Pull requests are appreciated!
For Magisk Manager, you can provide translations for the app, just translate the strings, create a pull request, and I'll merge it into the main app, many thanks!
Those Pixels
I stated before that the new Google Pixel devices are using a complete different partition structure, as the ramdisk is now stored along with the system partition, and a kernel modification is inevitable.
Without much surprise, our mighty developer Chainfire had released a systemless root for Pixel devices. What it does in a nutshell is bringing back the ramdisk to the boot image, and still do modifications in the ramdisk (rootfs). However it still requires 1. custom init binary 2. binary patch directly to the kernel. If I decide to use the provided closed source solution, it shall not be difficult to port Magisk to the Pixels and start all the systemless craziness, but still I need an device to test and debug. In addition, I would love to see if I can create an open source tool to achieve similar results to make Pixel (which means maybe all future devices) running Magisk.
But the huge issue is: I live in Taiwan, and there is no sign that the Pixels will be available for purchase here, well at least not possible in 2016.
I could ask my buddy studying in the US to bring me one when he comes back at the Christmas vacations (which is still quite some time from now, but still better late than nothing.....), however the problem is that Pixel XLs (the model I prefer) are currently out of stock on the online Google Store, and I will never know if ordering now will make the package show up in my friend's place in time before he comes back to Taiwan.
Quote:
If anyone seeing this post has access/can purchase brand new Pixel XLs (anywhere should be OK), and possible to deliver them to Taiwan in a reasonable time and a reasonable shipping fee, please contact me and I'll be very happy.
Lastly, I just bought my new HTC 10 within a year. I'm just an university student, the money I earn from tuition could afford me the super expensive Pixel device, but any additional donation to support my open source development is highly appreciated . I'd be really happy that many people love my work!
Lack of Support
School have been super busy lately (getting the last metro to home nearly every day...), I have little if any time to spend on Android development. Another big factor is that I'm still waiting for my laptop to be repaired.
Sorry for all the private messages sending to my inbox, I've got way too many PMs that I'm not in the mood to read through dozens and dozens of them, since a large fraction of them are simply just asking for instructions for installing Magisk on their device.
I prefer REAL issues to be opened on Github, as I check them from time to time, and I can keep track of which are not yet resolved.
Build Friendly
I added build script for Unix-like systems (Linux and macOS) and also for Windows. I tested on all three platforms and all of them are working as expected. For people interested in the latest feature added to Magisk but not included into an official release yet, feel free to build it yourself. I automated the process that even people with no experience in NDK or scripting can build it easily.
Also for people willing to report bugs, please test Magisk built against the latest commit before opening issues on Github, thanks a lot!
Magisk Module Repo?
It has been a while since I last updated the Magisk Module Repo. I know there are a few requests for adding their own modules to the repo. I'm gonna change the way for requests to be handled from the current "posting in a request thread on XDA", to most likely handled through Github. When the new way for requests is decided, I'll add the current requests at once, and close the current thread.
I really appreciate every person who is interested in making a Magisk Module and willing to share it with others, once the new method is decided, the requests should be addressed in a timely manner.
Multirom? Updates?
I've spend my extremely limited free time to fix current Magisk issues, and so far (the latest commit on Github) it has improved a lot compared with the current v9 release.
I haven't really spend much time in the multirom feature, however I found an interesting open source project: DualBootPatcher.
It exists for quite a while, and it is very impressive just like the Multirom Tasssadar created. I haven't looked into how DualBootPatcher works, so I'm not sure if it is using similar tactics method that I switch between systems in a super simple way through Magisk.
2017.1.2 Magisk V10
Happy New Year! What is a better way to celebrate 2017 than a Magisk update
Another massive update!
Official Icon
Instead of using the picture grabbed online, the official Icon for Magisk is now live!
Magisk Hide Back On Stage
This is the most awaited fix, isn't it?
The issue of losing root is haunting since day 1 of the release of Magisk Hide, although it can be temporary recovered with a reboot, it is still quite annoying. I spend a lot of time trying to identify the reason, and soon found out that the issue is caused by MagiskHide reacting "too fast". Most processes starts from Zygote, and it requires a small period of time to isolate the mount namespace apart from Zygote. When MagiskHide reacts too quickly, it will unmount all mounts in the Zygote namespace, which literally means that all processes will lose the mounts (including root).
After adding checks and retries before switching namespaces, it leads to another issue: MagiskHide reacting "too slow". When critical files like framework is Magic Mounted, and the unmounting doesn't happen in time, it will break the SafetyNet checking process (Google Play Service FC), and can never recover until a reboot (or full restart of Google Play Service). I added tons of safety precautions (I won't go into the details here, it will be another few hundred of words), and I can "almost" eliminate all possible breakages.Due to the fact that Magisk Hide DOES NOT hijack app_process (Zygote), it can only react passively, so there is a limitation to the effectiveness.
The best practice is to NOT add a lot of apps in the blacklist of MagiskHide (managed in Magisk Manager), so that the MagiskHide daemon has the time to react.
Personally I only hide SafetyNet (the preset), and it passes all excessive tests without any issue. However my tester still managed to break it a few times when adding 6 additional apps, and having 10+ accounts syncing at the background all the time. So I guess it is good for most users lol
Magic Mount With No Limits
I'm glad to announce that starting from this update, Magic Mount can do ANYTHING! Thanks to the new mirror implementation and some workarounds in the algorithm, it can now handle adding files to /system root (and /vendor root if separate partition). Also thanks to the new MagiskHide, all mounting combinations can pass SafetyNet!
Magisk Powered Custom ROM: One Click to Custom ROM, Another Click You're Back to Stock
I am a member of an HTC custom ROM developer team - Team Venom, and without too much effort, The world's first Magisk Powered Custom ROM was born!
The advantage over traditional full packaged custom rom is that we ROM developers no longer need to port carrier features (Wi-Fi calling, VOLTE etc.) to our ROMs. Users can install Magisk on their stock devices, load the Custom ROM module, reboot and BOOM all done, along with 100% fully working carrier features. Also, it is just cool to load a custom ROM fully systemless, isn't it!
Developers in the HTC 10 community soon realized the "power of Magisk", and currently trying to push out more and more Magisk Custom ROM Modules.
I hope all developers feel the excitement, and port all stock modified custom ROM to be implemented with Magisk!
For ROM developers interested, please check the link and download the zip to get an idea how to create your own Magisk Custom ROM Module!
Magisk Can Now Root Your Device
I decided to fork the phh Superuser and start doing modifications. From Magisk v10 and after, Magisk will root your device with the bundled root if
a. No root installed b. Root that isn't Systemless SuperSU or older Magisk phh versions installed
Right now you still have to install the phh Superuser application, however the root management should move to Magisk Manager soon, please stay tuned.
Currently it is nearly the same as official phh root with only a few tweaks, but I might add more in the future.
Magisk Manager Now On Play Store
It seems that some already found out that Magisk Manager is now available on Play Store! All future updates will be pushed through Play Store.
Download links will still be posted here, since there are still places where Play Store isn't available.
Documentations Updated, Module Template Updated, New Repo Requests
The documentations here on XDA is pretty outdated, I updated them with more info to assist developers and users to create their own modules.
Module template is updated for an addition option to load a prop file.
Repo requests are also updated, please check out the new instructions!
I'm still dealing with my finals (got an exam tomorrow, and 3 more projects to do......), but the online repo is no longer accessible on Magisk Manager, which forces me to push out an update.
Apart from that critical bug fix, it also comes with a lot of updates and improvements, please check the changelog for further info.
Please update your Magisk Manager from Play Store. The direct link is also updated with the new v3.1 version
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceSimple. Multi-source. Accurate.
No more inconsistent weather reports, with Clyma
Clyma is a simple and clean weather app that uses multiple weather providers to source data, instead of just one, with consistency in mind.
Great. Another weather app. What's different?
Remember the last time you checked 3 different weather apps/sites and got 3 different results? Clyma was built to solve this inconsistency problem by using 3 separate reputed providers together (Dark Sky, OpenWeatherMap and WeatherBit) together to calculate an accurate value for the weather.
Download Clyma for free on Play Store: https://play.google.com/store/apps/d...eatheraverager.
Features:
- 3 reputed weather providers
No more inconsistency, with data sourced from 3 separate, independent and reputed weather providers (Dark Sky, OpenWeatherMap, Weatherbit).
- Weekly forecast
Daily weather forecast for the next 7 days so you can plan ahead for the whole week
- Clean, simple and beautiful design
Bold colours and dynamic animations for every weather condition for a pleasant surprise every time you check the weather.
- Multiple themes
Choose from multiple themes, including dark theme and black theme for OLED screens. Clyma also supports system-level dark theme on Android 10 and above.
- Homescreen widgets
Get the latest accurate weather right on your homescreen, in a total of 3 different sizes (Clyma Pro)
Screenshots
Planned feature updates:
Download Clyma: (coming soon to XDA Labs)
It's still early days for this app, and this being my second Android project after a long break, feedback is much appreciated. Feel free to send me any feedback here or at [email protected]
XDA:DevDB Information
Clyma Weather: Simple, Multi-source and Accurate, App for all devices (see above for details)
Contributors
KDB223
Version Information
Status: Stable
Current Stable Version: 1.3.0
Stable Release Date: 2020-06-01
Created 2020-04-27
Last Updated 2020-06-01XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWavelet
Headphone specific equalization
Introduction
Wavelet may be the most powerful equalizer for Android to date that doesn't require root or an unlocked bootloader. It is capable of processing audio system wide and supports optimal equalization settings for over 2400 headphones. That's way more headphones to choose from than the Sonarworks and Dirac android apps combined have to offer.
Supporting this many headphones has been made possible by Jaakko for letting me use his awesome AutoEq project. And a big thank you to Nemuritor01 for introducing me to the possibilities of audio customization in Android 9+ and some initial ideas.
Features
The app features a minimal UI with plenty of options for customization:
You can use AutoEq to equalize your headphones to the Harman standard. The graph visualizes the compensation applied.
There's a 9 band graphical equalizer you can use fine tune the result or set up when your headphones don't appear to be available in the database.
The effects section offers effects such as bass boost, virtualization and reverberation. There's a bass tuner option too to give your beats that little extra thump, or reduce bass if you're not a basshead.
At the bottom you can find the gain controls. There's a limiter allowing you to reduce dynamic range and a channel balance feature for when you find one channel playing too loud or if you just want to reduce the overall output volume.
Installation
Wavelet can be downloaded here from Google Play.
Features displayed vary on the mode you're using and what output device is connected.
I strongly recommend checking out the README and read up on legacy mode to help you get the best experience
XDA:DevDB Information
Wavelet, App for all devices (see above for details)
Contributors
pittvandewitt, Nemuritor01
Version Information
Status: Stable
Current Stable Version: 20.06
Stable Release Date: 2020-05-11
Created 2020-05-11
Last Updated 2020-06-13XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe OnePlus 8 Pro is a 6.78" phone with a 1440x3120p resolution display. The Qualcomm SM8250 Snapdragon 865 chipset is paired with 8/12GB of RAM and 128/256GB of storage. The main camera is 48+8+48+5MP and the selfie camera is 16MP. the battery has a 4510mAh capacity.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI owned Xperia S and I really loved the Cosmic Flow wallpaper.
I modded it so that it can work in the latest android version.
It's working fine on my Galaxy note 10+
I haven't tested it in android 11 though.
Enjoy.The Samsung Galaxy A50 is a 6.4" phone with a 1080x2340p resolution display. The Exynos 9610 Octa chipset is paired with 4/6GB of RAM and 64/128GB of storage. The main camera is 25+8+5MP and the selfie camera is 25MP. The battery has a 4000mAh capacity.I ask for help in translating Android app into French, German, Japanese, Chinese, Portuguese, Italian, Spanish.
It's very simple, just 120 words.
The application is completely free, without ads.
"ABC for Kids" is a very simple game that teaches young kids the order of letters in the English alphabet.
play.google.com/store/apps/details?id=com.tim4dev.abckids
(Sorry, I'm not allowed to insert links)
Text for translation is uploaded to ranslate.google.com
I will send invitations to e-mail.
Each assistant will be listed in the application in the "Credits" menu and in the app's description on Google Play.
Thanks.I've started working from home from March, and been in 3 different skills in less than 2 months, and probably, going to be in other one, and Im not getting the right feedback or instructions from my superiors about how to make my job correctly and not lose money or gettin punish for something I have not been taught
So I came with the idea to create an app in which I could select the primary data/options and then get the procedure/steps to solve my task without losing time (like a mini game to provide background info and then have the answer of what to do.
Ex of Primary Data: "Number of products to cancel", "Type of order: Pick up/Delivery", "Store of origin: Main/Other", "Costumer wants to cancel?: Yes/No"
After all the background data has been selected/stablished, text will appear to tell what are the steps to take according to the previous data entered.
Ex Answer Procedure: "Proceed to cancel the order, notify the dealer from the main store and proceed with the cancellation. Close the case"
So here goes the main question: What topics I must learn in order to be prepared to make this app as simple as possible with Android Studio? Is there any course that covers up this idea? What you guys suggests?
Thank you all in advance, hope to read how to find the info I need
Have a great day!
-This tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/This ROM has been tested on both SM-T510 (WiFi version) and SM-T515 (WiFi + LTE)
Any developers reading this and has the device with them and are interested in the project may contact me :
@midhunvnadh on Telegram
Not Working :-
I am trying to fix these.
Download Files
Download the Halium arm32 GSI file : from Here
(Optional) Download SamsungUSBTethering zip : from here
Ubports Patched Kernel : from here
Get all the above files copied to your External SD Card
Installation
WARNING : I am NOT responsible for any damage caused to your device
If you are following this post, please takeup full responsibility of your device.
Noobs at flashing ROM's can click here :https://telegra.ph/Installing-Ubuntu...T510T515-08-22
Thanks to @ahamshubham for making this
1.0 Flash STOCK Android 9.0 Pie on your device and install TWRP.
(Because not tested on STOCK Android 10.0)
1.5 Boot into TWRP and Wipe all except external SD. REBOOT to recovery.
2.0 On TWRP : Flash the Lineage 16.0 build. DON'T REBOOT.
3.0 On TWRP : Goto Install -> Install Image -> (Flash halium-boot.img) DON'T REBOOT.
4.0 On TWRP : Goto Install -> (Flash ubports_GSI_installer_V1-arm32.zip).
5.0 (Optional) : Goto Install -> (Flash samsung-usb-tethering.zip)
5.1 Reboot.
(Incase : unable to boot ? , boot into TWRP -> reboot -> system)
samsung-usb-tethering.zip is used to get an SSH console from device to PC. Credits to @erfanoabdi
Please report all the errors you encounter here.
Sources
- Kernel : https://github.com/midhunvnadh/andro...ung_gta3xlwifi
- Device Tree : https://github.com/midhunvnadh/devic...ung_gta3xlwifi
- GSI arm32 : https://github.com/midhunvnadh/andro..._halium_ubport
Donations are always appreciated : Just click herePlease forgive me as it's been a long time since I made/posted a stock based ROM as I have been mainly doing security research and dealing more with source code last few years.
Most seasoned Samsung users on here probably already know me and work that I have done so I won't waste time posting any "about me" stuff.
DISCLAIMER:
This ROM is still WIP (although fully functional) and based on Android R Beta 1ZTJA for G986U/U1/W. An unlocked BL is required to flash this ROM!
Features:
- Based on Stock R Beta 3 Build aka 1ZTJA.
- This is a full ODIN flashable tar (got tired of messing with update zips.)
- Disabled vbmeta
- Pretty heavily debloated
- Deknoxed
- Removed pesky recovery-from-boot.p which could cause boot loops.
- Currently only has SPR csc mods (will mod others in next build)
*Native call recording
*App Lock (forgot to push the app though so will fix in next build)
*Few others.. will post more specifics and give creds since I used the csc mod for exynos as a basis..
- Probably forgetting something but thhis is an initial build so will add more as time goes..
Instructions:
Note: The zip contains an instructions.txt that is more detailed.
Note 2: Zip contains the full firmware tar file which includes everything to be fully updated/on ztja. This means all bl files, modem, boot, recovery, super etc. so you can start from and build. Zip also contains files and instructions on how to obtain root.
- Backup your data if you must since this will wipe device!
- Put phone in dl mode and extract zip to pc somewhere.
- Open ODIN (INCLUDED IN ZIP) and in AP slot navigate to SamPWND.R3.v1-G986U1.tar and flash it.
- Device will reboot into stock ZTJA recovery where you will wipe data and reboot.
- Set up device and win?
Root Steps (optional):
Note: Since theres no sources for R yet theres no custom recovery. Also, Q based recovery will not work on R bootloaders as well as R there is no more /sbin so root needs to be flashed at this time.
- After you have flashed rom and everything is set up reboot back into DL mode.
- Open included ODIN and in AP slot navigate to the 1BTIF_BL_Files_and_LOS_Recovery.tar. Make sure auto reboot is NOT selected. Flash it.
- Once thats flashed hold vol down and power until screen turns off then immediately hold vol up and power until LOS recovery loads.
- However you want to flash magisk (I included Magisk.v21.0.zip) flash it.
* I do adb push magisk.zip /... Then select Install Update then install from root and select magisk zip...
- Reboot back into DL mode.
- In ODIn, select AP slot then navigate to 1ZTJA_BL_Files_and_1ZTJA_Stock_Recovery.tar and flash it.
- Device will boot back into ROM and you will now be rooted!
Steps are really quite simple if you have ever used ODIN.
It took a bit to put this together since all we have are update zips so I had to do a bit of trickery as well as had to build some binaries/tools to manually patch from 1BTIF to 1ZTJ3 to 1ZTJA to be able to have all the firmware images.
I will create a Telegram ROM support group soon where you can ask all the questions you want there (I am not at liberty to discuss unlocking bootloader on XDA so questions about this on here will either be ignored or will say I cant discuss. More info as to why will be posted in the support group or you can read the imcluded instructions.txt wink.wink).
ENJOY!
Shout Outs: @topjohnwu for Magisk of course @jesec for LOS Recovery
More shout outs coming soon!
Downloads will be in post 2.I have 3 official OnePlus 5 cases I would like to give away. They are the official Karbon, Ebony, and Rosewood cases. Image of the 3 cases: https://imgur.com/X9Cp6I8
They're unused and have just been sitting on my shelf for a while. I received them as part of the reviewer's kit but have no need for them. Rather than having them continue to sit on my shelf, I will give them away to anyone who wants them. The only catch is that you'll have to pay for shipping.
I will pack the cases in a padded envelope and send it to you if you live in the U.S. Just send me a DM if you're interested. I will give preference to RC/RD and other recognized members.
Cheers!
Case sent to Awkydee. Enjoy!The Asus ZenFone Max Pro M1 is a 5.99" phone with a 1080x1920p display. The Snapdragon 636 chipset is paired with 3/4/6GB of RAM and 32/64GB of storage. The main camera is 13+5MP for the 3/4GB model and 16+5MP for the 6GB model. The selfie camera is 8MP for the 3/4GB model and 16MP for the 6GB model. The battery has a 5000mAh capacity.Then, drop a comment if you have anything to add!
Register or Login with Google
Battery was good until yesterday, 8hrs SOT circa. Suddenly battery starts draining and can I barely reach 2,30 SOT. Any idea? No apps showed in battery page, the only app I downloaded yesterday was Textra SMS (Beta), but it's very strange that it can drains so much.
did you download the 911 patch? if so there are users reporting drainage issues over on the official oneplus forums. reporting that they drain 20-30% overnight when the phone is in airplane mode.
Yes I'm on 4.5.6 (aka 911 patch), I also noticed overheating, CPU is constantly around 40°c..My ip cams are intranet only. I use Chou's ip cam app to see and record at home as well as D-View Cam. My cams won't connect to DLink.
Is there any Android app that will connect by wifi in my home then export video to me on the Net so.I can see feed when I'm away?A successor to the original Droid, the Android-powered Droid X by Motorola for Verizon Wireless has HDMI high-definition output with optional cable, and 720p HD video recording capabilities. Released in July 2010, this highly anticipated phone was very popular with consumers There are a number of custom ROMs for this phone available in the forums below. This phone was succeeded by the Motorola Droid X2."Enable Google Pixel 3's Call Screening on Pixel 2 and Pixel [Root]" https://www.xda-developers.com/enabl...pixel-2-pixel/
Register or Login with Google
After about half and hour it's still not there. Have disabled 3 again. Thanks for the guide although I'm fairly sure Google have changed all that since. I'll have a look today.
Changing this flag to true might work, in conjunction with the guide on this thread.
I used to have those options available to me on the old version of dialer but on the modern versions I only see the attached.
Hmmm, that's odd, but maybe there's a server side thing that's disabled. I don't have any more ideas. Sorry it didn't work.
This should work on any device that is able to replicate the instructions here, there may be some things that I forget to mention that have an effect on if it works, just report back and I will try to add more details.
Tested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.
Ok so I just had the fun of going through each of the props parameters to see which one(s) caused my screen to dim. 3, 8 & 9 need to be disabled, else the screen goes dim.
I've just cleared the phone and play services data and now waiting to see if call screening appears..
Or do you think 3 and 9 need to be enabled?
it's funny i have tried this with multiple updates and didn't even notice but following the steps and then after i removed 3,8,and 9 i let it sit of course nothing happened but when i called up google assistant on my one plus 8 pro on open beta 1 this popped up.
So i guess it semi thinks it's the pixel 4xl lmao
Yeah, I actually ended up disabling all the changes, because of this. Google assistant doesn't work properly. There are ways to make it work as it should, but they come with their own issues. I've been watching to see if anyone comes up with a solution.There are two main ways to make money from mobile app.
One: you create an app and charge people for using it. You decide they should pay you through app purchase or in-app purchase. People usually don't buy an app unless it's very popular. So I suggest you offer in-app purchase. You can let them use one part of the app free (to make them like it) and pay money to use the app completely.
Two: you create a free app and allow advertisers to put their ad in your app. You and advertisers will work through a mediate platform. I have used 3 mobile ad platform: Admob, StartApp, Adsota. And I recommend Adsota & Admob. StartApp is ok but the 2 other two just work better for me,
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingIn this video review, the guy says (at 3:18) this tablet DOES NOT support an "active pen". I hope he is mistaken and just means it doesn't support specifically the "S pen". Should a universal active pen work with the Tab A8 T290? I think of buying the pen below, the manufacturer says it should work on any touch screen. The problem is that, if it doesn't work, I won't be able to return, I am in Italy and will send it to my niece in Brazil... so I have to make sure. Thanks if you can help!
PS.: Since I'm a new poster, links are blocked to prevent spam. Please, substitute (dot) for "."
Samsung Galaxy Tab A 8.0 SM-T290 Review: How Good Is It?
youtu (dot) be/9y-jXjp7IdA?t=198
AICase Active Stylus Pen, Penna Capacitiva Attiva Universale per Qualsiasi Touch Screen
amazon (dot) it/dp/B07KK7HJ8Q/?coliid=INIFVRM8I32TF&colid=3EWJ1C2WID35A&psc=1&re f_=lv_ov_lig_dp_it
Coincidently, I already have exactly the first cheaper Meko. I had bought it in order to save money and use it on my Windows Surface 3, it didn't work... I can in fact write a whole sentence with a lot of pain, but not really usable. The bigger soft tip is always responsive, but not nice for note taking. In the end, I had to spend more money and buy the Surface pen (which is very good). I've also tried the cheap Meko on an iPad, it works better, but not really good enough for note taking. I haven't tried it on an Android device, though.
Please let me know if the Meko with the battery works better.
Coincidently, I already have exactly the first cheaper Meko. I had bought it in order to save money and use it on my Windows Surface 3, it didn't work... I can in fact write a whole sentence with a lot of pain, but not really usable. The bigger soft tip is always responsive, but not nice for note taking. In the end, I had to spend more money and buy the Surface pen (which is very good). I've also tried the cheap Meko on an iPad, it works better, but not really good enough for note taking. I haven't tried it on an Android device, though.
Please let me know if the Meko with the battery works better.
Thanks for your answer.
Instead of smooth lines, it was just dots everywhere.
Unfortunately, and against my expectation, the battery-powered Meko pen performed worse! Instead of smooth lines, it was just dots everywhere.
On my iPad, though, it worked flawlessly.
I ended up returning both of the Meko pens.
Sent from my SM-G986U using Tapatalk
I guess it's a matter of luck, these styluses respond differently depending on the device.
I've been testing again the cheaper Meko Stylus (with no battery). These are the devices I've tried:
Surface 3 - very bad, not usable. 1 star.
iPad 4 - it could be used, but very painfully, not practical. 2 stars.
iPad 6 (2018) - very good, not great. It is usable to take important notes, like school notes. 4 stars.
Huawei P20 pro - very similar to iPad 6, responds very well. 4 stars.
Cheap Android phone (Leagoo) - very bad, 1 star.
I'm thinking of trying my luck on that "AICase Active Stylus Pen" (the one I put the link before, you can find in Amazon Italy)... it's an active stylus for 25 euros with a glove to rest the palm on the screen.
Thanks for you answer.... and please let me know if you find some good stylus for Samsung Tab A8 T290.
So you mean the battery-powered Meko worked well on your iPad but not on your other device? Which one is it? Would it be Samsung Tab A8?
I guess it's a matter of luck, these styluses respond differently depending on the device.
I've been testing again the cheaper Meko Stylus (with no battery). These are the devices I've tried:
Surface 3 - very bad, not usable. 1 star.
iPad 4 - it could be used, but very painfully, not practical. 2 stars.
iPad 6 (2018) - very good, not great. It is usable to take important notes, like school notes. 4 stars.
Huawei P20 pro - very similar to iPad 6, responds very well. 4 stars.
Cheap Android phone (Leagoo) - very bad, 1 star.
I'm thinking of trying my luck on that "AICase Active Stylus Pen" (the one I put the link before, you can find in Amazon Italy)... it's an active stylus for 25 euros with a glove to rest the palm on the screen.
Thanks for you answer.... and please let me know if you find some good stylus for Samsung Tab A8 T290.
On my Tab A, the disc one worked better than the battery one - 3 vs 1.
I found this pen on Amazon for the Tab A that has good reviews:
My "AICase Active Stylus" (from Amazon Italy) just arrived. It works very well, except that the glove that comes with it is useless, you can still use your finger to write with the glove on. I'm struggling to find some material that I can use to rest my palm... It's very uncomfortable to write without being able to rest your palm on the screen.
I would say it's a bit better than the passive Meko Stylus, especially for the iPad 4, which has an older screen. It has a metal tip, so you should have a screen protector to prevent scratches.
I've tried on these devices:
Surface 3 - doesn't work, it makes a few lines, but not good at all.
iPad 4 - works well enough
iPad 6 - very good, works a bit better than on the iPad 4
Huawei P20 pro - works similarly to iPad 6
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
What's the point when the phone charges to 50% in 30 mins?
What's the point when the phone charges to 50% in 30 mins?
This was my thought, if this case is more expensive than a Car Dash charge it'd be pointless for me! The battery life on this phone is just insane as it is, got 6hours SOT yesterday, I've NEVER gotten anything past 3/3.5 hours before.
This was my thought, if this case is more expensive than a Car Dash charge it'd be pointless for me! The battery life on this phone is just insane as it is, got 6hours SOT yesterday, I've NEVER gotten anything past 3/3.5 hours before.
What's the point when the phone charges to 50% in 30 mins?
When your phone is almost dead and there is no plug or you are traveling and need to charge it. Simple.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceIt's Cleaner
See more content, and fewer reminders that you were shopping for cat food last November.
Without ads, XDA feels like a fresh spring day.
It's Faster
Ads are a necessary evil, and unfortunately they slow down your experience, both on mobile and desktop.
So what do you get when you kill all the ads? A faster, lighter site.
It's Good for XDA
Why not just use AdBlock? That's totally your right! But realize that AdBlock doesn't help XDA. We
have multiple full-time developers and nearly 15 servers. Dat shiz ain't free! If you love XDA and want
ensure its future existence, consider getting XDA Ad-Free instead of using AdBlock.
Why are you doing this?
We know ads suck, we really do, and we try to work with our ad providers to remove the most obnoxious types. However, over the years we've gotten countless requests from passionate XDA users that are willing to pay to remove ads in a gesture to support the site. Some of these people use ad-blocking software, some don't. Either way, we wanted to at least make the optional available. So for less than $1 per week, we will let you use our ad-free template. What is your stance on ad-blocking software?
Obviously we prefer if people didn't block ads, but it's your right to do so. If you want to still use an ad-blocker but let ads come through on XDA, you can add us to your whitelist. Are there any other benefits with XDA Ad-Free?
Not at this time. If enough people use it, we'll consider adding new features and functions. But for now, it simply removes all ads from both the forums and the Portal. As a result, pages are more content-dense and they load a bit faster. Here's a comparison of what pages look like before and after ads: Comparison. Does Ad-Free work on desktop and mobile?
Yes, as long as you are logged into your account. Ok soooo how much does it cost?
XDA Ad-Free is $3.49 for one month, $10.99 for three months, or $29.99 for a year. You can choose to buy XDA Ad-Free one-time, or you can do recurring to keep the Ad-Free magic going. And you can gift it! What a great way to show appreciation to a fellow XDA member or developer by giving them total ad banishment. You can pay via bitpay (Bitcoin) or PayPal. What if I want to cancel?
You can cancel by going to the Ad-Free Manage Page. I have more questions!
We published an article with a bunch of data from ad-free. Check it out! ZOMG! I have even more questions!
Cool. Drop us an email at[email protected].Disclaimer - As Usual. I'll not take any responsible if something goes wrong when using Microtoggles.
Microtoggles is an open source advanced toggle and notification widget application with 35+ controls. It's a fork of popular Powertoggles app which was discontinued around 2016.
https://play.google.com/store/apps/details?id=dev.ukanth.microtoggles (Early Access)
Supported Toggles: (Note, most of the toggles properly works with ROOT, if not rooted, it will take it to settings page)
Wifi optimizer
Home Shortcut
USB Tether
Screen Lock
Volume Toggle
adbWireless
Rotation Lock
Wifi
Sync
Mobile Data
Flashlight
GPS
Bluetooth
Brightness
Data network Toggle
Bluetooth Tether
Sync now
Airplane Mode
Bluetooth Discovery
Music Volume
Brightness
Auto Brightness
Brightness Slider
Screen Always On
Screen timeout
Screen auto rotate
Screen Light
Volume Slider
Battery Info
Pulse Notification Light
Font +/-
Shutdown menu
Shutdown
Restart
Features
- Most of the existing features of powertoggles (some of them have been removed, but will be added)
- Supports 5.x to 10.x
Cheers,
ukanth
XDA:DevDB Information
Microtoggles, App for all devices (see above for details)
Contributors
ukanth
Source Code: https://github.com/ukanth/microtoggles/
Version Information
Status: Alpha
Created 2020-06-01
Last Updated 2020-06-21XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceHello. Sorry I forgot to report my device, it is s8 exynos just in case. But 1.1.1 fixed the issue. Works perfect! Thanks
Can zram be the issue?
Register or Login with Google
To those of you getting freezes, I have identified the cause to be related to ZRAM. I will push an update today that will remove ZRAM tweaking from the script.
The reason I believe this is happening is because ktweak tries to resize the ZRAM. That requires all data that is currently in ZRAM to decompress and enter your main memory unit. If we run out of memory during this process, we will freeze.
The solution is to not adjust the zram size when using ktweak. Sorry for the inconveniences that may have been caused. I'll get straight to fixing this as soon as possible.
How can I root vivo v9 1723?
I tried many methods but nothing work for me.
Please helpIn the event that you are utilizing any AOL email.We provide AOL email administration.On the off chance that you need any need email related assistance.you can contact our AOL customer support by dialing cost free +1888-477-5380.You will utilize our specialized help administration by distinguishing the main problem looked by you and afterward getting explicit answers for a specific issue. Our specialists are gifted and can expertly deal with the email issues emerging in your record.We are having our web-based driver ed program put into an app. It's largely done, only we are unable to determine how we can accept payments and the designer is not very helpful in this regard.
There is an outstanding issue here...Our app is for TEENS...we need it so they can enter payment info, their parents can, on their phones.
The PROBLEM is that our app developer says that authorize . net api is old, outdated and unsupported and he won't use it..so he is suggesting we use apple pay and google pay. PROBLEM is, it requires that the payment information be stored on the phone and it's highly unlikely that the teen will have the parents payment info already stored.
How can we get around this and allow people to input their payment information normally? Sadly, our site currently is using paypal for this but it looks horrible in the app and has to be replaced.
If we cannot use Authorize for this... what other methods can we take payments using?xda-developers
Sony Ericsson Xperia Mini, Mini Pro, Xperia Pro, Active, Ray, Live with Walkman
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceFull description: This is a card game
Now, my full description used to be a lot more detailed than that, but I cut it down to the bare minimum to try to narrow down why Google keeps rejecting me.
Obviously they don't like "Cards Against Humanity" being in there. This is the email I keep getting:
"Thanks for submitting your app to Google Play. I reviewed <app name here>, and noticed some keyword spam issues that need to be corrected.
Here’s how you can submit your app for another review:
Sign in to your Developer Console and remove any irrelevant keywords from all translations of your store listing.
Review your app to make sure it’s in compliance with the keyword spam policy and all other policies listed in the Developer Program Policies.
Submit your app."
I searched and there are plenty of apps on the play store with multiple mentions of "Cards Against Humanity" throughout their descriptions. Mine used to be one of them. But now, when I update my app, any mention of "Cards Against Humanity" gets rejected.
Google's support has been absolutely horrendous on this matter. I tried their chat support to which they said we don't handle policy issues through chat and their email suggestions have been very vague as you can see above.
Has anyone else run into anything like this? I feel like I'm screwed. I spent a very long time developing this app and now nobody is going to be able to find it because I can't mention the actual game that it's based on.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServicePlay Solar System Quiz, an interesting and educational quiz about the planets of our Solar System! What do you know about them? Find out with the quiz questions!
Our new game for 2020 will allow you to learn a lot of interesting facts about the planets of our solar system.
Knowledge about space is really interesting for both adults and children.
Solar System Quiz is:
- -Free intellectual quiz game about our solar system
- -Source of interesting facts
- -Short description for each answer
- -Simple and complex questions
- -Quiz is a great way to develop your memoryi want create a movie online app in windows phone 8. i use html agility pack to get list movie. but i dont know use html agiliti pack. help me or share source code demo. i use visual studio 2013. thanks all!
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceEdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19Features:
● Actual temperature, feels like, maximum and minimum temperature, humidity, air pressure, wind speed and UV index, sunrise/sunset
● Hourly forecast for 48 hours and daily forecast for 7 days
● Charts: temperature, precipitation, wind
● Location based weather forecast
● Option to choose any city in the world
● Choose between metric, imperial or standard measure systems and 12h/24h time format
● Beautiful animations for every weather condition, day/night and wind speed
● Beautiful gradients and icons
● Accurate weather data from OpenWeather
Note: You need to enable the location service for the app to work correctly
Widgets will come in the future...
DOWNLOAD: Play StoreI've ported (or at least trying to) POSP to suzu (Xperia X) but I'm stuck in a bootloop caused by the audioserver service.
I've already tried changing the frameworks/av potato project to the aosp one (because aosp build and boot correctly with it) but I'm still stuck with the same error.
You can find the log taken from the bootloop device here.
If someone have an idea I'll be very grateful.
ThanksStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingi have installed the Joneplus tool on my oneplus 5 phone. Everything works good until one day I tried to listen to one of the recordings and the recording sound was bed...the voices sounds like in slow motion and "robotic"
I don't know why the recordings began to be like that ..maybe because I have update my phone to android 10?
how to i solve this issue? ( i already tried to uninstall and reinstall joneplus tool)
TNXThe beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCTested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.The Huawei P40 Pro is a 6.58" phone with a 2640x1200p resolution display. The HiSilicon Kirin 990 5G chipset is paired with 8GB of RAM and 128/256GB of storage. The main camera is 50+40+12MP and the selfie camera is 32MP. The battery has a 4,200mAh capacity.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
The HTC One (M8) is HTC's flagship phone for 2014 announced in March of the same year. The revised HTC One has a similar form factor to the 2013 edition, with a curvier metal surface available in Amber Gold, Gunmetal Gray and Glacial Silver.
The new HTC One features a 5-inch 1080p display, 2.3 or 2.5 GHz Snapdragon 801 CPU/GPU, 2GB of RAM, enhanced "BoomSound" speakers, a 2600mAh battery, up to 32GB of internal storage and support for external microSD cards up 128GB.
One of the most unique features of the HTC One (M8) is its new "Duo Camera." This camera features two sensors: one Ultrapixel sensor and one depth of field sensor to allow users to select the image focus after the picture has been taken. See detailed specs for the HTC One (M8).The Xiaomi Mi Max 2 aims to be one of the biggest phones to come out in 2017. The 6.4" screen has a resolution of 1080 x 1920 pixels. The Snapdragon 625 has an octa-core 2.0 GHz Cortex-A53 CPU and an adreno 506 GPU. There are 4GB of RAM with 64/128GB of storage. The main camera has a 12MP sensor and the selfie camera is 5MP. The large 5300 mAh battery comes with quick charge 3.0.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceFind alpha and beta testers here to ensure your app runs as expected across different devices and configurations. Please read this post first for the proper procedure on how to get your app validated. Also, help other XDA Members with their testing. Discuss any of the numerous tools available for application monitoring (New Relic), crash reporting (Crashlytics, BugSense), error monitoring (Crittercism), etc.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceEvolution X 4.4 for Samsung Galaxy Tab A6 [gtaxlwifi]
/* * Your warranty is void. Or valid, probably? * * I am not responsible for bricked devices, dead SD cards, Ebolation X, * thermonuclear war, or the current economic crisis caused by you following * these directions. YOU are choosing to make these modifications, and if * you point your finger at me for messing up your device, I will LMAO at you. */
Living, Breaking, Keep Evolving.
Evolution X is a flashable custom ROM to bring a true Pixel-feel to your Android Device at first glance, with many additional configurations at your disposal. We aim to provide frequent builds with monthly security patches from the latest AOSP sources!
- Team Evolution X -
@joeyhuab (Founder & Lead Developer)
@peaktogoo (Project Manager)
@AnierinB (Project Specialist)
- Design -
@ecnivtwelve (Lead Designer)
@MartonDev (Website Designer)
https://evolution-x.org/
Reach us on Twitter! @EvolutionXROM
Themes
- 4 Statusbar Icon Styles
- 5 Lock Screen Clock Styles
- 6 System Icon Shapes
- 17 System Fonts
- Color Bucket
- Custom QS Header Images
- Pixel 2019 Wallpapers
- QS Opacity & Color Configs
- QS Backround Image Blur
- RGB Accent Picker
Statusbar
- 4G/LTE Icon Toggle
- 7 Battery Icon Styles
- 7 Custom VoLTE Icons
- Battery Percent Show/Hide Config
- Brightness Control
- Carrier Label Settings
- Clock Options
- Network Traffic Activity
- Rounded Corners Config
Notifications
- Blink Flashlight On Call
- Edge Lighting
- Force Close Notifications
- In Call Vibrations
- Kill App Button
- Notification light Config
Quick Settings
- Battery Percentage Configs
- Bottom Brightness Slider Toggle
- Custom QS Footer Text
- Custom QS Header Images
- Gaming Mode Quick Settings Tile
- QS Background Image Blur
- QS Opacity & Color Configs
- Quick Pulldown (Left/Right)
- Quick Settings Rows & Columns Customization
- Tile Titles Toggle
- Toggles To Hide Misc Icons
Power Menu
- Advanced Restart
- Airplane
- Flashlight
- Lock Down
- Logout
- Restart
- Screenshot
- Settings
- Users
- Visibility On Lockscreen Configs
Gestures
- AOSP Gestures
- Back Gesture Height Config
- Back Gesture Vibration Toggle
- Double Tap to Sleep Lockscreen
- Double Tap To Sleep Status Bar
- Screen Off Gestures
- Screen Off Power Button Torch
- Status Bar Brightness Control
- Swipe To Screenshot
- Toggle To Hide Back Gesture Icon
- Toggle To Hide Navbar Pill
Lockscreen
- Custom Clock & Date Fonts
- Fingerprint Authentication Vibration Toggle
- FOD Icon Picker
- FOD Pressed State Icons
- FOD Recognizing Animations
- Lock Icon Toggle
- Lock Screen Music Visualizer
- Lock Screen Media Artwork Configs
- Lock Screen Shortcuts
- Pocket Detection
- Pressed FOD Icon Picker
- Status bar visibility toggle
Navigation
- Invert Layout
- Navigation Bar Hide/Show Toggle
- Navigation Bar Tuner
Hardware Buttons
- Power Menu Customization
- Volume Rocker Cursor Control
- Volume Rocker Playback Control
- Volume Rocker Wake
Animations
- Disable Transition Animations
- ListView Animations
- QS Tile Animation Duration & Interpolator configs
- QS Tile Animations (Flip/Rotate)
- Screen Off Animations
- Scrolling Cache Configs
- System Animation Configs
Miscellaneous
- Accidental Wake Up Prevention
- Alarm Blocker
- Charging Animation
- Dashboard Condition/Suggestion Toggle
- Default USB Config
- Disable Device Identifier Restrictions
- Doze Settings
- Gaming Mode
- Legacy App Scaling
- Launch Music App On Headset Connection
- Screenshot Type (Full/Drag)
- Sensor Block Per Package
- Signature Spoofing Support
- Smart Charging
- Time In State Monitor
- Wakelock Blocker
- Wake On Charge
- SELinux is permissive
- Speakers may also work even with headphones connected, reboot if this happens
DO NOT FLASH GAPPS, ALREADY INCLUDED
First Time Install / Clean Flash
1. Download the proper flashable ZIP for your device
2. Reboot to Recovery
3. Wipe Data/Cache/System
4. Format Data (Optional)
5. Flash the ROM
6. Reboot to System
7. Reboot to Recovery (Optional)
8. Flash Magisk (Optional)
9. Reboot to System and #KeepEvolving
Update / Dirty Flash
1. Reboot to Recovery
2. Download the proper flashable ZIP for your device
3. Reboot to Recovery (Optional)
4. Flash Magisk (Optional)
5. Flash the ROM
6. Reboot to System and #KeepEvolving
Light Screenshots / Dark Screenshots / Download
Donate me! / Official Chat / Device Support
- Evolution X Version: 4.4
- Android OS Version: 10.0_r37
- Security Patch Level: Jun 2020
- Build Author: Gabriel Howard
- Source Code: https://github.com/Evolution-X
- Kernel Source Code: joeyhuab
Thanks to followmsi and Valera1978 for their hard work on the device trees
XDA:DevDB Information
Evolution X, ROM for the Samsung Galaxy Tab A series
Contributors
GabrielHoward, JoeyHuab, AnierinB, peaktogoo
Source Code: https://github.com/Evolution-X
ROM OS Version: Android 10
ROM Kernel: Linux 3.x
Version Information
Status: Stable
Current Stable Version: https://sourceforge.
Stable Release Date: 2020-07-07
Created 2020-04-25
Last Updated 2020-10-02XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWelcome to FlameGApps thread, Custom GApps package for arm64 devices.
We provide clean and up-to-date GApps that wouldn't bloat your phone, and would be nice to the battery and the CPU too.
Users have two choices. One is Basic Edition which includes only necessary core apps like Play Store, GMS, Framework and other necessary apps.
The Second one is Full Edition, Which includes all the necessary core apps plus more useful Google apps like Google Dialer, Contact, Messages etc.
Compatibility
Android Support: 9.0 & 10.0 & 11.0 [ALPHA]
Architecture Support: arm64
System_As_Root Support: Yes
Dynamic Partition Support: Yes
Features:
• Basic: Core Apps only
• Full: Useful Google Apps
• Debloater config support
Package Details
Basic Edition:
• Google Calendar Sync Adapter
• Google Ext Shared
• Face Lock (Pie only)
• Google Location History
• Carrier Setup
• Config Updater
• GMS Core Setup
• Google Backup Transport
• Google Ext Services
• Google Restore
• Google Services Framework
• Google Play Store
• Google Play Services
• Sound Sounds
• Setup Wizard
• Digital Wellbeing
Full Edition:
• Google Calendar Sync Adapter
• Google Ext Shared
• Face Lock (Pie only)
• Google Location History
• Google Clock
• Google Calendar
• Google Calculator
• Google Keyboard
• Google Markup
• Google Photos
• Google Message
• Google Sounds
• Carrier Setup
• Config Updater
• GMS Core Setup
• Google Backup Transport
• Google Dialer
• Google Contacts
• Google Ext Services
• Google Restore
• Google Services Framework
• Google Play Store
• Google Play Services
• Setup Wizard
• Device Health Services
• Wallpaper Picker
• Digital Wellbeing
Addon Packages:
- Google Search + Assistant
- Device Personalisation Services
- Google Keyboard - (Discontinued)
- Google Recorder - (Discontinued)
- Google Chrome - (Discontinued)
Notes:
- Select Google Dialer as default Phone app after boot up if you are using Full Edition
- Paste FlameGApps latest zip and flamegapps-config.txt in a same folder before flashing (Only if you want to remove some apps like Setup Wizard, else you can ignore it).
Downloads:
- Download FlameGApps
- Download Config.txt (Optional)
- Download Addons (Optional)
Installation:
- Wipe and flash ROM
- Flash FlameGApps package
- Flash Addon package (optional)
- Wipe cache/dalvik (recommended)
- Reboot system
NOTE: Do not flash GApps after first boot & Magisk before first boot
Telegram Support:
@FlameGAppsSupport
Donate:
- PayPal
Credits and Thanks:
- Google Inc.
- OpenGapps
- topjohnwu
- osm0sis
Happy FlashingQuote:
Originally Posted by Wishmasterflo
Interesting does someone know if there is any custom ROM existing which has a signed boot image for any Oneplus device??
There is no way of telling unless you check the bootimage yourself by running a command. Because over 90% of custom rom users have unlocked bootloaders, this is irrelevant to them. Hence, over 90% of custom roms don't sign kernel.
Lineage, which is a joke in terms of security, has even removed an option to toggle 'allow bootloader unlock' in development (and this is copied by all others). Allow unlock is enabled by default. And when it is enabled by default, your bootloader could be unlocked via fastboot. So, when an attacker gets your phone with locked bootloader, he will simply unlock it and then flash custom recovery (before reboot) that does not wipe data. Then, he can remove a few files that contain your lockscreen password (which is also your encryption password, thanks to Google) and your phone will boot with a default password. Your data and everything else is widely available. Yes, in case you didn't know, initial encryption has literally 'default_password' as your encryption password. It is also hard-coded in TWRP. When you create your lockscreen password, that changes, but 'default_password' stays there, as a fall back option. That's no security at all.
When the 'allow to unlock bootloader' option is visible and disabled, fastboot access is disabled too. Couple this with a signed recovery that has 'cancel' button removed, and it becomes impossible to flash anything on your phone, unless you enter encryption password in TWRP. It is also impossible to unlock bootloader: on executing the command, you get a response 'remote unlock is not allowed'.- Hello guys. Many of you must've seen the new Google Assistant 2.0 from the Pixel 4 family making a lot of buzz.
- Well no need to buy a pixel because you can get it working on your phone running Android 10.
- This method has been tested on various phones running PE, Havoc, and Evolution X.
Pre requisite
1. A phone
2. Android 10 (preferably Gapps version)
3. Root
4. A file explorer with root access (I use solid explorer)
5. Little bit of brain and some patience
Steps
1. The first thing to be done is to spoof your device as a pixel 4/4 XL. For this you can use one of the following methods.
A. Manually edit your build.prop file using a file explorer (Like root explorer/ solid explorer etc)
B. Flash Pixel_4_XL_props using magisk (File Attached)
C. Flash the Module MagiskHide_props_config from Magisk repo
- Then open Terminal app. TypeCode:
props
- Then go back to main page of props make selection "2", followed by "s" (device simulation), followed by "a" (Enable all props), followed by "1" (Enable)
- Then restart the device.
2. Once the device restarts, try triggering the assistant, it should prompt you to download the additional files for assistant 2.0. If not, just clear the data of Google and try again.
3. Once assistant 2.0 is enabled, you still won't get the beautiful colourful UI like the pixel 4. For that follow the following steps.
4. Using file explorer, navigate to the directory /data/data/com.google.android.googlequicksearchbox/shared_prefs.
5. Replace the file GEL.GSAPrefs.xml with the one attached bellow
6. THIS STEP IS IMPORTANT: Go one step up to /data/data/com.google.android.googlequicksearchbox/ and change the permission of the folder "shared_prefs" The folder not the files in it to 551 (dr-xr-x--x)
7. Force stop the Google App and start it again. It should now be showing the coloured bar UI like Pixel 4.
8. Profit?
NOTE: IF THE ADDITIONAL FILES FAIL TO DOWNLOAD, INSTALL THIS APK
Acknowledgements:
1. @Maxmillis and @t3sl4 for Pixel_props
2. @Didgeridoohan for MagiskHide_props_config
3. Awesome ROM developers
4. Google of course
Screen shots
Video of my phone (OnePlus 7 with Evolution X 4.20) running assistant 2.0
https://www.youtube.com/watch?v=ToE6qO6GQXgXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI no longer have a T285. All my T285 files are deleted.
But, my guess is you made the .jpg logo too big.
Register or Login with Google
I no longer have a T285. All my T285 files are deleted.
Should have no problems with the .zip file. I used on my T285.
It will make a backup of the PARAM block and store it on you internal sdcard before changing the bootlogo.
All that had to be done was replace the logo.jpg file in the zip file (drag and drop). Install it in TWRP.
Obviously, if the logo.jpg file you put into the .zip file is very large, you may end up overwriting something.
The script works now, I've reduced the jpeg to 50KB but it is blurry. Thank You
I have uploaded my param.lfs (it is compressed with 7z to reduce size from 2MB to 420KB, 26193062 is a CRC32 hash checksum of the file to verify that it is not corrupt) from mmcblk0p16 that can be flashed with heimdall ($ sudo heimdall flash --PARAM param_26193062.lfs) if someone else messes up.
1. download param_26193062.lfs
2. decompress with 7z (7z x param_26193062.lfs.7z)
3. flash with device ($ sudo heimdall flash --PARAM param_26193062.lfs)The Xiaomi Mi 5 is a high-range Android smartphone, announced in February 2016. It features a 5.15" 1080p IPS LCD display, 2.15GHz quad-core Qualcomm Snapdragon 820 processor, 3GB of RAM and either 32GB or 64GB internal storage. A Pro edition comes with 128GB internal storage and 4GB of RAM. The Xiaomi Mi 5 has a 16MP rear shooter, with f/2.0 aperture, OIS and 1.12µm pixel size. The front shooter is 4MP with f/2.0 aperture and 1080p video recording. other features include a fingerprint sensor, non-removable 3000mAh battery, Quick Charge 3.0 and USB Type-C.EdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19The ZTE Blade, also known as the ZTE Lutea, is an Android based smartphone created by ZTE. The device has sold more than 8 million times as of January 2012. It comes packaged with Android 2.1 Eclair, with some carriers offering an update to Android 2.2 Froyo. The ZTE Blade has received two sequels, with ZTE creating the ZTE Blade II and ZTE Blade III.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI have 2 apps on playstore and I am using interstitial and banner ads from Admob. While interstitial seems to be ok, banner eCPM on Admob is 1-2 cents. Is that normal?
Not sure if it is even possible but are there ways to boost Admob eCPM??
I have tried other ad networks but those have low fill rate.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceTo power up, you consume Red Bull. But your phone just needs its adaptive fast charger. Rate this thread to express how quickly the Samsung Galaxy Tab A series can charge. A higher rating indicates that it charges extremely fast.
Then, drop a comment if you have anything to add!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceApp monetization is a problem that app developers have been facing since the medieval times. Now finally there is a simple and zero cost solution. With it app developers can achieve an average revenue 60p-80p per DAU (additional revenue if you are already monetizing). The deployment requires a simple web URL integration in the app. This highly engaging new revenue stream also leads to increased retention. The name is Qureka Lite
What is Qureka Lite and what does it do?
Qureka Lite is a mWeb version of Qureka app that can be easily deployed through URL integration onto the web/ mobile destinations. Qureka app is a top-rated interactive Quiz based game show app on play store with 15 mn+ installs in India, it offers non-monotonous fresh content like Quiz shows, prediction, casual games in innovative formats.
Making money using Qureka Lite is literally effortless and sky is the limit
The ad revenue generated on Qureka Lite is shared with the publishers on 50:50 basis. We target average revenue of 40p per DAU to begin with and grow it to Rs. 1 per DAU in a year’s time. Our publishers usually hit average revenue of 60p+ within one week of going live. So an app with 10,000 DAU’s can go from Rs. 1.2 Lacs of revenue in the first month to Rs. 3 Lac per month in a year’s time. The math is simple.
Engage users like never before. Once they are in they’ll stay for some time
Users play games (Quiz shows & prediction games) on Qureka Lite in your in app browser. The topics of these games range from news, sports, current affairs, entertainment, science, culture and more. Average time spent on these games per day is 25 mins – 30 mins per user because of their highly engaging nature.
It is literally money for nothing
All this comes at absolutely no costs not even hidden. Running cost, server cost and all other cost are borne by Qureka Lite. Money only flows in one direction – to the publisher
User engagement and monetization is a science and we have cracked it
With the backing of Indian Internet Giant – Times Internet, Cool Boots Media (Parent company of Qureka Lite) has become industry leader in user engagement and monetization. With a strong content team, category experts, robust gaming engine and content management algorithm at place the expertise extends to product and design management for a seamless integration flow and user experience.
To know more email us at [email protected]I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWe can do big tier-1/2 installs volume from our existed app network on Google Play.
Looking for interesting SDK for monetization, which can bring $1 from active user per month.
Not interested in standart ad formats, just something which can bring big money, all solutions allowed - we can discuss risks for GPlay ban.
Please, write in PM with numbers and offers.
ThanksDecember 9, 2018
YouTube Vanced Non-Root White-Black (v13.46.53 -> v13.49.52)
Magisk (v17.3-17302 -> v18.0-18000)
Universal DM-Verity and ForceEncrypt Disabler (v2018-11-26 -> v2018-12-08)
Hi, any news for OOS 9 Pie ?LineageOS is based on the Android Open Source Project with extra contributions from many people within the Android community. It can be used without any need to have any Google application installed. Linked below is a package that has come from another Android project that restore the Google parts. LineageOS does still include various hardware-specific code, which is also slowly being open-sourced anyway.
All the source code for LineageOS is available in the LineageOS Github repo. And if you would like to contribute to LineageOS, please visit out Gerrit Code Review.
/* * Your warranty is now void. * * I am not responsible for bricked devices, dead SD cards, * thermonuclear war, or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at me for messing up your device, I will laugh at you. */
- Upgrade to latest available official firmware
- Download the LineageOS zip(s). (see Downloads)
- Copy the LineageOS zip to internal sdcard
- Boot into TWRP
- Optional: Perform a backup of your current ROM
- RECOMMENDED: Do a factory reset! No support if you didn't!
- Flash LineageOS
- Optional: Install the Google Apps addon package. (see Downloads)
- Reboot
HOW TO UPDATE LINEAGEOS:
- Download the LineageOS zip(s). (see Downloads)
- Copy the LineageOS zip to internal sdcard.
- Flash LineageOS.
- Reboot
DOWNLOADS:
LineageOS 17.1: Unofficial
Firmware: https://sourceforge.net/projects/crd...r/6.x/firmware (Thanks for neobuddy89 @crdroidandroid)
Google Apps: http://opengapps.org/
TWRP: Official
Contributors
T1mb3, codeworkx, neobuddy89
Device specific source code: https://github.com/LineageOS-cheeseburger
LineageOS source code: https://github.com/LineageOS
Android version: Android 10
Kernel version: Linux 4.4.y, branch op8998-ten-upstream
Required firmware: OOS 10.0.0 hotfix 1
Status: Stable
Created 2020-09-28Glad to be here So, we are ADxAD - Adult CPM Ad Network
Here are some of our basic features and common info.
Integration options:
- oRTB (ver. 2.3 and higher) - CPM endpoints for advertisers and DSPs/SSPs
- directlinks
- js tags
Promo formats:
- JPEG, JPG, PNG, GIF
- Mp4 in-banner video
- Html, iframe
Traffic types:
- POP
- Banner (all formats)
Hope we'll make it big togetherTry this build at your own risk. It's likely to have bugs and is EXPERIMENTAL as it is a work in progress. It boots and seems to work fine on my SM-T350, but I have only tested it for 24 hours. Problems will likley surface later?
BACKUP YOUR FILES and have a copy of your working image BEFORE trying my build.
You can find the 17.1 and 16.0 builds at
https://androidfilehost.com/?w=files&flid=315154
What works.
1. bluetooth
2. wifi
3. brightness
4. external audio
5. GPS
6. audio through headphone jack
7. camera
8. Google play store - use pico apps
9. flip flap smart cover
Note: first initial boot takes a bit longer, be patient.
Known problems.
1. Home screen text may look fuzzy.
Text on home screen looks funny/fuzzy. This only seems to affect the home screen and nowhere else. Problem is with stock trebuchet launcher and/or its fonts. I tried rootless pixel launcher from fdroid as a quick and simple test and see no problems with home screen text. Rootless pixel uses a different font though. A future lineageos update could resolve the problem?
https://f-droid.org/en/packages/amir...nexuslauncher/
OR you can use nubianprince's crdroid 10.0 build for this tablet. He used his 9.0 repos and has no problems with fuzzy fonts/text. See
https://forum.xda-developers.com/gal...b-8-0-t4158163
OR you can use a fairly recent 16.0 build which doesn't have the problem.
2. BOE panel
If you have a BOE panel, the backlight may not turn on. This has been reported over at
https://forum.xda-developers.com/gal...b-8-0-t4158163
No fix yet. I don't have this BOE panel either.
OR you can try downgrading the original firmware to 6.0 as below and then flashing 17.1
https://forum.xda-developers.com/sho...1&postcount=41
Also see post #24 for photo proof.
https://forum.xda-developers.com/sho...7&postcount=24
Thanks/Credits
Thanks to @nubianprince and @lividhen99 for ideas and suggestions on getting this build to work. I used one of nubianprince's repos for this build.I am a student at the University of Potsdam, Germany and I am currently writing my bachelor's thesis in the field of "business informatics". The title of my bachelor's thesis is "Multi-platform strategies by application developers on software platforms".
Therefore, I am investigating efficient methods for deploying apps on multiple platforms.
A platform is, for example, the "Apple App Store" or the "Google Play Store".
In this context, I conduct a survey among app developers.
It would be very helpful if you could spend 5 minutes for the following survey:
"https://survey.wi.uni-potsdam.de/index.php/453275?lang=en"
All information is published anonymously and will not be passed on to third parties.
Thank you for your help!Clone and run multiple accounts of the same app simultaneously, Clone WhatsApp,support dual app. The most important is it is Free & NO ADS!
Download now
Hello people! I hope you are all doing okay
About our App:
The clone app is designed to allow you to log into multiple accounts on a mobile phone at the same time. You can create clones of your applications that run in parallel space and work independently of each other.
MainFeatures:
*Log in to multiple accounts of social networking apps or game apps at the same time on one device
• Balance between users' life and work easily.
• Double users' online gaming experience and have more fun.
• Almost all apps are supported for a second account in Clone App. Data from both accounts won't interfere with each other.
*Support for 32-bit apps
32-bit engine with independent core technology, perfect support for 32-bit apps.
*Support for 64-bit apps
64-bit engine with independent core technology, perfect support for 64-bit apps.
*No ads and free completely
Clone app has no ads, and is completely free, providing users with quality service.
*Top game multi-account
Support popular games, easily switch multiple accounts.
*Balance work and life
Support for popular apps, to provide them with stable multi-account services.
*fake gps location
You don't need to root your phone to use the fake gps location plugin. You can set up any location you want to appear in, and you can make the other party believe you are there without moving to the corresponding location.
*independently
According to your own needs, you can install the clone application into the internal space of the app or install it into the phone independently like a normal app.
* cahos engine
Self-developed cahos engine, security, stability and high performance, achieved the clone without root mobile phone in the case of the use of virtual location plug-in.
Tips:
★ your personal information will not be collected to protect your privacy.
★ permissions, the requested permissions are required to ensure the normal operation of the cloned application.
★ please do not delete the clone app main program, otherwise the clone will not run normally.
If you like our application, please give us five-star praise, your encouragement is our greatest motivation!
If you have any questions or suggestions, welcome to click【Feedback】 within the application , or send an e-mail to contact us, we will be honored to help you!
Email address: [email protected]
Download now
social media
Version Information
status:stable
current stable Version：1.0.2
Updated:August 18, 2020
If you have any questions or suggestions, Please leave a message belowyou dont have adb installed
install it like:
Requirements :
1) Java SE Development Kit http://www.oracle.com/technetwork/ja...s-2133151.html
2) android-sdk-windows (Archive) https://developer.android.com/sdk/older_releases.html
Procedure :
------------------
1) Install Java JDK in C:\Program Files
2) Extract android-sdk-windows in C:\
3) Go to desktop
4) Right_Click on My Computer
5) Left_Click on Properties
6) Left_Click on Advance System Settings
7) Left_Click on Environment Variables
8) (System Variables) Scroll down and select PATH option
9) Left_Click on Edit
10) Add New Path [C:\android-sdk-windows\tools]
11) Click ok
12) Run Command Prompt
13) Type adb and press enter Congrats you successfully installed adb in your pcRegister or Login with Google
OnePlus 8T
Samsung Galaxy Z Fold2
Samsung Galaxy Note 20 Ultra
Samsung Galaxy Note 20
OnePlus 8 Pro
Huawei P40 Pro
Samsung Galaxy S20
Huawei Mate 30 Pro
OnePlus 7T
Samsung Galaxy Note 10+
Google Pixel 4 XL
OnePlus 7 Pro
OnePlus Nord N100
OnePlus Nord N10 5G
Apple iPhone 12
OPPO Reno4 Z 5G
OPPO Reno4 / 4 Pro 5G
Huawei Mate 40 Pro
Lenovo Legion Duel
Realme 7i#include <std_disclaimer.h> /* * * We are not responsible for bricked devices, dead SD cards, * thermonuclear war, or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at us for messing up your device, we will laugh at you. * */
- Android Q Support
- Decryption Support
- Vendor Partition Support
- Unified TWRP, so this works on OnePlus 5 and also on OnePlus 5T
To Flash the TWRP:
if it's the first time you flash the TWRP or you are getting problems of TWRP lost or device doesn't boot after flashed magisk or something else you need to flash a modified vbmeta:
fastboot flash recovery twrp-3.3.1-xx-xxxxxx-mauronofrio.img
fastboot boot twrp-3.3.1-xx-xxxxxx-mauronofrio.img
Download:
TWRP 3.4.0-0 by mauronofrio
TWRP 3.3.1-1 by mauronofrio
TWRP 3.3.1-0 by mauronofrio
Reccomended ADB and Fastboot binaries:
Adb and Fastboot Installer
Source code:
https://github.com/mauronofrio/andro...table_recovery
https://github.com/mauronofrio/andro...s_cheeseburger
My Telegram TWRP Support Group:
https://t.me/twrp_Mauronofrio
Donations:
Credits:
Thanks to @eng.stk for the base source
Created 2020-03-27Newest build fixes problems with android 9 and 10 crashing in specific windows of the launcher
Going to test your launcher by curiosity.
Thx !
Register or Login with Google
The app in your GDrive is (always) updated ?
Going to test your launcher by curiosity.
Thx !
Hi, I was wondering if you could add an import feature?
I take a lot of time to setup my whole homescreen and it would be amazing to have an import feature. Thanks
I want to import my nova launcher setup to this launcher.
Hi,
I was more curious and installed it in my android 8.0 with custom system UI colours (non rooted).
when I set as launcher, the system UI get restarted again and again. Finally, it ended up with Factory reset.
beautiful launcher 😍 works great on my old Nokia 8, on my Nova 5T not so much (cause Huawei) I'll watch the progress of this launcher from now on, thank you for this, Pledge doesn't work on the pre- beta
Great launcher but it's a bit buggy for me on One UI. The header text is dark in the settings and also in app options when using dark mode and adaptive icons don't work properly for Samsung apps. The status bar also is dark on home screen and blends in with the wallpaper so it's hard to read. Also when you open the app drawer the shelf doesn't completely hide the app icons (the top portion is still visible). I don't know if that's by design but it looks weird. Search doesn't work (probably because I don't have the Google app installed but if that's the case I wish there was an option to disable it). Creating a widget causes the launcher to freeze, and it only recovers when I clear data and force stop. When you press and hold an icon, even if the side menu shows up partially, if you leave pressing the app, the app will launch. You have to wait for the side menu to completely open. That's not much of an issue once you get used it's behavior. It's an early build so the bugs are expected but I thought I will report them anyways.
That won't happen because this launcher uses a different style and approach to the launcher scene. The most customization you will do in this launcher is color scheme and icon themingI am working with a developer on a mobile app that has a user and a service provider so 2 separate apps. We need to have the ability for the service provider to have an in app wallet and be able to transfer that money from the in app wallet to an account of their choosing at any time.
We are using Braintree for payments but they are telling us that Braintree cannot handle that. I see that Uber uses Braintree.
Does anyone know if it is possible or if there is something else they are using to make this possible
Sent from my iPhone using TapatalkThe Android smartwatch has come into its own as an alternative method for displaying notification data from your smartphone. Our forums are a resource for developers to learn about smartwatches, how to program for smartwatches, and how to hack smartwatches in order to get the most out of them.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI cannot get the stylet to work. Is there a trick?
Do I need an art program to use it in first?
Noob..... until someone helps me.
Thanks, ER
Register or Login with Google
I bought my husband a Galaxy 10.1 tablet and a Slate 7 Digitizer Stylet.
I cannot get the stylet to work. Is there a trick?
Do I need an art program to use it in first?
Noob..... until someone helps me.
Thanks, ERThere are several methods of app monetization: You can display ads, divide the app’s functionality into “basic” and “pro” segments, and so on. However, a monetization model that is too aggressive -- displaying too many ads or setting an unreasonably high price -- may produce worse user experience. App development, therefore, is a constant struggle to balance monetization and user satisfaction.
We at Infatica, a global peer-to-business proxy network, have come up with another solution: SDK monetization.
How it works
You can implement the Infatica SDK into your application -- this will allow users to join our network. For providing resources of their idle devices, users will be rewarded with an ad-free app, premium features, or something else you’d like to introduce as a benefit.
Advantages
Implementing the SDK is worth the effort -- here are some of the advantages both you and your users will get:
Extra income: The SDK allows you to earn extra income. Naturally, you can combine it with any other monetization method.
Omni-monetization: You’re monetizing your users even if they aren’t visiting your app.
User loyalty: Users prefer to become a peer in our network rather than watch ads or buy subscriptions.
Better user experience: You’ll keep your retention rate safe due to better user experience -- you can offer your app without ads or for free.
Transparent rules: We don’t have any hidden terms. All the rules are clear, and we are diligent about following them
Lightweight: The SDK has minimal impact on the size of your app and doesn’t create additional load.
Wide range of platforms: We support monetization in both desktop (Windows, macOS) and mobile (iOS, Android) applications, as well as Chrome extensions.
Respect for user rights and user experience: Although app monetization is important, we hold our users even higher. To protect their rights and ensure the best user experience, we follow strict security measures and policies.
Money
The financial aspect of app development is especially important, so here’s a breakdown of how much money you can make: We pay per ACU (Average Concurrent User) per month, with an additional factor of user location.
Safeguards against abuse
SDK monetization offers some powerful features, so you’re in the right to think: “Is it safe for my users?” Yes, it is safe -- our security measures include strict compliance and network monitoring, ensuring that peer resources are only used legitimately.
Furthermore, we don’t collect or share with third parties any user data, with the exception of IP location data.
Apply here - infatica.io/sdk-monetization/
P.S. If you have any questions, you can leave a request with us and our managers will answer you.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWill try and keep this short: Am an old time developer, since 1979. I was self-taught, as a kid, never one class. The weakness there is that I never learned most of the terms.
So when learning new languages, it was harder since I didn’t have a reference point. i.e. may no longer be used, but I created “linked lists”, just never knew they were called that.
Anyway, I never got past using C and WinSDK. And I learned just enough Perl on the fly as I needed it to create some backend parts to some of my apps.
I am desperate to start a new project, preferring to do it on Android first. As hard as I looked for LOCAL developers with serious programming experience, and preferably some Voice SDK experience I failed. I tried Craigslist and Meet Up. Nothing.
So I need to do this MYSELF. Or at least start it and come up with the alpha-prototype on my own.
After all that explaining, what’s the BEST (and least expensive) means I can purchase to teach myself programming an Android device?
I always loved forums, we’re talking back when NEWSGROUPS were the way to go. Because out there was always someone who knew…and was willing to share their point of view.
Currently using a PC-Windows environment, so any IDEs in that arena would be preferred.
So any help, any direction would be so appreciated.
Many thanks ahead all,
SergioI'm working for one company that makes eletric bikes. Currently we have an app which is used as extended dashboard for the bike and to control your bike when you are not using it. Now we are thinking of extending some of our functionality and one of our feature request would be to use Android Auto within our bike infotainment. My question is whether something like this is 'legit' (Can such an application be approved by Google) ?
Or to be more precise, here is user story request: "As a company that manufacturers e-bike solutions, we want to build bike infotainment that supports Android Auto, so that riders can run all apps that have Android Auto support on e-bike infotainment."
Thank youYou know the story by now after 2 years, lets get started.
GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
Launcher supports work profile apps and dual apps from various oems
Launcher supports Android 10+ gesture system but restricted.
Groups allow users to create organized folders of apps available in the Groups Sheet
Personalized search in the Search Sheet
A revised single screen interface introducing a new layered material design.
Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
Recent Apps don't have a long click listener (no sheets).
The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
Users can block apps from showing badges and priority notifications.
Launcher sheets can be accessed from the launcher menu.
The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
Widgets can be resized by long clicking on them and a resize module will appear (WIP).
The launcher settings will theme itself on Android 10 light or dark mode.
Launcher settings features smart suggestions that appear on certain variables available
Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
General Note:
This is a pre beta of which means parts of the launcher are not even functional yet. I did a pre beta to find errors i couldn't find myself and to get feedback on the progress we currently are at. If you see a page that is blank or something isn't functional, chances are it wasn't ready for the public yet. Please be patient with things.
Common Questions:
Why does GCA Launchers Adaptive icons behave so differently compared to the ones found in stock launchers?
-That is because the icons use a different mechanic and were made from scratch so everyone could enjoy adaptive icons and it not be exclusive to 7.1+ users. My icons can be modified from the icon to the shape override.
Can we get a launcher import option?
-No, not currently. Almost all launchers that exist use the base of Googles Launcher3 which adding an import option for them is easy. I would have to take the database, tear it apart, create a converter and place the data we need were it belongs. We are not there yet.
The System UI seems to behave differently from other apps.
-GCA Launcher has a theme engine similar to pixel launcher and trys to make the choice of a light or dark navbar or statusbar. Using Android10s dark mode may confuse things but eventually il have it all sorted out.
The launcher interface isn't what I expected. Shouldn't it behave like pixel launcher?
-No, it behaves like it should be. How it was designed.
Does it support quickswitch?
-It never will unless Google changes the api for the recents provider. I blame the lawnchair team of this common question as many users have assumed this is a premium feature now and should be supported by all launchers now which isn't the case.
Does this launcher support dark mode from android10?
-yes but we have some work todo yet
Why do things look weird in the launcher settings? Preference category is hard to read and matches the toolbar color.
-Try changing the color scheme in the style settings. This is the GCA theme engine at work.
Ratings:
If you post a rating for GCA Launcher coming from V1, more than likely i will dis regard it. V1 is being deprecated soon and all bugs and errors you will find in V1 on the playstore are being disregarded. V2 is a rewrite with new features and new bugs.
I updated the build earlier to fix something for Android 8 users and ended up screwing something up for Android 9 users so il be keeping tabs on everything as much as possible but I will not be able to do anything if no one says anything. Please provide feedback as much as possible. Thank you in advanced.
Those of you keeping me informed of crashes, thank you, thank you, thank you
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
Shelf apps can be changed by long clicking on a Shelf favorite and their will be a Favorite option to select a different package. This option isn't available in the App Drawer apps so it might be easy to miss.
When changing the icon sizes, make sure your changing the icon size and bot just the text size. Both options are in one dialog.
Id your having a hard time switching out your default launcher, you can use my No'Me app i have listed above. It helps alot.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceGlad to be here So, we are ADxAD - Adult CPM Ad Network
Here are some of our basic features and common info.
Integration options:
- oRTB (ver. 2.3 and higher) - CPM endpoints for advertisers and DSPs/SSPs
- directlinks
- js tags
Promo formats:
- JPEG, JPG, PNG, GIF
- Mp4 in-banner video
- Html, iframe
Traffic types:
- POP
- Banner (all formats)
Hope we'll make it big togetherGeneral Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceIn case anyone happens to know, is pico gapps required or is that just NP's preference? The, finally going to try this..
If you must use gapps, then select pico. It uses the least amount of disk space, ram and system resources.
This article is a bit old, but lineageos developers recommend against opengapps.
https://www.xda-developers.com/gapps...rom-developer/
"So why does LineageOS still recommend MindTheGapps? The reason for that is because there can be issues with using a package that hasn’t been tested by the developer. For example, the LineageOS developers note that removing the stock dialer app (which happens when flashing the “super” or “stock” Open GApps packages) can result in emergency calls failing to work, as the framework relies on a very specific intent to send. Using a different dialer app such as Google Dialer, for example, can break emergency calling functionality."
And yes, for some of my tablets, I'm completely gapps/google free.
I realize it's not for everybody depending on your requirements.
PS. I'm not a "developer". I can compile and fix simple bugs and problems, but that's all.
---------- Post added at 08:28 PM ---------- Previous post was at 08:22 PM ----------
Also, I do have a couple of older Android devices where, luckily, someone has written a zip script to repartition the system to be a bit bigger to fit newer and larger OS with enough room for gapps pico.
There's no way, I would have enough knowledge and confidence to write such a script or utility.
---------- Post added at 08:56 PM ---------- Previous post was at 08:28 PM ----------
More regarding /system
https://github.com/Lanchon/REPIT/issues/56You know the story by now after 2 years, lets get started.
GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
Launcher supports work profile apps and dual apps from various oems
Launcher supports Android 10+ gesture system but restricted.
Groups allow users to create organized folders of apps available in the Groups Sheet
Personalized search in the Search Sheet
A revised single screen interface introducing a new layered material design.
Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
Recent Apps don't have a long click listener (no sheets).
The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
Users can block apps from showing badges and priority notifications.
Launcher sheets can be accessed from the launcher menu.
The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
Widgets can be resized by long clicking on them and a resize module will appear (WIP).
The launcher settings will theme itself on Android 10 light or dark mode.
Launcher settings features smart suggestions that appear on certain variables available
Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
General Note:
This is a pre beta of which means parts of the launcher are not even functional yet. I did a pre beta to find errors i couldn't find myself and to get feedback on the progress we currently are at. If you see a page that is blank or something isn't functional, chances are it wasn't ready for the public yet. Please be patient with things.
Common Questions:
Why does GCA Launchers Adaptive icons behave so differently compared to the ones found in stock launchers?
-That is because the icons use a different mechanic and were made from scratch so everyone could enjoy adaptive icons and it not be exclusive to 7.1+ users. My icons can be modified from the icon to the shape override.
Can we get a launcher import option?
-No, not currently. Almost all launchers that exist use the base of Googles Launcher3 which adding an import option for them is easy. I would have to take the database, tear it apart, create a converter and place the data we need were it belongs. We are not there yet.
The System UI seems to behave differently from other apps.
-GCA Launcher has a theme engine similar to pixel launcher and trys to make the choice of a light or dark navbar or statusbar. Using Android10s dark mode may confuse things but eventually il have it all sorted out.
The launcher interface isn't what I expected. Shouldn't it behave like pixel launcher?
-No, it behaves like it should be. How it was designed.
Does it support quickswitch?
-It never will unless Google changes the api for the recents provider. I blame the lawnchair team of this common question as many users have assumed this is a premium feature now and should be supported by all launchers now which isn't the case.
Does this launcher support dark mode from android10?
-yes but we have some work todo yet
Why do things look weird in the launcher settings? Preference category is hard to read and matches the toolbar color.
-Try changing the color scheme in the style settings. This is the GCA theme engine at work.
Ratings:
If you post a rating for GCA Launcher coming from V1, more than likely i will dis regard it. V1 is being deprecated soon and all bugs and errors you will find in V1 on the playstore are being disregarded. V2 is a rewrite with new features and new bugs.
I updated the build earlier to fix something for Android 8 users and ended up screwing something up for Android 9 users so il be keeping tabs on everything as much as possible but I will not be able to do anything if no one says anything. Please provide feedback as much as possible. Thank you in advanced.
Those of you keeping me informed of crashes, thank you, thank you, thank you
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
Shelf apps can be changed by long clicking on a Shelf favorite and their will be a Favorite option to select a different package. This option isn't available in the App Drawer apps so it might be easy to miss.
When changing the icon sizes, make sure your changing the icon size and bot just the text size. Both options are in one dialog.
Id your having a hard time switching out your default launcher, you can use my No'Me app i have listed above. It helps alot.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceMIUI Central on XDA is the best place to discuss Xiaomi's user interface, MIUI. Covering 81 languages in more than 200 regions, MIUI has over 300 million monthly active users. Its latest release, MIUI 12, is focused on privacy enhancement and a smooth user experience. MIUI 12 will be available on select devices starting from June 2020, with a wider rollout expected later. We thank Xiaomi for making this section possible on XDA.hi I am stuck at qfil and it doesnt detect the port; help please!!
Also this doesnt wipe the phone does it?I am getting this error
2020-09-27 11:34:38.638 11:34:38: ERROR: function: port_connect:100 Failed to open com port handle
2020-09-27 11:34:38.643
2020-09-27 11:34:38.647 11:34:38: ERROR: function: main:297 Could not connect to \\.\COM8
2020-09-27 11:34:38.652 Download Fail:Sahara Fail:QSaharaServer Fail:Process fail
2020-09-27 11:34:38.681 Finish Get GPTReleased in November 2015, the Xiaomi Redmi Note 3 has a 5.5" IPS LCD display, 2.0GHz octa-core MediaTek Cortex-A53 processor, and comes with either 2GB of RAM and 16GB internal storage, or 3GB of RAM with 32GB internal storage. The main shooter is 13MP with an f/2.2 aperture, while the front camera is 5MP with f/2.0 aperture. The Xiaomi Redmi Note 3 is powered by a large non-removable 4000mAh battery.The Samsung Galaxy S4 Mini is the younger sibling of the Galaxy S4. It runs on a 1.7GHz dual core Snapdragon processor, with 1.5GB RAM and 8GB internal storage (16GB in some regions). The 4.3" Super AMOLED display has a resolution of 540x960. The S4 Mini runs on Samsung Touchwiz and comes with the standard suite of Samsung apps.My ip cams are intranet only. I use Chou's ip cam app to see and record at home as well as D-View Cam. My cams won't connect to DLink.
Is there any Android app that will connect by wifi in my home then export video to me on the Net so.I can see feed when I'm away?Quote:
Originally Posted by karandpr
At this moment , I would probably nuke Android Studio and Delete SDK folder and reinstall latest Android Studio.
And then reinstall again. Can't say I haven't done this in past.
Hey! Finally resolved the issue!
Here's what I did:
I purged the android studio
Purged all android related files and folders
Downloaded fresh android studio
Installed platform tools, android SDK, build-tools
Set all the variables
It works!!
Issue was "Android" has deprecated, "Android_Home" doesn't entertain Cordova anymore, have to set variable path with the variable "ANDROID_SDK_ROOT" and point all directories to the variable along with "ANDROID_HOME".
Resolving this issue for me was great frustration as lack of documentation on cordova.apache.org
Found this useful in setting the variables according to new standard >> https://stackoverflow.com/questions/...sdk-deprecatedXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceLineageOS is the successor to the popular CyanogenMod ROM. With an emphasis on openness, community development, and improvement of the stock Android experience, CyanogenMod supported dozens of devices officially with nightly updates, and unofficially, by the efforts of developers in the community, dozens more devices. LineageOS intends to pick up where CyanogenMod left off, but with a redoubled focus on being a grassroots community-focused development effort.More
1 posts
Join Date:Joined:Jan 2020 Less
Web App Development
Hi there,
I have read your requirement carefully that you need a web app for the website.
We have a team of highly skilled developers with experience in web app development and I believe in doing the best quality of work for our clients and our developer always takes care of security features from the beginning of the application development after completion perform rigorous testing. Moreover, I can give a very professional and excellent result for your requirements.
Our Relevant Skills Are:
1. Front-end: Angular, ReactJS, Javascript
2. Back-end: Node.js, RoR, PHP, MySQL, MongoDB, Wordpress, Python
3. Mobile: iOS, Android, Hybrid(Ionic, React Native)
Looking for your prompt response and allows us to have a discussion with you regarding the price and time of the project.
Kind Regards
Andrew
Sr. Business Developer at ArStudiozThe Amazon Kindle Fire is a tablet version of Amazon's e-book reader known simply as the Kindle. The Kindle Fire has a heavily modified user interface that doesn't appear to be running an Android OS in many ways. Users have access to an Amazon App store, which includes many apps from the Google Play Store as well as access to Amazon's e-book store. The Kindle Fire has 8 GB of internal storage with 6.5 GB accessible by the user. Cloud storage is used for all digital content purchased through Amazon.**** Disclaimer: USE AT YOUR OWN RISK! I am not responsible for any dead device, bootlooping device, You getting fired from work because your alarm app failed OR your device causing a thermonuclear war. If you follow instructions carefully, and read, you won't have any of the listed above. If anything goes wrong, do not point fingers at me for I WILL LAUGH AT YOU! ****
Founder: Alexander Brunswig
Developer: Ido Ben Hur
David Setiawan
Features
- Styles Configuration Menu
- 4 System Icon Shapes
- 43 System Fonts
- 7 Primary Colors (Backgrund Colors)
- 6 Lockscreen Clock Styles
- Grid
- Wallpaper Picker
- RGB Accent Picker
- Rounded Corners
Statusbar
- System Icons
- StatusBar Logo
- Network Traffic Display
- Battery Percent Show/Hide Config
- Show Clock
- Show Date
- Ticker(Beta)
- Carrier Label Settings
Quick Settings
- Statusbar Pulldown (Left/Right)
- QS Opacity & Color Configs
- QS Backround Image Blur
- Brightness Slider
- Tiles Area customizations (rows, columns, n/o quick access tiles and more...)
- Footers Area customizations (Show/hide elements, Customize footer text and more...)
- Header area customizations
Buttons
- NavBar (Enable/Disable)
- Arrows on navbar while typing
- Navigation bar tuner
- Screen Off Power Button Torch
- Volume Settings
- Hardware Keys customizations
- Prevent Accidential Touch
- Customize backlight
- Hardware Keys customizations
Gestures
- AOSP Gestures control
- Back Gesture Height Config
- Gestures sensitivity control
- Gestures haptic feedback control
- Block height of keyboard for gestures
- Toggle To Hide Navbar Pill
- Double Tap To Sleep Status Bar
- Double Tap to Sleep Lockscreen
- Three Finger Swipe To Screenshot
Lockscreen
- Fingerprint Authentication Vibration Toggle
- Ambient Brightness
- Lock Screen Shortcuts
- Status bar visibility toggle
- Hide LockScreen Icon
- Lockscreen Charging Info
- Show Battery Bar
- Clock/Date/Owner Info Options
- Lock Screen Music Visualizer
- Lock Screen Media Artwork Configs
PowerMenu
- Disable PowerMenu When Locked
- Many Power Menu Items
Notifications
- Notification Light
- Battery Charging Light
- Charging Animations
- Show Gentle Notifications
- Force Expanded Notifications
- Edge Lighting
- Noisy Notifications
- In Call Vibration Options
Animations
- Animation Duration
- Disable Transition Animations
- ListView Animations
Miscellaneous
- Wake On Charge
- Brightness Control
- Signature Spoofing Support
- Time In State Monitor
- Doze Settings
And seriously, much much more, way too many to list here
Bug reporting
Grab a logcat right after the problem has occurred. (Please do not grep / cut / edit the log, unless you know what you're doing.)
If the problem is hardware related please also grub a dmesg
Remember to provide as much info as possible (ex. steps to reproduce). The more info you provide, the more likely that the bug will be solved. Please also do not report known issues, search first. Bug reports with no proper logs will be ignored
Sources
OnePlus5T Device Tree
OnePlus5 Device Tree
Common Device Tree
Device Vendor
Device Kernel
Downloads
dumpling - firmware
cheeseburger - firmware
Flashing Instructions
Coming from a different rom / OS you'll need to clean flash:
1. Wipe data (Factory reset)
(1.1.) If coming from stock OS you may need to format internal storage
2. Flash rom
(2.1.) Flash mods (magisk, gapps if vanilla ...)
3. Rejoice
For dirty flash just skip step 1, 1.1
and possibly 2.1 if your mods support addon.d (ex: Magisk)
It does not matter when you flash the firmware zip, and you only need to flash it once per firmware version
Thank You
AOSiP (They Are The Reason We Exist)
LineageOS
AICP
ABC ROM
PixelExperience
OmniROM
AquariOS
BootleggersROM
---------
Any others we may have forgotten to credit
And last but not the least, all our testers, who have helped us squash many bugs so that we can try to release builds that as are flawless as possible
Our telegram group: https://t.me/DerpFest5T
For @NurKeinNeid 's bare version go to the old thread here
XDA:DevDB Information
DerpFest, ROM for the OnePlus 5
Contributors
idoybh, NurKeinNeid
ROM Source Code: https://github.com/DerpLab
Devices Source Code: https://github.com/DerpFest-Devices
Kernel Source Code: https://github.com/op5-q/kernel_oneplus_msm8998
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
ROM Firmware Required: OOS 10 open beta 3
Based On: AOSP
Version Information
Status: Stable
Stable Release Date: 2020-06-12
Created 2020-06-19
Last Updated 2020-07-28XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServicePROS:
1. Virtually total protection of your data, especially if encrypted
2. Inability to flash another recovery, even stock recovery (if OEM unlock allowed is unchecked)
3. Inability to flash another kernel, including stock kernel, (again if OEM unlock is unchecked)
4. Inability to unlock bootloader in fastboot, see above
5. Total inability to flash anything in fastboot. The only access to the phone is through TWRP
6. You can still change/update roms, backup/restore data to your liking
7. You get a different boot warning screen: 'your phone has loaded a different operating system' with a fingerprint (four rows of numbers). Write them down and compare once in a while: if the numbers are different, someone (and I am talking a sophisticated adversary) tempered with your phone
CONS:
1. You would have to set up things once
2. When changing or updating roms, one extra step is required - flashing Chainfire's modified Verified boot signer zip to resign kernel (right after Magisk and before reboot).
The key generation and signing is based on Android source directions and Chainfire's thread about relocking bootloaders with custom roms. So, credit for that goes to him
THESE ARE INSTRUCTIONS FOR LINUX. I am sure there is a way to do the same on Windows
Preliminary steps:
Remember, if you are not on 5.1.5, you may have problems. For example, my own rom, Jaguar Oreo, requires 5.1.4 firmware. I did all the steps and everything worked, except that TWRP couldn't de-crypt. However, I went ahead and flashed 5.1.5 firmware and the rom is working fine. So, I re-did all the steps and now de-cryption works too. This may or may not be the case with your favorite rom, if it is not on 5.1.5.
1. Create a directory on your PC named, let's say, Bootkeys.
2. Get Chainfire's Bootsignature.jar from here: https://forum.xda-developers.com/att...2&d=1493804209 and VerifiedBootsigner.zip from here: https://forum.xda-developers.com/att...1&d=1496000476 and put both files in that newly created directory
3. Get your favorite TWRP (I use Blue_Spark) and put it also in that directory
4. Key Generation:
Run the following code one line at a time from PC terminal opened in your newly created directory. Skip the lines with "#" sign, these are for comments only.
# private key openssl genrsa -f4 -out custom.pem 2048 openssl pkcs8 -in custom.pem -topk8 -outform DER -out custom.pk8 -nocrypt # public key openssl req -new -x509 -sha256 -key custom.pem -out custom.x509.pem openssl x509 -outform DER -in custom.x509.pem -out custom.x509.der
5. Signing:
Rename your TWRP into recovery.img and run the following code one line at a time from the same terminal
java -jar BootSignature.jar /recovery recovery.img custom.pk8 custom.x509.der recovery_signed.img java -jar BootSignature.jar -verify recovery_signed.img
6. Open Verifiedbootsigner-v8.zip you downloaded from Chainfire's thread with your PC's archive manager (don't have to unzip it). Grab your newly generated keys custom.pk8 and custom.x509.der and put them into the opened zip. Make sure the files are there and close archive manager
7. Now back to the phone. Flash your newly signed 'recovery_signed.img' (not original 'recovery.img') to the phone via fastboot or in your existing TWRP. Reboot in your new recovery.
8. Now, format the phone - you have to type 'yes'; next, format separately system/cache/dalvik/data/SD. Reboot the phone into TWRP again.
9. Transfer your favorite Rom, No verity (only if your rom is force-encrypt) and Verifiedbootsigner to your SD card. Remember. You must be decrypted to relock. Locking bootloader on encrypted device will destroy encryption key. Once bootloader is locked and everything is working, you can encrypt.
10. Flash the rom, No verity (only if your rom is force-encrypt) and Verifiedbootsigner. Reboot and make sure you are NOT encrypted (in Settings/Security). (If encrypted, stop and return to step 8: you either haven't formatted to factory reset or your no verity didn't work).
Now, back to TWRP: most likely your data is gone, so, re-transfer the rom and and Verifiedbootsigner to internal SD
Now, you are ready for the FUN PART: re-locking:
11. Boot in fastboot and execute fastboot oem lock
12. Reboot. You will get a yellow warning: 'Your phone loaded a different operating system". The first boot may throw you into TWRP. Just reboot normally again
13. Now, you can do whatever you want, including Gapps and Magisk. Everything should operate normally. Just remember, every time after flashing Magisk/update/change rom, you MUST reflash Verifiedbootsigner, as the last step and before reboot, even if during flashing, the script tells you kernel is signed. Follow the script and press volume down to sign againWe are very excited to announce the release of Paranoid Android Quartz, based on Android 10.
On the first launch, you’ll notice a clean setup with a beautiful wallpaper from Hampus Olsson, who teamed up with us again to create several beautiful pieces of artwork. Hampus is a multi-disciplinary artist whose design stands for itself and we’re glad to have him onboard. We also added further UI touches that we believe enhance the overall user experience. You can find all of the Paranoid Android wallpapers and many more in the Abstruct app, included in our builds.
Our builds are based on the Code Aurora Forum Android base, which is optimized for Qualcomm platforms and has a higher degree of performance, battery life, and functionality compared to the Android Open Source Project platform. The Paranoid Android team and contributors are focusing on squashing existing bugs, and implementing and improving features, performance, and stability. We are dedicated to providing a user experience with the stability that you can expect from stock ROMs with best-in-class performance and features to help you get the most out of your device.
Notice
As we are growing on our list of supported devices in each release, we require of a stronger build environment so we can speed up the compilation process for releases. Based on the actual Quartz 4 list, we support over 30 devices, which takes between 2 and 3 days for all the builds to be completed without counting possible compilation issues or rebuild needs, based on our current specs.
We kindly ask all of you that are in position to donate anything, to help and support us so we can provide better and faster build releases, as well as increase the download speed of our servers, all looking for your enjoyment.
You can donate on the link below:
Donate
Device-specific issues
You tell me.
Note: Custom kernels are NOT supported!
Requirements
Make sure you've latest Stable firmware flashed before flashing the ROM.
Download
Get the latest OnePlus 5/T build Download
Changelogs
Keep an eye on our Twitter account, @paranoidaospa , as we will be posting about new features getting included in the release builds, as well as links to betas for those devices that will get them.
Paranoid Android Quartz released
Instructions
- This device runs under OxygenOS vendor, make sure you are coming from OxygenOS 10 or flash it from twrp just before flashing PA package.
**Format Data
Reboot to recovery (latest TWRP recommended)
Install PA zip package (Note: No need to flash GApps package separately, we include GApps in our ROM package)
Reboot
** Only required for the first flashing, and maybe optional.
Important / Useful links
Paranoid Android Twitter
Paranoid Android Channel (Telegram)
Paranoid Android Community (Telegram)
Help us improve PA by submitting detailed bug reports with logs. Learn how to take logs here.
Cheers and #StayParanoid!
XDA:DevDB Information
Paranoid Android Quartz, ROM for the OnePlus 5
Contributors
marcomarinho, xboxfanj, herna, kocaman1321
Source Code: https://github.com/AOSPA/android_kernel_oneplus_msm8998
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
ROM Firmware Required: OxygenOS 10 Stable
Based On: CAF
Version Information
Status: Stable
Created 2020-04-26
Last Updated 2020-07-21Wich properties should I check before installing? And wich commands should I use?
I'm currently checking abis, sdk version, and app version via
-'adb getprop' for device info
-'adb shell dumpsys package' for installed apps on device
-'aapt dump badging' for apk files in my HDD.
OS: Windows 10 1909 x64
Language: C# .NET
IDE: Visual Studio 2013XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceEasy management of android applications with a user-friendly interface. Can do almost everything you dreamed about with applications.
Hello XDA people! I am glad to present my new program to you. I have been developing it for several months and more than 2 thousand users have already used ADB AppControl on my regional forum. But now I'm ready to share with international community. Sorry for my English – I still need to use Google Translate, but I keep study))
Update 1.4.4 is already available! CHANGELOG
System requirements: Windows 7, 8, 8.1, 10 and .NET Framework 4.6 or newer.
Works with any types of Andoird devices (smartphones, tablets, TVs, etc)!
Requires Android 7 or above. I am working on Android 6 compatibility.
NO ROOT NEEDED!
Features:
- To work with the program, you do not need to know any ADB commands.
- If you are an experienced user, then you will find a convenient ADB Console, with quick commands support.
- It doesn't matter what you use: smartphone, tablet or TV - If Android inside, just connect the USB cable to PC, or, better yet, connect over the network.
- A list of ALL apps on your device, with icons and names, under your full control.
- Disable or uninstall power-hungry, adware, or any other applications, including system and pre-installed ones.
- Save applications list as a preset and share with other users, so that they can also get rid of unnecessary junk and bloatware.
- In AppControl, you can install all your apk at once using a multiple installation.
- You can download any application from your device. Or even all at once.
- Want more? Take screenshots, write logcat logs, use the shell and send files directly to your device! There is a large selection of tools just for you, which is regularly updated.
Quick start: Launch program, enable usb debugging on the your device and connect it by usb cable to PC. Click the Enable Network Debuging button (upper right corner) to connect to the device over the network.
Official website
User's Manual
Extended Version
Support the project
Important:
On PCs with Windows 7, if your device can not connect via usb, you need to install adb driver (I recomended to use my brand new Driver Installer)
Support device with android version below 7 may be limited.
To connect to the device by IP, first connect it via usb to the program and click the Enable Network Debugging button.
When you connect the device for the first time, the program will prompt you to install the ACBridge application.
This is my service application for android to provide data exchange between the device and ADB AppControl on a PC. It must be installed in order to be able to display application icons and their names, instead of their packages names like com.android.app. You can also use the program without ACBridge, but you will lose some of the cool features (no icons and no application names). Now ACBridge comes with the main program, but in the future I plan to add it to the Play Market.
The program has an Extended version with interesting features.
It was created especially for those users who like the program and who want more features.
Terms of Use
By using this program, you agree that the author is not responsible for any malfunction of your device and / or denial of warranty by manufacturer. ADB AppControl program is free for personal use. This is not an open-source project, therefore modification of the program is prohibited. All rights to the program belong only to its author. You may placing the program on other web resource, with a link to the program's website - appcontrol.neocities.org.
If you report problems, be sure to attach the console.log file from the program folder to the message!
Please leave your feedback and suggestions. They are very important to me and will help make the program better. I will be glad to everyone!
Update 1.4.4 is already available! CHANGELOG
The program can grant permissions for popular applications (in two clicks!)
Download ADB AppControl
Do you like ADB AppControl? Buy me coffee and support the project
XDA:DevDB Information
ADB AppControl, Tool/Utility for all devices (see above for details)
Contributors
Cyber.Cat
Version Information
Status: Stable
Current Stable Version: 1.4.4
Stable Release Date: 2020-10-07
Created 2020-08-15
Last Updated 2020-10-08Discussion about all aspects of the Galaxy Watch 3.
Threads:154
Posts:1,621
Ask your questions about the LG Watch W7 and get answers from the community! Please be as specific as possible when posting.
Threads:7
Posts:36
Latest:
20th October 2020 12:04 PM
Ask your questions about the Samsung Gear Fit2 Pro and get answers from the community! Please be as specific as possible when posting.
Threads:81
Posts:209
Latest:
22nd October 2020 05:39 PM
Ask your questions about the Samsung Gear Sport and get answers from the community! Please be as specific as possible when posting.
Threads:104
Posts:604
Latest:
24th October 2020 11:24 PM
Threads:1,008
Posts:12,741
Ask your questions about the LG Watch Style and get answers from the community! Please be as specific as possible when posting.
Threads:25
Posts:71
Latest:
30th June 2020 09:40 AM
Ask your questions about the LG Watch Sport and get answers from the community! Please be as specific as possible when posting.
Threads:145
Posts:1,287
Latest:
1st October 2020 11:30 PM
Ask your questions about the Huawei Watch 2 and get answers from the community! Please be as specific as possible when posting.
Threads:483
Posts:4,484
Latest:
10th October 2020 12:22 PM
Ask your questions about the Samsung Gear S3 and get answers from the community! Please be as specific as possible when posting.
Threads:2,332
Posts:22,118
Ask your questions about the Asus ZenWatch 3 and get answers from the community! Please be as specific as possible when posting.
Threads:180
Posts:2,343
Latest:
26th July 2020 02:38 AM
Discussion about the Moto 360 2015 (general, tips & tricks, etc)
Threads:348
Posts:2,919
Latest:
21st September 2020 03:19 PM
Discussion about the Asus ZenWatch 2 (general, tips & tricks, etc)
Threads:393
Posts:4,008
Latest:
12th September 2020 09:50 PM
Discussion about the Huawei Watch (general, tips & tricks, etc)
Threads:1,162
Posts:16,318
Ask your questions about the LG Watch Urbane 2 and get answers from the community! Please be as specific as possible when posting.
Threads:102
Posts:1,090
Latest:
21st September 2020 02:23 AM
Discussion about the LG Watch Urbane (general, tips & tricks, etc)
Threads:525
Posts:3,943
Latest:
14th October 2020 03:53 PM
Discussion about the Sony Smartwatch 3 (general, tips & tricks, etc)
Threads:851
Posts:10,397
Discussion about the Sony Smartwatch 2 (general, tips & tricks, etc)
Threads:132
Posts:1,642
Latest:
14th October 2020 07:38 AM
Discussion about the Samsung Gear S2 (general, tips & tricks, etc)
Threads:1,683
Posts:16,546
Latest:
6th October 2020 11:09 PM
Discussion about the Asus ZenWatch (general, tips & tricks, etc)
Threads:295
Posts:2,206
Latest:
11th September 2020 12:04 PM
Discussion about the Samsung Gear S (general, tips & tricks, etc)
Threads:1,373
Posts:17,941
Latest:
22nd October 2020 05:44 PM
Discussion about the LG G Watch R (general, tips & tricks, etc)
Threads:900
Posts:10,817
Latest:
Yesterday 09:23 PM
This forum is for all of your questions about the Moto 360. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:2,525
Posts:28,614
Latest:
11th September 2020 09:37 PM
This forum is for all of your questions about the Samsung Galaxy Gear. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:2,578
Posts:43,013
Latest:
2nd October 2020 11:12 PM
This forum is for all of your questions about the Samsung Gear Live. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:342
Posts:2,800
Latest:
7th December 2019 01:16 AM
This forum is for all of your questions about the LG G Watch. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:781
Posts:10,374
Latest:
9th October 2020 04:04 PM
This forum is for all of your questions about the Omate TrueSmart. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:598
Posts:9,691
Latest:
12th June 2019 01:41 PM
This forum is for all of your questions about the Samsung Gear Fit. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:644
Posts:7,264
This forum is for all of your questions about the Samsung Gear 2 Neo. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:433
Posts:3,012
Latest:
19th October 2020 02:50 PM
For discussion relating to the Sony Smartwatch
Threads:705
Posts:8,073
Latest:
23rd June 2020 01:44 PM
Discussion about the Samsung Gear 2 (general, tips & tricks, etc)
Threads:1,045
Posts:17,052
Latest:
4th October 2020 12:07 AM
For discussion relating to the Pebble E-Paper Watch
Threads:264
Posts:2,300
Latest:
19th October 2020 04:41 PM
Threads:22
Posts:80
Latest:
19th August 2020 11:45 AM
Discussion of all aspects of Amazfit smartwatches
Threads:1,948
Posts:34,648
Discussion for all other smartwatch devices
Threads:2,130
Posts:62,304You're busy and don't have time to wait, which is why you need to stop reading this thread and get back to organizing your Pogs. Rate this thread to express how the OnePlus 5 performs when multitasking. A higher rating indicates that the OnePlus 5 keeps many apps in memory so that they don't need to reload, and that when moving between apps, transitions are smooth and performance is excellent.
Then, drop a comment if you have anything to add!Free VPN Ninja best, free, fast and unlimited VPN proxy hotspot for android. Free VPN Ninja unblock sites and apps to protect your privacy. It changes and hide IP address, encrypts data and protect yourself and bypass internet censorship, unblock school WiFi and turns public Wi-Fi into a private network with secure and fast VPN connection. Unblock any sites, apps, games, global video streaming easily.
► Features of Free VPN Ninja
★ Fastest VPN hotspot connection
★ 60+ proxy server, high-speed VPN servers
★ Tap to connect VPN proxy server
★ Unlimited bandwidth
★ Unblock all sites and apps
★ Encrypted VPN more than secure other VPN.
★ Encrypt your data and protect privacy
★ Protect WiFi Hotspot
★ No registration or configuration required
★ VPN servers from all over the world.
Download click button easily on Google Play
[Mod Edit: Reference to promocodes removed]The LG G7 ThinQ is a 6.1" phone with a 1440x3120p display. The Snapdragon 845 chipset is paired with 4/6GB of RAM and 64/128GB of storage. The main camera is 16+16MP and the selfie camera is 8MP. The battery has a 3000mAh capacity.I flashed both orangefox and latest twrp, but I get black screen after going into recovery. System boots though.
What do? I have no recovery ATM. I can try going back to my latest version (2.8) but how do I actually manage to run latest versions without getting black screen?
I've been reading that It might be due to matching kernel that is missing, could it be? What should I do in this case?
Thanks!Samples
Original Camera x Camera M x GCam HDR+ : Sample 1, Sample 2
GCam HDR+ x Camera M : Sample 1
Original Camera x Camera M : Sample 1
Old:
https://i.cubeupload.com/BxqGVT.jpg
https://i.cubeupload.com/slXZ8t.jpg
https://i.cubeupload.com/4o9jFT.jpg (by @vagkoun83)
Don't hesitate to post your settings, samples and comparisons !
Features
- JPEG quality increased to 100
- Denoise responsible of the watercolor picture disabled
- Sharpness adapted before picture been processing to prevent watercolor picture
- IntelligentHQ : prevent higher ISO than needed in good light situation
- Possibility of choosing front camera sharpness in Settings
Before installing
If you have installed an update of Oneplus Camera before, you have to understand that the update is "above" the original system application. Because my mod replace the original system application, you will never see a difference because the current app will be the updated app and not the system app.
To remove the update, go into the App Info of Oneplus Camera, press the tree dots in the top right and press "Uninstall Updates". (thanks to @Im_Mattgame for this easier way)
Current settings I use
Sharpness for front camera => 3
Bugs known
Panorama and watermark doesn't work
Changelog
2018.07.22 - Based on new version 2.8.11. - Code base cleaned to prevent some errors. - Not adapted to OP6 yet ! 2018.02.22 - Quick fix concerning the new feature "IntelligentHQ". It should work more consistently now. 2018.02.21 - New feature "IntelligentHQ" : In good light situation, Oneplus Camera app tends to use a higher ISO than needed. In order to prevent this, when it's possible, I use automatically the HQ mode to lower the ISO rate. The picture will be more detailed and with less noise thanks to low ISO. Only works in "No-HDR mode", which is the default mode. - Sharpness decreased in really low-light situations to prevent oil-painted pictures - Panorama mode should work now (thanks to @DorianX) 2018.02.12 - Sharpness increased in really low-light situations - Sharpness decreased in good and mid light situations to avoid too much noise / oversharpening effect - Noise reduction is applied a bit earlier than before to avoid too much noise. Don't worry for the oil-painting effect I have adapted the sharpness for it - Remove of the switch for disabling noise reduction in Parameters : It causes too much confusion. I have seen many people asking if they need to enable it or not, so I remove it. When it was enabled, the picture quality was really bad compared to when it was disabled anyway. - Auto-HDR and HDR is now working like the original Oneplus Camera app - No-HDR is now by default. It gives better results than Auto-HDR, even when Auto-HDR doesn't not kick the HDR mode - Code base cleaned and prepared for the next "big" feature :) 2018.01.31 - Sharpness increased in some bright-light situations - Sharpness decreased in mid-light and low-light situations to mitigate "oil-painting" effect and others weirderies caused by Oneplus noise reduction. Pictures should be now more "natural", even with Oneplus noise reduction on. - Renaming of the switch in Settings because it caused confusion concerning the light situation. I added a subtitle which explains how and when it works. I STRONGLY ADVISE YOU TO NOT ENABLE THIS SWITCH. 2018.01.28 - Noise reduction enabled by default in pictures with ISO between 800 and 3000 (was already by default when ISO was upper than 3000) - Added a switch to disable noise reduction in low light (ISO between 800 and 3000). Not possible to disable when ISO is upper than 3000 because is really ugly without noise reduction. - Name of the version is included now in Settings to avoid confusion 2018.01.26 - Based on original version 2.5.22 - Fix for selfie pictures at 4MP (thanks for the report !) 2018.01.24 - Remove chroma noise and increase sharpness in bright light - Overall tune-in depends on the current light situation 2018.01.22 - Sharpness according to the current light situation has been tuned - Oneplus noise reduction was not enabled in extremely low-light picture, it should work now. 2018.01.21 - Luminance denoise is disabled now in Photo Mode. Was responsable of the "watercolor" effect. In counterpart, luminance noise is increased. - To prevent luminance noise, I decrease sharpness according to the current light situation but 100% of the time, it's better than picture taken by original camera app. Pictures are now on par with GCam HDR+. - Luminance denoise is enabled only in extremely low-light picture. - Auto-HDR mode will now never enable HDR mode. Is now like a no-HDR mode. 2018.01.13 - Portait Mode works - Modded process affects currently only the Photo Mode (not Portrait Mode, Pro Mode, etc ...) - Modded process is now customizable with 3 modes : Sharpness level in good light, in low light and for front camera. 1 is the default level use by Oneplus. So if you want to disable the modded process, you should put level 1 in the three modes. 2018.01.10 - Panorama works now - Settings menu revamped 2018.01.09 - Revert back to the original Oneplus process : better noise reduction - Sharpness increased to counter-balance the "over-blurring" effect made by original Oneplus process 2018.01.05 - Based on version 2.5.21 - Use of the alternative Oneplus process - Sharpness increased - Switch added in Settings for use of original Oneplus process 2017.12.15 Based on version 2.5.20 coming from new OxygenOS Oreo update 2017.12.15 Based on version 2.5.15 2017.12.11 Based on version 2.5.12 2017.12.07 Based on version 2.5.11 2017.12.04 First release
Downloads
Magisk Module
Big credits for
@jerkwad
@Youtube_Ll0r3nt3
Previous downloads viewsfor those devs that are using a free / paid app model, how do you keep track of users when they convert from the free to the paid version of the app?
Background: I have built a game app which has a free and a pro version. Users do not need to login to use the free version. When they upgrade to the pro version, Firebase / Google Analytics loose track of what that user has been doing in the past, because there is no userID tying the two apps together. This might be an edge case, but has anybody dealt with this before? Any thoughts would be appreciated
Cheers,
PhilippTested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.There are several methods of app monetization: You can display ads, divide the app’s functionality into “basic” and “pro” segments, and so on. However, a monetization model that is too aggressive -- displaying too many ads or setting an unreasonably high price -- may produce worse user experience. App development, therefore, is a constant struggle to balance monetization and user satisfaction.
We at Infatica, a global peer-to-business proxy network, have come up with another solution: SDK monetization.
How it works
You can implement the Infatica SDK into your application -- this will allow users to join our network. For providing resources of their idle devices, users will be rewarded with an ad-free app, premium features, or something else you’d like to introduce as a benefit.
Advantages
Implementing the SDK is worth the effort -- here are some of the advantages both you and your users will get:
Extra income: The SDK allows you to earn extra income. Naturally, you can combine it with any other monetization method.
Omni-monetization: You’re monetizing your users even if they aren’t visiting your app.
User loyalty: Users prefer to become a peer in our network rather than watch ads or buy subscriptions.
Better user experience: You’ll keep your retention rate safe due to better user experience -- you can offer your app without ads or for free.
Transparent rules: We don’t have any hidden terms. All the rules are clear, and we are diligent about following them
Lightweight: The SDK has minimal impact on the size of your app and doesn’t create additional load.
Wide range of platforms: We support monetization in both desktop (Windows, macOS) and mobile (iOS, Android) applications, as well as Chrome extensions.
Respect for user rights and user experience: Although app monetization is important, we hold our users even higher. To protect their rights and ensure the best user experience, we follow strict security measures and policies.
Money
The financial aspect of app development is especially important, so here’s a breakdown of how much money you can make: We pay per ACU (Average Concurrent User) per month, with an additional factor of user location.
Safeguards against abuse
SDK monetization offers some powerful features, so you’re in the right to think: “Is it safe for my users?” Yes, it is safe -- our security measures include strict compliance and network monitoring, ensuring that peer resources are only used legitimately.
Furthermore, we don’t collect or share with third parties any user data, with the exception of IP location data.
Apply here - infatica.io/sdk-monetization/
P.S. If you have any questions, you can leave a request with us and our managers will answer you.Its Amit,
I recently decided to bring back the dead soul of my old phone with the help of custom ROM's.When I searched for my phone i.e LYF Wind 3(LS_5502) on google i came with no result except for the TWRP Recovery.
By the way, my phone's i.e--LYF Wind 3(LS-5502) android version is lollipop V5.1.1. It's running stock android provided by the LYF company till then no updates,no security patches and no-nothing.
Then I decided to port ROM for my phone with the help of millions of tutorials and guide & also with intense work.
I finally had made a stable custom Rom-----MIUI-Pro Miui 8 on top of lollipop-V5.1.1.
It has following features:----->
- VOLTE Working{Added option to turn on and turn off volte}
- All Miui 8 Features
- Wi-Fi & Hotspot Working
- Bluetooth
- All sensors working
- Gesture-Anywhere feature
- Animation Control
- small DPI
- feature to disable buttons
- Themes Working
- All System app extra-customization
- Added feature to import third party themes
- Notification customization
- Home-screen customisation
- Mi Account{Working}
- App Lock
- Dual Apps
- Weather Mate(M8) intead of normal weather app
- Volume Boost
- Rounded-Corners
- Dolby Atmos Pre-installed
- Pre-Rooted
- Mix Explorer
- Jeejen Home
- Chinese Bloatwares Removed
- One-Handed Mode
- And many many many many many more
*But I faced some bugs like this which i was not able to solve.:--------->
I was not able to completely port camera.
When I start phone everytime(power ON), and open camera it work for a slight second(upto 4-5 seconds)but then after it says ''can't connect to camera''. And after it whenever i launch camera app it says the same.
Except Camera this ROM is smooth and very much stable than the stock one.
I'm using this for quiet a month and had felt no issues
It had better battery backup,batter RAM Management
If any dev is seeing this please help me solving th camera problem described above
And here is the link for the miui pro ROM :------->
https://drive.google.com/file/d/1mo7...w?usp=drivesdk
Note That Gapps are already included.
Procedure for Installing ROM:-------->
1) Download the ROM
2) Boot to twrp and wipe data,system,cache
3)Install the ROM so simple.
4)Enjoy!
SOURCE :
As The oem has not release the kernel source which is againt gpl that android follows.
So I have ported ROM on top of prebuilt stock kernel.
Kernel
Have Fun!!!
And
Once
Again
THANKS!The Samsung Galaxy Note 20 Ultra is a 6.9" phone with a 1440x3200p resolution display. The Qualcomm SM8250 Snapdragon 865+ chipset is paired with 12GB of RAM and 256/512GB of storage. The main camera is 108+12+12MP and the selfie camera is 10MP. The battery has a 4500mAh capacity.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingOnePlus has consistently made the fastest phones on the market. They continue that trend with the OnePlus 6. The OnePlus 6 has a 6.28" display with a 1080x2280p resolution. The Snapdragon 845 chipset is paired with 6/8GB of RAM and 64/128GB of storage. The main camera is 16+20MP and the selfie camera is 16MP. The battery has a 3300mAh capacity.RevengeOS is an aftermarket firmware based on AOSP. We are dedicated to a beautiful, fast, stable and minimal customized ROM, honesty and communication with our users, and openness with our code, Hope you will enjoy.
Please feel free to look, build, and use our code at RevengeOS GitHub.
Also, we got our Telegram Group to talk about the ROM, share some love, ideas or even have fun with us
Disclaimer: While we make every effort to test these builds as much as possible, we are not responsible for anything that may happen to your device, family, pets, or perception of reality. We ask that you do your part to know your device and know how to recover from problems before you flash! If you have questions, ask your fellow users or ask us in Telegram Group
Download ROM here for your device!
BRETZEL
What's Working
- Wi-Fi
- RIL
- Mobile data
- GPS
- Camera
- Flashlight
- Camcorder
- Bluetooth
- FMRadio
- Fingerprint
- Sound / vibration
BUGS:
- You tell me
Download the ROM
- Backup each and every partition from TWRP Recovery(optional)
- Make a full wipe (system, data, cache, dalvik)
- Flash RevengeOS Package
- Flash gapps
- Flash Magisk
- Wipe cache! -And at last Reboot!
[First boot will take few minutes! Have patience]
Clean Flash is always recommended!
If you want any bug to be fixed please write here on xda in detail. Give Logcats, mention your device name, mention if any mods and kernels, if used and please be specific about it. By helping us, you are helping yourself too.
->How to take Logcats?
https://goo.gl/UcTM9 and https://goo.gl/J4CSEP
Device Source
- Device Tree
- Vendor Tree
XDA:DevDB Information
RevengeOS, ROM for the Ulefone Armor X5
Contributors
Source Code: https://github.com/RevengeOS
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
ROM Firmware Required: Latest Global Firmware
Based On: AOSP
Version Information
Status: Stable
Current Stable Version: 3.2
Stable Release Date: 2020-09-07
Created 2020-09-07
Last UpdatedI've uploaded a script that will do it for you:
Download script here
Just unpack the zip file and either double click the "getlogs.bat" file or open an elevated command window (hold down shift and right click inside the folder then click on in this Open command prompt window here) folder and run the same script.
It will output 4 logs as follows, they will have a datestamp on them as well to help devs track version issues :
Logcat
Radio Logcat
DMesg Log
KMsg Log
Those are the four that any dev should need for any issue. Once you get the logs output you should then be able to attach them to posts here.
If you've never used any sort of ADB commands with your phone you may get a popup on your phone asking for permission to do so, you need to accept this in order for the script to work, feel free to right click the batch file and edit it to see what it does.
Once the log files have been output to the dated folder they will then also be added to a dated zip file to assist in uploading to either XDA or attaching to Google+ posts to assist developers.
If you are experiencing an issue while performing some action, please try the action shortly before getting the log so the results are shown without the dev having to search too deep into the log.I guess some of you encountered some weird Wifi bugs on the OP5, espacially delayed notifications and so on. @joshuous found out that this is due to a specific line/value in the /system/etc/wifi/WCNSS_qcom_cfg.ini (Nougat only) | /system/vendor/etc/wifi/WCNSS_qcom_cfg.ini file (Oreo), why he removed this for RenderZenith kernel (go thank him here ). So this Magisk module goes even a step further: It replaced the whole file of OnePlus by the stock Pixel 2 file. This line/value I am speaking of respectively @joshuous has found is not present in the stock Pixel file. Therefore I haven't encountered any delayed notifications. This mod has been tested now for several months, on OOS 4.x.x, OOS 5.x.x, OOS 9.x.x (means on Nougat, Oreo and Pie), on AOSP custom Roms, even back on my former HTC 10, Wifi always has been working fine without issues when this mod has been installed. So try it and enjoy.
Note:
This is for the OnePlus 5/T only, and I can't provide any help if you're using this on other phones. It might or might not work. It will most probably work on Pixel/Nexus devices, too. And it could work on every phone which runs AOSP, or not. It might work on other stock Roms than OOS. Who knows? So don't blame me if it doesn't. That's why I created this as a Magisk module, you can simply uninstall it again.
You have been told.
Update:
Officially confirmed working on the OnePlus 6 (running AICP), too, by @wartomato ! Thanks for the testing!
Thanks and credits:
@joshuous for his findings
@topjohnwu for Magisk
@shadowstep for his findings
Google...for being Google
Source code:
https://github.com/RogerF81/pennygetyourownwifiXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceQuote:
Originally Posted by joel11011
i want to help any thing contact me
I am using Acer tab developed under NAMO - Indian gov. . Its working on android 6 with 1 gb ram. It's gliching too much. Can I get android go without rout? My tab haven't got an updateWallpaperPicker https://yadi.sk/d/YPr9Pxth3PxPow
Girl Dancing LWP https://yadi.sk/d/hQJ1P9hNxrELa
1) T285_WallpaperPicker_C7
2) T285_WallpaperPicker_Note_7
3) T285_WallpaperPicker_S7_Gold
4) T285_WallpaperPicker_S8
5) T285_WallpaperPicker_S8_Plus
6) T285_WallpaperPicker_Note_8
7) T285_WallpaperPicker_A8_2017
8) T285_WallpaperPicker_S9My first focus will be to upgrade the icon database. This will include tapping into adaptive icon layers, creating your own icons, icon personalization and icon pack enhancements.
The next focus after that is the homescreen experience and how it can be better and smoother. This will include app menus, widgets, launcher menus, sheets, drag n drop and more.
GCA Launcher will also be introducing pro features to help support the funding behind development as Id love to keep maintaining and growing the launcher experience.EdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19These are mit themes to import on the best file manager ever created: MiXplorer, by @HootanParsa.
This first theme is based on Google Material Design 2.0, Windows Metro and iOS. Your MiX app will look modern and pleasant to use. Hope you like it but please note I'm offering these themes "as is", I'm not comfortable (and don't have much time) to deal with requests, please only report missing icons or something like that.
Installation:
Just open MiXplorer, select the mit file and click "import". Voila.
Please hit thank you if you liked my themes.
Changelog:
v 1.2 - Added db icon
v 1.3 - Added internal memory drawer icon
Black Version
White VersionI can't stress this enough.
People see your app, install it, look it, if they like it then it stays, otherwise its on its way to the recycle bin.
So if you want to get that perfectly looking mobile app, you need to have designing tools that will enable you to design your desired app.
From my experience, here are 5 of the best mobile app designing tools:
1. Adobe Photoshop
2. Sketch
3. Adobe XD
4. Invision
5. Marvel
Which tools have you used and which do you think are the best?In the event that you are utilizing any AOL email.We provide AOL email administration.On the off chance that you need any need email related assistance.you can contact our AOL customer support by dialing cost free +1888-477-5380.You will utilize our specialized help administration by distinguishing the main problem looked by you and afterward getting explicit answers for a specific issue. Our specialists are gifted and can expertly deal with the email issues emerging in your record.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThis tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCI'm making a menu and I want to add images to each item.
I have tried this:
<item android:id="@+id/TwitterMenu" android:title="Twitter" android:icon="@drawable/twitter_logo"/>
But Android Studio add a grey tint to it. I want the original colors of the picture. How can I do it?
Thanks!!Quote:
Originally Posted by joel11011
i want to help any thing contact me
I am using Acer tab developed under NAMO - Indian gov. . Its working on android 6 with 1 gb ram. It's gliching too much. Can I get android go without rout? My tab haven't got an updateHello there! Welcome to our Real Life Review section for OnePlus 5. Here we let the XDA
community vote on and review the various facets of a device. So jump in, contribute some ratings
& reviews. Just no iPhone jokes, kay?
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWell now it's back...
Thanks to some legwork (no pun intended) by @longshanks197 we now have a workable solution.
I have created this patch to fix the issue by patching the boot image and replacing sm.jar in system.
This will enable the adoptable storage feature in Settings>Storage
This should work for pretty much any Samsung device running Marshmallow
I advise making a backup with TWRP before proceeding.
NOTE: Due to Samsung's modifications the combined storage capacity may show as incorrect, ignore this and pay attention to the separate internal and external capacity which is correct.
INSTALL:
Copy the zip below to your device then install with TWRP.
adoptable_storage_enabler_ashyx
For information how to enable adoptable storage see the guide below:
how-to-use-adoptable-storage-on-android-6-0-marshmallow
This may also be worth a read for more info:
guidelines_for_marshmallow_users_formatting/
DONATE ME HERE IF YOU WANT TO BUY ME A BEER OR HIT THE THANKS BUTTON IF I HELPED YOU
.i want create a movie online app in windows phone 8. i use html agility pack to get list movie. but i dont know use html agiliti pack. help me or share source code demo. i use visual studio 2013. thanks all!
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceAnyone to help me how to go about creating drop-down menus on www.myhospitall.org I failed using the method I was told of using _submenu.
It worked out when I was using a custom theme on blogspot but the native theme isn't able to do using _
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceCUSTOM ROMS
============
Android 5.1.1 Lollipop (Stock)
Tinker V5 Edition based on the Samsung Stock Rom SM-T280/T285
Android 6.0 Marshmallow
Cyanogenmod 13 for the SM-T285 Only
OMNIRom for the SM-T285 Only
Android 7.1 Nougat
Cyanogenmod 14.1 for the SM-T285 Only (Experimental, things are broken, depcrated in favor of LOS 14.1)
LineageOS 14.1 for the SM-T285 Only
Other Operating systems
Porting for Sailfish OS is currently in progress for the SM-T285, stay tuned
TWRP RECOVERY AND ROOT
=======================
TWRP is available for both the T280 and T285. You should find the relevant threads in this Galaxy Tab A forum.
If you want to root stock, easiest way is to install TWRP and go for SuperSU. Please see the TWRP threads for SM-T280/T285 on how to root after TWRP is installed.
KERNEL
======
Custom kernel with working sources for the SM-T285 can be found Here
DEVELOPMENT
============
If you want to build LineageOS 14.1 on your SM-T285 LTE device, you can use this manifest, not that this is still a work in progress:
https://github.com/jedld/android.git
UPDATE 10/06/2016
================
After a couple of weeks of trial and error and tinkering, I've been able to compile a kernel for the SM-T285 from source and so far it seems to work flawlessly!
Screenshot here: http://imgur.com/a/HRgsq
link to my kernel sources here: https://github.com/jedld/kernel_samsung_gtexslte.git
You can also thank samsung for giving us a "broken by default" kernel source. I had to mix and match defconfigs from their other kernel releases just to make this thing work. Download modified boot.img here:
http://forum.xda-developers.com/gala...-t285-t3474967
UPDATE 09/20/2016
================
This device is now ROOTED!
http://forum.xda-developers.com/gala...2#post68777842
Download Pre-rooted Tinker Edition V5 in this thread: Tinker Edition Thread
Post Root Post Mortem Analysis for the SM-T285 (09/21/2016)
=========================
Q: How were you able to find root? What did you do?
A: Surprisingly the SM-T285 bootloader isn't actually locked like we thought it was (Once you OEM unlock of course and disable FRP). The bottomline is that
we simply needed patches to mkbootimg to properly package a boot image for this device as there were additional fields and sections not found on a normal boot image. There were even minor breaking difference between the tab 4 and the boot image for this device.
Q: I thought the bootloader was locked?? Why did it take so long?
A: I blame it on the really vague errors the bootloader shows when loading an improperly packaged boot image. What helped was my faith to open up a hex editor when I needed to, and really look at the stock images and the images we were making. What really pushed me to investigate further was the fact that I was able to make a really small modification to the ramdisk and use the abootimg -u update function instead of the create options.
Q: So the bootloader doesn't really check the image?
A: Yup, The bootloader doesn't do any check. I haven't checked if that is the case for the recovery partition though. Even without the SELINUXENFORCE headers at the end it still continues like other samsung devices do.
Q: So the mkbootimg patches are all that we need?
A: Yup, if you have CM, AOSP build env ready you can simply add the modified mkbootimg to system/core:
https://github.com/jedld/degas-mkboo...652a56b2e48322
Sample usage below:
degas-mkbootimg -o boot.img --base 0 --pagesize 2048 \ --kernel boot.img-zImage --cmdline "console=ttyS1,115200n8" --ramdisk boot_kitchen/boot.img-ramdisk-new.gz --dt boot.img-dtI've ported (or at least trying to) POSP to suzu (Xperia X) but I'm stuck in a bootloop caused by the audioserver service.
I've already tried changing the frameworks/av potato project to the aosp one (because aosp build and boot correctly with it) but I'm still stuck with the same error.
You can find the log taken from the bootloop device here.
If someone have an idea I'll be very grateful.
ThanksRegister or Login with Google
Tested a bit more and also with the latest canary. What I see is SN is passed and then failed on and on. Certain apps that check for root, like McDonald's and Netflix, show the same behavior when you hide EdExposed from them; they work (or in case of Netflix show up in the PlayStore) on and off.
It is not something from Google's side, I think, because the same issue shows on non-Google apps. Therefor it seems that the black list function in EdExposed cannot constantly hide EdExposed from the relevant apps (Google and the aformetioned apps).
How you hide edxposed ? You add in Application (black list) the Netflix & McDonald's ?
Install the HiddenCore module & restart : https://repo.xposed.info/module/com.cofface.ivader
When you boot, check with magisk the safetynet. You may pass it.
hidden core keeps my screen awake , what could be the cause
How you hide edxposed ? You add in Application (black list) the Netflix & McDonald's ?
Install the HiddenCore module & restart : https://repo.xposed.info/module/com.cofface.ivader
When you boot, check with magisk the safetynet. You may pass it.
do we still need the custom magisk fork for this on a10? (solohsu)If you're a mobile gamer, reverse tethering your device to your computer might solve some wifi lag issues. As for tethering, you can share your wifi and mobile data connection to your computer. I haven't tested if it bypasses carrier tethering restrictions, but I have added an option to change your user agent from the app.
If you're interested, DM me your play store email address, and I'll send you the link to the app within 24 hours. Thanks!
Note: It doesn't require root, and it doesn't require USB debugging (except on Windows). You will also need to install a desktop companion app for it to work. I'll send the download links via email.I tried, but it's not working. I'm stuck in download mode and it says invalid recovery .
Register or Login with Google
I tried, but it's not working. I'm stuck in download mode and it says invalid recovery .
i never had problems but reason is because older twrp is using android 9 sources and 10 is using 10 sources.. i just patched boot.img and flashed it and it rooted just fine if anyone just wants root
That statement is about as ambiguous as any I've seen posted. Mind giving a hint as what it was you tried?
Sorry yes of cause.
I successfully
- unlocked bootloader
- installed TWRP
- unencrypted partitions
- installed Magisk
- patched AP
after installing patched img. with Odin, no luck
stuck in bootloop
What file did you specify in the AP slot in Odin? The TAR file "magisk_patched.tar"? Or an IMG file you extracted from magisk_patched.tar?
The opening post of the thread says you don't need to use Odin to install Magisk, you can use TWRP. That post does say you have to use Odin once, to flash the stock ROM.The Samsung Galaxy S 5 is the successor to the popular Galaxy S 4. The 5.1" Super AMOLED display has a resolution of 1080x1920. The Galaxy S 5 is powered by a 2.5 GHz Qualcomm Snapdragon 801 processor with 2GB RAM. Internal storage comes in at either 16GB or 32GB, with a microSD slot up to 128GB. The 16MP camera is capable of 4K video recording and real time HDR photos. Along side the camera flash is a heart rate sensor, which can be used with Samsung's S Health software. The S 5 has a 2800mAh battery providing power.I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveNow on functionality of our App:
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI'm seeing some strange error messages inside the Recovery Mode of my Galaxy Tab A (SM-T550):
"E: couldn't load bitmap pocchange_00009 (error -7)"
........
"E:failed to open /dev/block/boot/device/by-name/misc: no such file or directory"
- please see attached photo of screen.
Important to note that this tablet has never been rooted or had a custom recovery or rom put on.
Stock all the way.
I tried a factory reset and even flashing the original firmware via Odin.
Unfortunately neither of these made these weird messages disappear.
Any ideas??It's amazing how much we actually use our phones in a given day, especially when we watch "videos"! Rate this thread to express how many hours of screen-on time you can get on the Samsung Galaxy Tab A series before depleting the battery.
I've been truly impressed by this tablet's battery life. Owning it for a few months, I recently switched to the Nexus Stock rom (Android 9.0, stock kernel, no root, no app for optimizing battery).
Test conditions:
- Wi-Fi always turned on
- Bluetooth turned for several hours
- Moderate usage (reading comics, listening to music, not very demanding games)
- Not many apps in the backgroud, just Facebook, Messenger and Discord
With this I managed to get more than 14h30 of SoT from 100% to 5%. Never seen such a good SoT before
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI had installed xda navigation control app but I uninstalled it as I didn't like it (ACCORDING TO THE INSTRUCTIONS). After uninstalling, the navigation bar disappeared but still the gestures were not disabled. I tried reinstalling and uninstalling the app again and also tried to restart my phone but it didn't do anything. Please help me out.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI can't stress this enough.
People see your app, install it, look it, if they like it then it stays, otherwise its on its way to the recycle bin.
So if you want to get that perfectly looking mobile app, you need to have designing tools that will enable you to design your desired app.
From my experience, here are 5 of the best mobile app designing tools:
1. Adobe Photoshop
2. Sketch
3. Adobe XD
4. Invision
5. Marvel
Which tools have you used and which do you think are the best?Tested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Nexus 9 was designed and developed by Google, in conjunction with HTC, and released in Q4 2014. It features an 8.9" IPS LCD display with 1536 x 2048 resolution. It's powered by an Nvidia Tegra K1 dual-core 2.3GHz processor and 2GB of RAM. Internal storage is available in either 16GB or 32GB. The Nexus 9 features a large 6700mAh battery, and 8MP camera, with 1080p video recording, along with a 2.1MP secondary front facing camera.Invalid Announcement specified. This can happen for a variety of reasons-- most likely because the thread or post you are trying to view has been moved or deleted. Please return to the forum home
and browse for another similar post.I am looking for a way to import arguments into came from a c# so does application. I am creating an application but I cannot find a way to allow me to code the arguments to import. All help appreciated.
Sent from my K013 using TapatalkThe OnePlus 5 is one of the most anticipated phones of 2017. The 5.5" AMOLED display has a 1920x1080p resolution. The Snapdragon 835 chipset is paired with options for either 6 or 8GB of RAM. Storage comes in 64 and 128GB options.The main camera on the OP5 has a dual lens setup with 20+16MP sensors, making it the highest resolution dual-lens camera on any smartphone. This phone is powered by a 3300mAh battery with the signature Dash Charge from OnePlus.Will try MSM some day maybe. Is it stock android/Pixel like by default? Someone on the first page of the MSM thread posted screenshots and it looked really trash, with some cheap looking theme that looked like it was from 5 years ago, and the apps/QS having like 5-6 icons per row and per column. I'm not sure if the guy customised it to look like that or if it's the only choices we get. If it's close to stock and relatively stable I'll give it a go.
Currently not having any issues with YAAP, only annoying thing is the AOD brightness is super low and can't be adjusted, only lights up on notification, but I guess that's with all A11 ROMs.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceHi. I have a galaxy s10+. Problem is when i am on a normal call and someone calls me on whatsapp, the speaker turns on automatically. I have a nokia 6 and an huawei nova3i and on these devices if i am on a normal call i will get a notification of the whatsapp call after my normal call is done. How do i do the same for my s10+.
I have tried factory reset and it is still the same. I have tried with only whatsapp installed and no other application and it is the same. Need help guys!!!!
ThanksAll the links are working well
I guess it's because of people like you, that we users are forced to use ad-blockers. Shame one you. It's good that XDA is dying slowly, as people like you will always give a bad experience to the users. Happy money making from that ad infested siteedit: fixed at latest update thank you
Register or Login with Google
Installed fine on Redmi Note 3 pro +android 10 havoc rom stock bloody kernel. Log shows 44 fails. Not sure if placebo but phone seems snappier for sure. Will test further. Good work dev.
One question I use fde.Ai app. Do you suggest turning it off when using ktweak?
ctl kernel.sched_min_task_util_for_boost 25
ctl kernel.sched_min_task_util_for_colocation 50
This is absurd. There is no such parameter.
It may this ?
ctl keenel.sched_little_cluster_coloc_fmin_khz 740000
ctl kernel.sched_min_task_util_for_boost_colocation 1
Enlighten Me
You seem to have a lot of actual good knowledge about kernel tunables - would you consider including multiple profiles for KTweak, i.e. also putting together a Battery life oriented set of tweaks?
Latest version running great on a Note 8 with Android 8.
I wish there was a way (via this script or another) to actually turn off ALL debugging and logging system and application wide continuously going on.. the whole thing, off. That would make such a improvement in overall performance for those (like me) that absolutely care nothing or have zero need for any logs or debug info on their system.
Either way, thanks for the Ktweak development. I feel my aging phone slightly snappier and less laggy from these past almost 3 years of use
OnePlus 3T on OOS 9.0.6 with arter97's kernel. Geekbench benchmark before and after ktweak. Phone feels somewhat snappier. Had no freezes/hanging or reboots. Thanks for your work!
There is a way to disable logcat and dmesg for a marginal improvement in CPU and possibly memory management, however multiple devs have asked me to keep them enabled to allow them to get logs for custom kernels / apps, etc. The gain would be very very marginal though.Hi.
Based on the feedback from this thread, the following steps can be used to aquire root on the SM-T590. The process is quite similar to rooting other devices by using Magisk. It might also work on other versions of the SM-T59x family, which can be OEM unlocked (sorry Verizon users).
Obtain the boot image
- Get the firmware that matches the version installed on your device. This is important, otherwise you can easily end up in a bootloop.
- Extract the AP tar.md5 file, e.g. "AP_T590XXU2ARJ1_CL14463952_QB20043720_REV00_user_ low_ship_MULTI_CERT_meta.tar.md5".
- Upon the extracted files, there is a file called boot.img.lz4. Extract it. Important: Most standard compression tools, e.g. 7-zip, are unable to extract lz4 compression ccorrectly. Use the offical lz4 binary from your Linux distribution or get the Windows version here. Once extracted, you should have a file called boot.img.
- Copy the boot.img file to your device.
- Download and install the Magisk Manager apk from the offical Magisk Thread.
- In Magisk Manager settings, set the image format to "img.tar".
- Enable the "Keep AVB2.0/dm-verity" in the Magisk main screen.
- Hit "Install" and select "Patch boot image".
- Select the boot image copied previously to your device.
- Once finished, the patched image will be located in the Download directory on the internal storage.
- Copy the patched image back to your PC.
Unlock and flash
- Go into settings and enable developer settings.
- In the developer settings, select OEM unlock, read the help text and enable the unlock, if you consent.
- Once the device is factory reset and rebooted, turn the device off.
- Boot the tablet into download mode.
- Flash the patched boot image with Odin in the AP-slot
- Reboot, Install Magisk Manager apk again and check if root is available.
Have fun.
Thanks to @gscollier, @airmaxx23 and @EinsamerSpieler for testing.Register or Login with Google
China English [ROM]
OnePlus 5 - MIUI12 12.0.1 Android 9 original post https://www.oneplusbbs.com/thread-5614366-1.html
https://drive.google.com/file/d/1AnG...ew?usp=sharing
OnePlus 5 - MIUI12 12.0.1 Android 10 original post https://www.oneplusbbs.com/thread-5611433-1.html
https://drive.google.com/file/d/1SDG...ew?usp=sharing
You have qouted them...I do not get carrier data on my phone, discovered the issue today while on the road trying to use Maps. I guess I've always been on WIFI and that's why I have not detected the problem. I'm now at home and have tested bot MSM and crDroid and none of them gives me 4G data access. OOS10 no problem whatsoever 4G and fast. Is this an issue with my network provider or do I have to tweak something?
Tried clean-flashing both straight after factory wipe of OOS10 with working data.
Just Tested, [ROM][11.0] Yet another AOSP project [OP5/5T][ALPHA][18-10-2020], and it works, gives me 4G Lte+ right away.
NR/LTE/TDSCDMA/CDMA/EvDo/GSM/WCDMA
Something for next buildXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceOnce the user connects to that Wifi, he gets a popup to install that chat room app and he could view the chats of all the people and can reply back in the chat window. People can start many discussions and everyone connected can view, post and comment.
If this kind of an app is already available, please let me know the app link.
Thanks,
RakeshThe dual-SIM Xiaomi Redmi Note 4 was released in August 2016. It features a 5.5" 1080p IPS LCD display, 2.1GHz deca-core MediaTek MT6796 chipset, and comes with either 16GB internal storage and 2GB of RAM, or 64GB internal storage and 3GB of RAM. The rear camera has a 13MP sensor, with a 5MP camera up front. The Xiaomi Redmi Note 4 is powered by a 4100mAh battery, with fast charge technology.The OnePlus 7T Pro McLaren is a 6.67" phone with a 1440x3120p resolution display. The Qualcomm SM8150 Snapdragon 855+ chipset is paired with 12GB of RAM and 256GB of storage. The main camera is 48+8+26MP and the selfie camera is 16MP. The battery has a 4085mAh capacity.App monetization is a problem that app developers have been facing since the medieval times. Now finally there is a simple and zero cost solution. With it app developers can achieve an average revenue 60p-80p per DAU (additional revenue if you are already monetizing). The deployment requires a simple web URL integration in the app. This highly engaging new revenue stream also leads to increased retention. The name is Qureka Lite
What is Qureka Lite and what does it do?
Qureka Lite is a mWeb version of Qureka app that can be easily deployed through URL integration onto the web/ mobile destinations. Qureka app is a top-rated interactive Quiz based game show app on play store with 15 mn+ installs in India, it offers non-monotonous fresh content like Quiz shows, prediction, casual games in innovative formats.
Making money using Qureka Lite is literally effortless and sky is the limit
The ad revenue generated on Qureka Lite is shared with the publishers on 50:50 basis. We target average revenue of 40p per DAU to begin with and grow it to Rs. 1 per DAU in a year’s time. Our publishers usually hit average revenue of 60p+ within one week of going live. So an app with 10,000 DAU’s can go from Rs. 1.2 Lacs of revenue in the first month to Rs. 3 Lac per month in a year’s time. The math is simple.
Engage users like never before. Once they are in they’ll stay for some time
Users play games (Quiz shows & prediction games) on Qureka Lite in your in app browser. The topics of these games range from news, sports, current affairs, entertainment, science, culture and more. Average time spent on these games per day is 25 mins – 30 mins per user because of their highly engaging nature.
It is literally money for nothing
All this comes at absolutely no costs not even hidden. Running cost, server cost and all other cost are borne by Qureka Lite. Money only flows in one direction – to the publisher
User engagement and monetization is a science and we have cracked it
With the backing of Indian Internet Giant – Times Internet, Cool Boots Media (Parent company of Qureka Lite) has become industry leader in user engagement and monetization. With a strong content team, category experts, robust gaming engine and content management algorithm at place the expertise extends to product and design management for a seamless integration flow and user experience.
To know more email us at [email protected]XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceI'm working for one company that makes eletric bikes. Currently we have an app which is used as extended dashboard for the bike and to control your bike when you are not using it. Now we are thinking of extending some of our functionality and one of our feature request would be to use Android Auto within our bike infotainment. My question is whether something like this is 'legit' (Can such an application be approved by Google) ?
Or to be more precise, here is user story request: "As a company that manufacturers e-bike solutions, we want to build bike infotainment that supports Android Auto, so that riders can run all apps that have Android Auto support on e-bike infotainment."
Thank youDiscussion about all aspects of the Galaxy Watch 3.
Threads:154
Posts:1,621
Ask your questions about the LG Watch W7 and get answers from the community! Please be as specific as possible when posting.
Threads:7
Posts:36
Latest:
20th October 2020 12:04 PM
Ask your questions about the Samsung Gear Fit2 Pro and get answers from the community! Please be as specific as possible when posting.
Threads:81
Posts:209
Latest:
22nd October 2020 05:39 PM
Ask your questions about the Samsung Gear Sport and get answers from the community! Please be as specific as possible when posting.
Threads:104
Posts:604
Latest:
24th October 2020 11:24 PM
Threads:1,008
Posts:12,741
Ask your questions about the LG Watch Style and get answers from the community! Please be as specific as possible when posting.
Threads:25
Posts:71
Latest:
30th June 2020 09:40 AM
Ask your questions about the LG Watch Sport and get answers from the community! Please be as specific as possible when posting.
Threads:145
Posts:1,287
Latest:
1st October 2020 11:30 PM
Ask your questions about the Huawei Watch 2 and get answers from the community! Please be as specific as possible when posting.
Threads:483
Posts:4,484
Latest:
10th October 2020 12:22 PM
Ask your questions about the Samsung Gear S3 and get answers from the community! Please be as specific as possible when posting.
Threads:2,332
Posts:22,118
Ask your questions about the Asus ZenWatch 3 and get answers from the community! Please be as specific as possible when posting.
Threads:180
Posts:2,343
Latest:
26th July 2020 02:38 AM
Discussion about the Moto 360 2015 (general, tips & tricks, etc)
Threads:348
Posts:2,919
Latest:
21st September 2020 03:19 PM
Discussion about the Asus ZenWatch 2 (general, tips & tricks, etc)
Threads:393
Posts:4,008
Latest:
12th September 2020 09:50 PM
Discussion about the Huawei Watch (general, tips & tricks, etc)
Threads:1,162
Posts:16,318
Ask your questions about the LG Watch Urbane 2 and get answers from the community! Please be as specific as possible when posting.
Threads:102
Posts:1,090
Latest:
21st September 2020 02:23 AM
Discussion about the LG Watch Urbane (general, tips & tricks, etc)
Threads:525
Posts:3,943
Latest:
14th October 2020 03:53 PM
Discussion about the Sony Smartwatch 3 (general, tips & tricks, etc)
Threads:851
Posts:10,397
Discussion about the Sony Smartwatch 2 (general, tips & tricks, etc)
Threads:132
Posts:1,642
Latest:
14th October 2020 07:38 AM
Discussion about the Samsung Gear S2 (general, tips & tricks, etc)
Threads:1,683
Posts:16,546
Latest:
6th October 2020 11:09 PM
Discussion about the Asus ZenWatch (general, tips & tricks, etc)
Threads:295
Posts:2,206
Latest:
11th September 2020 12:04 PM
Discussion about the Samsung Gear S (general, tips & tricks, etc)
Threads:1,373
Posts:17,941
Latest:
22nd October 2020 05:44 PM
Discussion about the LG G Watch R (general, tips & tricks, etc)
Threads:900
Posts:10,817
Latest:
Yesterday 09:23 PM
This forum is for all of your questions about the Moto 360. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:2,525
Posts:28,614
Latest:
11th September 2020 09:37 PM
This forum is for all of your questions about the Samsung Galaxy Gear. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:2,578
Posts:43,013
Latest:
2nd October 2020 11:12 PM
This forum is for all of your questions about the Samsung Gear Live. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:342
Posts:2,800
Latest:
7th December 2019 01:16 AM
This forum is for all of your questions about the LG G Watch. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:781
Posts:10,374
Latest:
9th October 2020 04:04 PM
This forum is for all of your questions about the Omate TrueSmart. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:598
Posts:9,691
Latest:
12th June 2019 01:41 PM
This forum is for all of your questions about the Samsung Gear Fit. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:644
Posts:7,264
This forum is for all of your questions about the Samsung Gear 2 Neo. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.
Threads:433
Posts:3,012
Latest:
19th October 2020 02:50 PM
For discussion relating to the Sony Smartwatch
Threads:705
Posts:8,073
Latest:
23rd June 2020 01:44 PM
Discussion about the Samsung Gear 2 (general, tips & tricks, etc)
Threads:1,045
Posts:17,052
Latest:
4th October 2020 12:07 AM
For discussion relating to the Pebble E-Paper Watch
Threads:264
Posts:2,300
Latest:
19th October 2020 04:41 PM
Threads:22
Posts:80
Latest:
19th August 2020 11:45 AM
Discussion of all aspects of Amazfit smartwatches
Threads:1,948
Posts:34,648
Discussion for all other smartwatch devices
Threads:2,130
Posts:62,304This is going to be quite helpful to people who are just starting out with modding this device. Great work, shadowstep!
Kudos to you, shadowstep. Definitely a well put together guide.
Register or Login with Google
Wow man. Great Great work. And hats off for your dedication.
Really well done bro.
Good job
Pretty sure at least a few of these will come in useful to more advanced users as well, but yeah.
Kudos to you, shadowstep. Definitely a well put together guide.
This is a really, really good useful thread.
Nice one for putting it together, i'm sure this will help a lot of people when looking for certains things. As they all can now be found in 1 single thread.
Hats off to you.
Good job man, thanks
Great thread!!
You can also add magisk modules created by you for op5 gcam.
@shadowstep You might want to add this thread to the list, I created a batch script when I had my OP2 which will capture all the logs a developer might need to debug an issue, should work with any Android phone including the OP5:
https://forum.xda-developers.com/one.../logs-t3533826
I did make an executable (.exe) version too but some AVs might flag it due to the tool I used, it's just an exe which contains all the files required inside it, which it extracts temporarily when it's run, they then disappear again once it's done :
https://androidfilehost.com/?fid=529152257862698787
August 23, 2018
The new 5.1.5 stable build has been running great, but I miss the updated OnePlus Dialer introduced on the latest Open Betas with rectangles for contact pictures instead of circles. Tried installing the the last apk, com.android.dialer_19.0.0.180505154345.5f45edf-250000_minAPI23(nodpi).apk, uploaded from apkmirror.com over the current dialer, however then it immediately crashes when trying to open.
Thought about trying to remove the older dialer from the system app directory, and replacing it, but was worried that might not work. Anyone happen to do this successfully, or have any suggestions?
This indeed seems useful! I just tested this and it grabbed logs alright. If you don't mind, let me find some time later on in the week and I'll try and clean up the batch script a little along with updating the ADB and 7-Zip libraries that you are shipping in your zip file (since there are newer ones available). Once that is done, I'll add it to the collection. Thanks for your work!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThis forum is for all of your questions about Android Development and Hacking. If you need help troubleshooting a problem, please be as specific as possible by describing your software configuration, including the ROM, kernel, and any modifications you've done.The Honor View20 is a 6.4" phone with a 1080x2310p resolution display. The Kirin 980 is paired with 6/8GB of RAM and 128/256GB of storage. There are three cameras on the back, featuring a dual 48MP main camera and a TOF 3D stereo camera. The main camera has a single 25MP sensor. The battery has a 4000mAh capacity.The Samsung Galaxy Z Fold 2 is a 7.7" folding phone with a 1536 x 2152p resolution display. The Qualcomm SM8250 Snapdragon 865+ chipset is paired with 12GB of RAM and 512GB of storage. The main camera is 64+12+16MP and the selfie camera is 10+10MP. The battery has a 4356mAh capacity.Register or Login with Google
I'm assuming this also won't work on devices that shipped with older OS and were officially updated to Oreo?
I have an Axon 7 on Oreo and the normal thing is to regress them to unlock bootloader.
Anything for the ZTE Blade A462? It's based on the Snapdragon 210 SoC.
Tried on ZTE Zmax 2 (Z958) US Version (AT&T but unlocked) with Android 5.1. I had to use QFIL that comes with the latest QPST v2.7.480 to be able to successfully dump the partition data. However, there is no `/devinfo` partition. So I've no clue what to do from here.
Can you post a picture or a list of partitions you had?
I dumped all partitions (except cache, system and userdata), and discovered the string ANDROID-BOOT! appeared 3 times in the "aboot" partition. The first time seems to be followed by ASCII string content, but the 2nd and 3rd time it is followed by a bunch of 00s. Should I be editing these?
No do not edit the aboot partition, you will brick it if you flash your modified one.
Thanks for the alert! Here are the screenshots showing my partitions
Got it to work! But now I'm a little confused on how to actually get into the bootloader. There's an option in recovery to "reboot into the bootloader" but it looks like it just reboots like normal into the system. Sorry for my ignorance. On my Nexus 7 I use fastboot to flash twrp in the bootloader.
I haven't seen one for it, but you can try this one from the A460 you have a good chance of it working.
https://github.com/programmer-collec...ehose_8909.mbnAs I don't want to pay for another Fi account, I ordered (for free) a data-only SIM from Google - it works perfectly. Normally, I run off of wifi only, turning Airplane Mode on first, then turning on wifi. I've traveled with it outside the house once, and used the data SIM very nicely. As a Fi user, I can also make calls from it, over data, wifi or LTE.
Some notes on the tablet:
Good:
1. It is fast enough for all my needs, and with a micro SD in addition to the SIM, set as additional storage, I have plenty of room for my needs. NOTE: I don't play games, so I can't comment on game performance.
2. Face recognition works well as long as there is enough light - in dim light, you will have to use PIN/Password, as there is no fingerprint reader.
3. I was able to source a case via Amazon, there are a number of choices.
4. USB C
Not So Good:
1. No fingerprint reader.
2. No ambient light sensor, so you will be adjusting lighting manually. There are apps which use the camera for this, but then you will lose face recognition unlocking.
3. Samsung's Usual Bloatware: I use virtually none of it, not even Touchwiz, as I prefer Nova.
4. Although the case has magnets, they won't turn off the screen when the cover is closed, you will have to turn it off manually or wait for it to timeout.
5. Running Android 9, and nothing available as to when, if ever, it will get an upgrade.
6. Security patch is Feb 1, 2020 and no idea if/when it will get another.
Using the XDA app.. it identifies as an AT&T Samsung Galaxy Note 3 !
All in all, I judge this to be an 'OK' but not great effort from Samsung for $264. For a few more bucks, it could have been a lot better. If the Lenovo new M8 had not been out of stock, I might have bought it instead and saved $130.
You can find the T-Mobile version at: https://www.samsung.com/us/mobile/ta...m-t307uznatmb/
regards, JohnXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Service@73sydney Labeling the icons was a topic on the chat already… and an issue on github, I think. The UI has been updated, but is still evolving. That's why it's hard to write good documentation without having it outdated after 1 or 2 months again.
Regarding your issues:
You might have missed to confirm the filter with the green button on the bottom (you might have to scroll down in the fragment a bit).
If you want to backup something, just tap on the app and select backup on the bottom of the "AppSheet" that appears then. Or you can do a batch backup if you change the mode to it with the icons that come up when you scroll up a bit (hint: keep pressing a button to get a hint what the button does). I think, there is a high chance, that some of you apps fail to be backed up because of symlinks. Version 4 should be more reliable.
Just give it a try, don't be sad, if it doesn't work perfectly. The development is still very active (removing/replacing legacy stuff, making sure the data is consistent, optimizing the performance etc). Some people tried the new version 4 and reported new bugs and it's known that the UI has some issues because a central structure was replaced and it seems that there are still some combinations of the settings that cause issues.
Maybe it's the right time, to invite some Android experts. Currently the data consistency is a hot topic. To close an app or not to close an app, how is it restarted at the end and how to keep it from restarting during backup? If anyone wants to join, just join via Matrix or Telegram.
I'll check out github issues though in future
I did tap the confirm button, it seems to do something but then comes back with no apps lin lis resetting to default (paraphrasing as away from device at the moment)
Literally nothing i tried got me all my user apps ticked ready for backup, if youre saying that i have to tick then one by one, then we're going to have an issue friend
So as yet, havent even tried a backup bacause i cant (short of ticking every app, skipping over the systenm and other special items ive asked the filter to hide but it doesnt) select the apps i want to backup...kinda catch22
Look im willing for anyone to piont out where im going wrong and even me made to feel like a numpty, but im a relatively smart guy, i have my full frontal lobe intact and ive managed to figure out every app in Android history until now
I get that youre also in the deep end currently with updating to a v4, so perhaps ill monitor and check back in when the dust settles a bit!
Cheers for the replyFull description: This is a card game
Now, my full description used to be a lot more detailed than that, but I cut it down to the bare minimum to try to narrow down why Google keeps rejecting me.
Obviously they don't like "Cards Against Humanity" being in there. This is the email I keep getting:
"Thanks for submitting your app to Google Play. I reviewed <app name here>, and noticed some keyword spam issues that need to be corrected.
Here’s how you can submit your app for another review:
Sign in to your Developer Console and remove any irrelevant keywords from all translations of your store listing.
Review your app to make sure it’s in compliance with the keyword spam policy and all other policies listed in the Developer Program Policies.
Submit your app."
I searched and there are plenty of apps on the play store with multiple mentions of "Cards Against Humanity" throughout their descriptions. Mine used to be one of them. But now, when I update my app, any mention of "Cards Against Humanity" gets rejected.
Google's support has been absolutely horrendous on this matter. I tried their chat support to which they said we don't handle policy issues through chat and their email suggestions have been very vague as you can see above.
Has anyone else run into anything like this? I feel like I'm screwed. I spent a very long time developing this app and now nobody is going to be able to find it because I can't mention the actual game that it's based on.ArrowOS
ABOUT
ArrowOS is an AOSP/CAF based project started with the aim of keeping things simple, clean and neat.
Website: https://arrowos.net
Telegram: Channel | TG Portal/Links
Github: https://github.com/ArrowOS
Code Review: review.arrowos.net
E-mail: arrowos.contact
PayPal: Donate to us
Blog: blog.arrowos.net
Checkout more documentation at (maintainership/contributing): Check this out
WHAT WORKS?
WHAT DOESN'T WORK?
DOWNLOADS
Click here to Download
Tip: Select OEM -> Device, choose GAPPS or VANILLA variants
Read our blog article/post about
* info about GAPPS and VANILLA variants
* Checking build integrity
ROM Source: https://github.com/ArrowOS
Kernel Source: https://github.com/ArrowOS-Devices/a...neplus_msm8998Say "cheese", then rate this thread to express how photos taken with the OnePlus 5 come out. A higher rating indicates that photos offer rich color (without over-saturating), sharp detail (with all subjects in-focus), and appropriate exposure (with even lighting).
Then, drop a comment if you have anything to add!
Reason? : No OIS, boooo
Test for proof - When a passenger in a car or bus, record a video whilst zoomed in, good lighting, check the shake it's woeful.The Samsung Galaxy J1 is a 4.3" phone with a 480x800p resolution. The Spreadtrum chipset is paired with 512MB of RAM and 4GB of storage. The primary camera is 5MP and the selfie camera is 2MP. The battery has a 1850mAh capacity.Building on the success of the original Galaxy Note (N7000), Samsung has managed to fit a 5.5" Super-AMOLED screen on the Note II. Preserving the unique S-Pen from the previous iteration, and complementing the old model with an extra gigabyte of RAM, and an upgraded processor, available in 16, 32 and 64 GB capacities, all with micro SD storage, the Note II is the must-have phablet (phone-tablet) of late 2012.The ASUS ZenFone 6 (2019) is a 6.4" phone with a 1080x2340p resolution display. The Snapdragon 855 is paired with 6/8GB of RAM and 128/256GB of storage. The main camera is 48+13MP and the selfie camera is a motorized flip-up main camera module. The battery has a 5000mAh capacity.Unlock Bootloader by @mingkee
TWRP Recovery by @Magendanz
Custom ROM Nexus Stock by @Magendanz - current release is SM-T510 only
Custom ROM LineageOS 16.0 by @Magendanz - SM-T510 only
All credit to @Magendanz and @mingkee for those.
Below are my own observations which supplement but do not replace the guides above. The original posts includes important information not quoted below. You need to read the relevant guides above (depending on what you want to do), and you may get some additional benefit from reading my thoughts below before following the guides above.
To root your device you need to first install the TWRP recovery. @Magendanz includes TWRP in his ROMs, so you have two options, TWRP without custom ROM, or TWRP with custom ROM.
To be able to install a ROM or recovery you first need to unlock your bootloader.
WARNING - take note of the kernel version of the custom ROM or TWRP you intend to use, e.g. T510XXU2ASI4. Newer bootloader releases will sometimes prevent downgrading, so if you flash a firmware/ROM/TWRP with a later kernel version you may not be able to flash your desired custom ROM without problems, or flashing an older version than you are currently running may trigger anti-rollback mechanisms. Magendanz suggests matching the version exactly.
There are then two paths:
Original ROM:
- Read the TWRP instructions
- Download any zip you plan to flash (install) from TWRP (e.g. Multi-disable and Magisk) and save to your sdcard. Internal memory will be wiped (formatted) as a necessary step in installing TWRP (if you follow the instructions correctly). Note that the folder /sdcard is part of the devices internal memory, your actual sdcard data can be found in something like /storage/ABCD-1234 in Android, or external_sd in TWRP.
- Unlock Bootloader - Click to see original post:Disclaimer: your tablet warranty will void. Proceed with your own risk
Warning: your personal data, except on external SD card or USB drive, will be wiped during the process!
Prerequisite:
Host PC installed Samsung Smart Switch
USB C cable
Your tablet battery should be 70% or higher and you have done data backup
OEM Unlock enabled
1. About tablet
2. Software version
3. Hit Build Number few times
4. Enable USB Debugging
5. Allow your host computer
6. If you don't see OEM Unlocking, wait for 7 days or do the following trick
https://www.xda-developers.com/fix-m...galaxy-note-8/
Are you ready? Let's do it.
1. Turn your tablet off and disconnect USB cable
2. Press and hold both volume up and down buttons and connect to host computer
3. You should see factory reset screen, but this time you should see one more option. Press and hold volume up to unlock the bootloader.
4. If you see a warning screen on boot, the bootloader is unlocked.
- Install TWRP recovery .tar.md5 file via Odin by following the TWRP instructions.
Click to see instructions from the TWRP OP -From OEM stock firmware:
Unlock bootloader
Hold Vol Up & Vol Down buttons during restart to enter Download mode
Install TWRP to AP with Odin
Hold Power & Vol Up buttons during restart to enter TWRP recovery
Install latest Multidisabler from TWRP
Wipe->Format Data
Reboot to system
From existing TWRP install: (No need for data wipe.)
Hold Power & Vol Up during restart to enter TWRP recovery
Tap Install, select your update (.zip) file, and then swipe to install
Reboot to system
- [Optional] Install Magisk to get root - see Rooting section below
Don't forget to install Multi-disabler before doing Format Data! (as described in the guide) - In TWRP tap Install then select the Multi-disabler zip file.
Custom ROM [Allow several hours for the custom ROM download]:
- Read the custom ROM instructions: Nexus Stock / LineageOS 16.0
- Download any zip you plan to flash (install) from TWRP (e.g. Magisk) and save to your sdcard. Internal memory will be wiped as a necessary step in installing TWRP (if you follow the instructions correctly). Note that the folder /sdcard is part of the devices internal memory, your actual sdcard data can be found in something like /storage/ABCD-1234 in Android, or external_sd in TWRP.
- Unlock Bootloader - Click to see original post:Disclaimer: your tablet warranty will void. Proceed with your own risk
Warning: your personal data, except on external SD card or USB drive, will be wiped during the process!
Prerequisite:
Host PC installed Samsung Smart Switch
USB C cable
Your tablet battery should be 70% or higher and you have done data backup
OEM Unlock enabled
1. About tablet
2. Software version
3. Hit Build Number few times
4. Enable USB Debugging
5. Allow your host computer
6. If you don't see OEM Unlocking, wait for 7 days or do the following trick
https://www.xda-developers.com/fix-m...galaxy-note-8/
Are you ready? Let's do it.
1. Turn your tablet off and disconnect USB cable
2. Press and hold both volume up and down buttons and connect to host computer
3. You should see factory reset screen, but this time you should see one more option. Press and hold volume up to unlock the bootloader.
4. If you see a warning screen on boot, the bootloader is unlocked.
- Install custom ROM .tar.md5 file (which includes TWRP) via Odin, by following the custom ROM instructions.
Click for instructions from OP for Nexus Stock -
Unlock bootloader
Hold Vol Up & Vol Down buttons during restart to enter Download mode
Install custom ROM tarball (.tar.md5 file) to AP with Odin
When TWRP launches, wipe data if installing for first time. (Not necessary for incremental upgrades.)
Reboot to system
Click for instructions from OP for LineageOS 16.0 -
Unlock bootloader
Hold Vol Up & Vol Down buttons during restart to enter Download mode
Install custom ROM to AP with Odin
When TWRP launches, wipe data if installing for first time. (Not necessary for incremental upgrades.)
Reboot to system
Note that "wipe data" means Wipe -> Format Data
- [Optional] Install Magisk to get root - see Rooting section below
Some users have reported getting stuck on the boot animation after a dirty flash, I don't know if that still happens with the latest versions of @Magendanz's ROMs. If it does the solution is to boot into recovery and flash Multi-disabler.
For TWRP versions before v3.3.1-5 you MUST format the encrypted data partition after flashing TWRP or TWRP will hang on the splash screen. For later versions of TWRP you should format the encrypted data partition after flashing TWRP so that TWRP can access the data partition.
You can use TWRP to flash zip files, e.g. to install newer versions of TWRP itself, or custom ROM zips, as follows:
1. Download the zip file
2. Boot into Recovery
3. Install -> Select the TWRP zip file
4. Reboot to System
You *cannot* use TWRP to flash tar.md5 files, and you must use Odin at least once to get TWRP installed in the first place.
You may not need ALL of these downloads, this is just a handy list of some of the downloads mentioned in the guides
Samsung Smart Switch (for USB drivers)
Magisk - Download Latest Stable zip file to flash in TWRP (see Rooting below) and Latest Magisk Manager to install as an app
Odin
Multi-disabler (required by TWRP only tar.md5)
Firmwares SM-T510 SM-T515 - allow several hours, at least, for the firmware downloads to complete
WARNING - take note of the kernel version of the custom ROM you intend to use, e.g. T510XXU2ASI4 and your current version (Settings | About tablet). Newer bootloader releases will sometimes prevent downgrading, so if you flash a firmware with a later kernel version you may not be able to flash your desired custom ROM without problems, or flashing an older version than you are currently running may trigger anti-rollback mechanisms. Magendanz suggests matching the version exactly.
- Power On: Hold the Power button for 3 seconds
- Boot to Recovery (Before unlocking bootloader) Power On and Press and hold Power and Volume Up until you see Recovery running.
- Boot to Recovery (After unlocking bootloader) Power On and then press Power and Volume Up as soon as you see the unlocked bootloader warning. No need to hold.
- Boot to Download: Press and hold Volume Up and Volume Down and connect to computer with USB cable.
Click to see Unlock Bootloader original post...
Warning: your personal data, except on external SD card or USB drive, will be wiped during the process!
Prerequisite:
Host PC installed Samsung Smart Switch
USB C cable
Your tablet battery should be 70% or higher and you have done data backup
OEM Unlock enabled
1. About tablet
2. Software version
3. Hit Build Number few times
4. Enable USB Debugging
5. Allow your host computer
6. If you don't see OEM Unlocking, wait for 7 days or do the following trick
https://www.xda-developers.com/fix-m...galaxy-note-8/
Are you ready? Let's do it.
1. Turn your tablet off and disconnect USB cable
2. Press and hold both volume up and down buttons and connect to host computer
3. You should see factory reset screen, but this time you should see one more option. Press and hold volume up to unlock the bootloader.
4. If you see a warning screen on boot, the bootloader is unlocked.
After unlocking the bootloader every time you turn the device on a warning about the bootloader being unlocked will appear for ten seconds, unless you dismiss it by pressing the power button.
If you are holding the Power button and Volume Up to boot into recovery this warning screen will flash on and off briefly, at which point you can stop holding down the buttons. Recovery will start a few seconds later.
Root can be achieved by flashing Magisk in TWRP (you also need to install the Magisk Manager app). From Magisk 19.3 onwards there is no longer a need to use Magisk Manager to patch a tar.md5 file or anything like that.
You can even install Magisk the first time TWRP runs after flashing one of @Magendanz's tar.md5 files in Odin.
To do so follow @Magendanz's guide up to the point where you have Factory Reset/Wiped Data in TWRP then:
1. Reboot to Recovery
2. Install -> Select the Magisk zip file
3. Reboot to System
4. Install Magisk Manager
Otherwise you can start by installing the Magisk Manager app at any time.
Note: You will need to re-install Magisk after a TWRP update.
Odin is a Windows tool for firmware flashing on Samsung devices via USB. Odin can be used to flash firmware, kernels, recoveries or ROMs to your device.
* Firmware zip (or rar) files need to be extracted and then install via Odin. Flashable zip files (e.g. new versions of TWRP or custom ROMs) can only be flashed from TWRP, not Odin, though you need to flash a TWRP tar.md5 file using Odin in the first place *
Preparing the device
- Charge the device to at least 80%.
- Bootloader unlocked
- In developer options, turn USB debugging on. Click on Build number in Settings several times until you see the toast notification "You are now a developer". Go to Developer Options and turn on the USB debugging option.
- In the stock ROM Build number can be found here: Settings | About Tablet | Software Information and the "Developer Options" menu item appears below About Tablet in the main Settings screen.
- The locations may be different in custom ROMs. In the Nexus based ROM the locations are Settings | About phone for Build number, and System | Advanced for Developer options
- Turn off the phone, hold down the Volumn Up and Volume Down buttons and connect the device to the computer with a USB cable (preferably the cable that came with the device). A warning will appear saying "A custom OS can cause critical problems in phone and installed applications".
- Press the Volume Up button briefly to continue.
The device is now in Download mode.
Install Odin version 3.13.3.
When you run it a dialog will pop up in English and Chinese. Click OK.
The Odin window looks like this:
Above ID:COM on the left is the progress bar, below ID:COM is the connection indicator which changes colour (and shows the COM id) when your device is connected in Download mode.
Below that is the "Log" tab which gives verbose output showing what's happening. Normally you will not need to go near the Option or Pit tabs.
There are four buttons in the middle of the screen corresponding to the types of file that you can flash: BL (boot loader), AP (Application Processor, PDA), CP (Core Processor, phone/modem), CSC (Consumer Software Customization)
Depending on what you are flashing you will need to load one or more files. To load each file type click on the corresponding button and select the file to be flashed.
Odin will show the following in the "Log" while the file is being processed:
<OSM> Enter CS for MD5 <OSM> Check MD5... Do not unplug the cable... <OSM> Please wait...
<OSM> Checking MD5 finished Successfully... <OSM> Leaving CS...
@Magendanz's TWRP and ROM files are both single files flashed to AP, so just click the AP button and the select the tar.md5 file.
If you are flashing firmware ( e.g. https://samfrew.com/model/SM-T510/ ) unzip the download into separate files and load each with the correspong button. The filenames begin with BL_..., AL_... etc so you'll know which is which.
There will be both a CSC_ and HOME_CSC_ file. You could flash HOME_CSC_ to keep your device's settings and data but normally you should use CSC_ for a clean install. If you have an SM-T515 then you'll have a CP_ file too, but if you have a SM-T510 then your firmware will not have a CP_ file because that's for the phone (SM-T510 is wifi only), so just leave CP alone, only load BL, AP and CSC.
Verify that your device is connected in download mode. The box below ID:COM should show the COM id of the connected device and there should be a line in the "log" saying something like <ID:0/008> Added!!
Click Start to flash the selected files. DO NOT UNPLUG THE CABLE UNTIL THE PROCESS IS COMPLETE. You can follow the progress in Odin and on the Download screen on your device. To flash a ROM or firmware will take several minutes.
If you are flashing one of @Magendanz's tar.md5 files then your device will reboot into TWRP once the install is complete. At that point continue following @Magendanz's guide.
Note: You will need to turn on USB debugging again after flashing firmware, or a clean install of a ROM, before you can use Odin to flash again. Also check that OEM unlock is still turned on.I've started working from home from March, and been in 3 different skills in less than 2 months, and probably, going to be in other one, and Im not getting the right feedback or instructions from my superiors about how to make my job correctly and not lose money or gettin punish for something I have not been taught
So I came with the idea to create an app in which I could select the primary data/options and then get the procedure/steps to solve my task without losing time (like a mini game to provide background info and then have the answer of what to do.
Ex of Primary Data: "Number of products to cancel", "Type of order: Pick up/Delivery", "Store of origin: Main/Other", "Costumer wants to cancel?: Yes/No"
After all the background data has been selected/stablished, text will appear to tell what are the steps to take according to the previous data entered.
Ex Answer Procedure: "Proceed to cancel the order, notify the dealer from the main store and proceed with the cancellation. Close the case"
So here goes the main question: What topics I must learn in order to be prepared to make this app as simple as possible with Android Studio? Is there any course that covers up this idea? What you guys suggests?
Thank you all in advance, hope to read how to find the info I need
Have a great day!
-btcsolomining.pw/en_gb...o-bitcoin-110th-s-second-hand/
Model Antminer S19 PRO (110Th) from Bitmain mining SHA-256 algorithm with a maximum hashrate of 110Th/s for a power consumption of 3250W. Second-hand.
The BTCSOLOMINING
Warranty 30 days
PSU Included.
Support 7/7.
Delivered worldwide via DHL Express and UPS.
PAYMENT
Currencies accepted Bitcoin, Ethereum, Bitcoin Cash (COINBASE COMMERCE ) Insured The cryptocurrency stored on coinbase servers is covered by insurance
Btcsolomining.pw
Отправлено с моего SM-G965F через TapatalkThe beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTC1. Select the newly created project from the list.
2. Navigate to APIs & Services.
3. Click Enable APIs and Services.
4. Type speech in the Search box to and click on Google Cloud Speech API.
5. Click Enable button for Google Cloud Speech API. https://concertcare.com/services/Register or Login with Google
hi, is there any way to pass safety net?
Enviado desde mi SM-G955F mediante Tapatalk
Yes
Open EdXposed Manager > Settings (in hamburger menu).
Scroll till the bottom & tick "App List mode", "Force hook modules" & "Pass SafetyNet"
Reboot & you'll be able to pass SafetyNet.
Also make sure to add the Banking apps/other apps which require passing SafetyNet in the Black list (Applications in Hamburger menu).
Sent from my #FlagshipKiller6T using Tapatalk
Does Snapchat detect xposed? Does it cause account to get locked? Is there any walk around?
Does Snapchat detect xposed? Does it cause account to get locked? Is there any walk around?
Yes, but there is the special Snapchat Edxposed in Edxposed Manager. I currently use it and I've never been locked out.
Right now I have magisk and used magisk hide for Snapchat. How exactly do I install edxposed and install Snapchat edxposed now without getting locked? Can you please explain stepwise?
Sure.
Go to Edxposed Manager.
There should be a Snapchat tab among the tabs at the top. Tap that.
There will be a drop down menu where you can choose between the Sandhook and the Yahfa version (I'd recommend Yahfa since it's more stable).
After you select your build, tap on Install/Update.
This will download the zip onto your internal storage (Downloads folder).
Now exit Edxposed Manager and go to Magisk Manager.
Go to Downloads and install the Riru Core module.
Then go to Modules, tap the + icon and look for the Edxposed zip that you downloaded earlier and flash that.
Reboot and profit. The reboot may take some time so please be patient.
Do I have to uninstall Snapchat before installing edxposed? Do I have to log out or take titanium backup?
Nope, but maybe take a backup of Snapchat just in case.The OnePlus 7T is a 6.55" phone with a 1080x2400p resolution display. The Qualcomm SDM855+ Snapdragon 855 chipset is paired with 8GB of RAM and 128GB of storage. The main camera is 48+12+16MP and the selfie camera is 16MP. The batter has a 3800mAh capacity.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceApp monetization is a problem that app developers have been facing since the medieval times. Now finally there is a simple and zero cost solution. With it app developers can achieve an average revenue 60p-80p per DAU (additional revenue if you are already monetizing). The deployment requires a simple web URL integration in the app. This highly engaging new revenue stream also leads to increased retention. The name is Qureka Lite
What is Qureka Lite and what does it do?
Qureka Lite is a mWeb version of Qureka app that can be easily deployed through URL integration onto the web/ mobile destinations. Qureka app is a top-rated interactive Quiz based game show app on play store with 15 mn+ installs in India, it offers non-monotonous fresh content like Quiz shows, prediction, casual games in innovative formats.
Making money using Qureka Lite is literally effortless and sky is the limit
The ad revenue generated on Qureka Lite is shared with the publishers on 50:50 basis. We target average revenue of 40p per DAU to begin with and grow it to Rs. 1 per DAU in a year’s time. Our publishers usually hit average revenue of 60p+ within one week of going live. So an app with 10,000 DAU’s can go from Rs. 1.2 Lacs of revenue in the first month to Rs. 3 Lac per month in a year’s time. The math is simple.
Engage users like never before. Once they are in they’ll stay for some time
Users play games (Quiz shows & prediction games) on Qureka Lite in your in app browser. The topics of these games range from news, sports, current affairs, entertainment, science, culture and more. Average time spent on these games per day is 25 mins – 30 mins per user because of their highly engaging nature.
It is literally money for nothing
All this comes at absolutely no costs not even hidden. Running cost, server cost and all other cost are borne by Qureka Lite. Money only flows in one direction – to the publisher
User engagement and monetization is a science and we have cracked it
With the backing of Indian Internet Giant – Times Internet, Cool Boots Media (Parent company of Qureka Lite) has become industry leader in user engagement and monetization. With a strong content team, category experts, robust gaming engine and content management algorithm at place the expertise extends to product and design management for a seamless integration flow and user experience.
To know more email us at [email protected]What is this?
Pixel Experience is an AOSP based ROM, with Google apps included and all Pixel goodies (launcher, wallpapers, icons, fonts, bootanimation).
Our mission is to offer the maximum possible stability and security, along with essential and useful features for the proper functioning of the device.
What's working:
1. Boots
2. RIL(Calls,SMS,Data)
3. Wi-Fi
4. Bluetooth
5. Camera
6. Audio
7. Sensors
8. Flashlight
9. Brightness
10. GPS
11. Gcam
12. Hotspot
13. USB Tethering
14. DT2W
15. Offline Charging
Known issues:
1. Selinux is permissive.
2. Video codec issue in all Chromium based browsers. Check 4th post for fix.
3. VoLTE.
Before Flashing:
1. Take a backup of your data.
2. Clean flash is recommended as of now.
3. Flash the shared TWRP only.
4. Always flash latest build.
5. Always read 2nd and 3rd posts.
Installation Instructions:
1. Clean Flash is recommended, Install TWRP or Orange Fox Recoveryand enter into it.
2. Format Data and Wipe Dalvik, Cache, System, Data, Internal Storage.
3. Reboot to TWRP.
4. Flash Pixel Experience Plus ROM (Gapps are included).
5. Flash Magisk (v20.3 is recommended and is optional).
6. Wipe Cache and Dalvik after flashing.
7. Reboot to system and first boot will take time.
8. Done, you are in Pixel Experience Plus ROM and enjoy.
Note:
1. In our testing only few versions of Magisk are working. So use the shared one only.
2. Working magisk versions:
Original - 20.1 and 20.3
Phh based - 20.3
3. Don't update magisk binary (you can update app though).
4. Use the shared TWRP only and dont use others (testings are based on the shared TWRP).
5. ROM is now stable for daily use, enjoy.
Downloads:
Sourceforge
Information
[STABLE][ROM][10.0]Pixel Experience 10+ ROM for Realme U1 [RMX1831/33]
Contributors:
1. Invincible-Venom
2. Naveen56
3. Phhusson
4. SamarV-121
5. sonic_sakthivel123
6. vishalk17
Credits:
1. mmoreyrav
2. GSI Community
Testers:
1. Akarshan1234
2. akshat_gosain
3. Dev Alhaj
4. legendofrj10
5. Lokesh790
6. Mickey_ms
7.Mystixxzop
8.Nuttcracker
9.Rishabh16
10.ShadowGamerz
11.Saisandesh
12.shashwat2003
13.TECH THAKUR 1M
14.Who Deepak
Thanks to:
1. Realme and Oppo,
2. Google and Android,
3. Lineage OS, Pixel Experience and other Open source ROM developers,
4. XDA Developers.
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
ROM Firmware Required: C.20 (Latest Version)
Based On: AOSP
Version Information:
Status: Stable
Release Date: 12-07-2020
Created: 12-07-2020
Last Updated: 18-08-2020we have worked for years, always with the stinky help of the prestigious University of Detroit, analisyng well over a hundred thousand anonimous farts, categorizing all of them and obtaining, as a result, this wonderful app.
The Fartometer is not a bad taste joke, its a bad smell one. Download Fartometer today, have dietary fiber for breakfast and don't stop categorizing your farts. You will become happier and you will never have a constipated face never again. People around you will thank you, except you if they get you in the toilet.
Share your achievements with your friends so they value you for your inside. You will be able to play your fartover and over, being a delight both for you and your listeners.
Download from Google PlayMaking Your Home Screen Sexier made easy with Screenie. Screenie brings you out the latest Home Screen Setups. It also shows the Widget, Icon Pack used in each Home Screen Setup with their Links attached, So that you can download any of them through Play Store in One Click.
Features of Screenie:
⭐New Setups every day.
⭐Backup of Setup's(Launcher, Widgets) to make your work easier.
⭐Download Wallpaper and Setup in One Click.
⭐Icon Packs are displayed for each setup.
⭐Widgets used are displayed for each setup.
⭐Best collection of Home Screen Setups.
⭐Push Notifications of new setups.
⭐You can Rate the setups according to your interest.
⭐Favorite’s section(liked setups by user).
⭐Search by categories.
⭐High Rated Home Screen Setups.
⭐You can also share the setup with your friends.
⭐Explore Random Setups all over the world.I've started with how it captures the notification content on 4.3+ which can be found on my site here.
I have a few ideas for other posts like the different ways to draw on screen (on the lockscreen, over the status bar etc) but if anyone has anything specific they'd like to know let me know and if it's something that could benefit others I'd be happy to do a post on that too.
(Btw hope this is the right section to post this)The OnePlus Nord is a 6.44" phone with a 1080x2400p resolution display. The Qualcomm SDM765 Snapdragon 765G chipset is paired with 6/8/12GB of RAM and 128/256GB of storage. The main camera is 48+8+5+2MP and the selfie camera is 32+8MP. The battery has a 4115mAh capacity.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceNo. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- LKT sets random nonsensical build.props that likely don't even exist.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- CAF CPU Boost Tweaks
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16The Samsung Galaxy Note 20 is a 6.7" phone with a 1080 x 2400p resolution display. The Exynos 990/Qualcomm SM8250 Snapdragon 865+ chipset is paired with 8GB of RAM and 256GB of storage. The main camera is 12+64+12MP and the selfie camera is 10MP. The battery has a 4300mAh capacity.I have 3 official OnePlus 5 cases I would like to give away. They are the official Karbon, Ebony, and Rosewood cases. Image of the 3 cases: https://imgur.com/X9Cp6I8
They're unused and have just been sitting on my shelf for a while. I received them as part of the reviewer's kit but have no need for them. Rather than having them continue to sit on my shelf, I will give them away to anyone who wants them. The only catch is that you'll have to pay for shipping.
I will pack the cases in a padded envelope and send it to you if you live in the U.S. Just send me a DM if you're interested. I will give preference to RC/RD and other recognized members.
Cheers!
Case sent to Awkydee. Enjoy!XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceEdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19Now on functionality of our App:
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )Having schema markup on a website can help search engines identify web content relevant to users, but invalid schema can lead to this information being ignored. Elite Site Optimizer's Schema Markup validator crawls your website content, identifies the schema markup entities, and validates the available properties and attributes values. It finds issues such as missing properties, attributes, and values, then provides suggestions to fix the issues. JSON-LD, Microdata, and RDFa formats can be checked and validated with ESO.
Why Use A Schema Markup Validator?
Modern search engines classify content with the help of schema content type tags and use them to serve the most relevant content to users depending on their search terms. Content encoded with the right schema markup guides search engines to associate that content with the intended audience. ESO’s schema markup validator tool validates all three formats of rich snippets according to schema.org and Google guidelines for using rich snippets. This helps webmasters fix issues faster and improve their SEO. Effective schema markup is especially vital for the webmasters of eCommerce stores, news sites, and blogs for helping reach their audience from search engine traffic.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceScreenshot of APK Easy Tool v1.57
Apk Easy Tool is a lightweight application that enables you to manage, sign, compile and decompile the APK files for the apps you are working on.
Allows you to manage the updates and fixes from one place
The program comes with a clean and user-friendly interface that is unlikely to give you troubles. You can get started by selecting the desired file via the browsing function of the tool or drag and drop.
The interface displays various information about the APK files, including package name, version, minimum SDK version and version code. From the main window, you can make the desired modifications as the main functions and additional options are all available in this tab.
Speaking of functionality, some of the main operations you can perform via this tool, you can count compiling, decompiling, signing, extracting and installing the APK. In case you are working with ROMs only, then you can make further changes from the Framework tab. Moreover, if you feel you missed something, you can check all operations performed from the Log output tab.
A straightforward app for managing APK files efficiently
A noteworthy feature of the tool is that you can create the new code separately and overwrite the current APK with a simple drag and drop. It goes without saying that this operation can save you a lot of time and effort.
In the eventuality that you provide frequent fixes and updates for your Android games or tools and want to be able to manage this processes smoother, then perhaps Apk Easy Tool could come in handy.
- Softpedia
Same as apktool, APK Easy Tool is neither intended for piracy and other non-legal uses. It could be used for localizing, adding some features or support for custom platforms, analyzing applications and much more.
APK Easy Tool is absolute free for commercial and non-commercial use.
Before posting:
- Follow XDA rules (especially when newbies created an account just to come here only to post something)
- Have any problem with APK Easy Tool? check the log and read what it says. Mostly the issues are apktool.jar related, search the log keywords on https://github.com/iBotPeaches/Apktool/issues and/or baksmali/smali related here: https://github.com/JesusFreke/smali/issues. Do remove "is:issue is : open" to search better. Keep in mind that there's a big difference between identifying issues related specifically to the "APK Easy Tool Software (by evildog1)" and the "Apktool Java Utility (by iBotPeaches). Detailed infomation by Ibuprophen https://forum.xda-developers.com/sho...&postcount=491
- To post an issue here, explain full detail about the issue, and a full log. Screenshot or video are optional but are very helpful. I may or may not respond if not enough details
- Read the FAQ, your answers might be there. If not, search the issue/problem on Google or on XDA, it's a lot easier to search than you think
- Questions about how to add toast, edit xml, etc does not belong here, they are out of topic. Regarding framework modding should be posted at the correct section of your device(s) (I guess)
- No discussion about pirating or modding a game. This is development only, keep the tool legal use but I still won't be responsible how you using it.
- Anything else, post here
Requirements:
- Windows 7 or above
- .NET Framework 4.7.2 or above
- Java SE/JDK for decompile, compile, and sign APK. If you don't have Java installed, you can only use Zipalign or Install APK. Download and install Java SE/JDK now
Features:
Decompile/Compile
Decomile and compile APK, DEX and JAR files, with SPACE, symbols and germany, danish, swedish etc... characters support. Can cancel during operation
Sign/Zipalign
Signing and ZipAligning of APK/JAR files. Can cancel during operation
Extract/Zip APK
Extract and zip APK with 7z Compression-level 0-9. Can cancel during operation
APK Infomation
Show APK infomation with icon using aapt dump badging and link to Play Store
Framework
Install your framework and manage framework paths
Log output
View your logs to find errors. Set date to view your previous logs
Sided log output is only available for higher resolution with 1250 width and above.
Options
Change options of tool, decompile, compile, sign and zipalign. Options: Java heap, Apktool version, apksigner version, directories, java path, Windows explorer integration, remeber window position and more
All options and textboxes are saved as config.xml and will load on launch
Quick options on main.
Drag and drop
Drop APK, DEX, JAR files and Decompiled folder on buttons to perform actions. Drop outside buttons to select/open as file/folder
Apktool.jar version selection
Can switch to other versions of apktool.kar on options
Add other apktool.jar in "Apktool" folder
Shortcuts
4 buttons to open work directories of decompiled APK, compiled APK, extracted APK and zipped APK
Jumplist shortcuts
Windows explorer integration
Do actions by just right-clicking on APK file and choose the following options, decomile or compile APK, DEX, and JAR files, Zipalign APK, Check align, Sign APK and Install APK
Getting started:
- Download .msi or zip file,
- If you download .msi, open it and simply install it. If you download portable version .zip, extract to the portable drive you like to.
- Launch APK Easy Tool, directory are automatically set
- Select the APK file you want to work with or drop the APK to perform an action
- Do some work and good luck
You do not need to select APK and set the directory if you do drag and drop actions.
Framework are for ROM developers and System App modder only
It works the same way as the command line version
Download links:
Both stable and beta versions are included
Softpedia link
Google Drive link (Recommended)
Android File Host link
Box link
Yandex link (Better download speed for russian)
Baidu link (Better download speed for china)
Credits:
Evildog1 (Creator of this tool)
ibotpeaches (Creator of apktool.jar)
Google, Android NDK (adb, aapt, apksigner and zipalign)
bootstraponline (signapk)
Igor Pavlov (7zip)
JesusFreke (Smali/Baksmali)
dwmkerr (SharpShell https://github.com/dwmkerr/sharpshell)
Donate:
If you support me, feel free to donate and I appreciate itXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThis forum offers help with Android Studio, Eclipse, IntelliJ IDEA and other mobile development environments for building apps; member-compiled lists of useful Android libraries; and any other discussion of programming efficiency, emulation, SDKs, or development tools.
Google first announced Android Studio at I/O in May 2013. The new IDE, based on ItelliJ IDEA, is a WYSIWYG editor for building and previewing apps in real-time. Share your experiences with Android Studio here.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceInstructions to using the tool:
1. Download and unzip
2. Place boot/system/vendor images to the directory where you extracted
3. Open a terminal and type in ./henry
4. Press 1 and press Enter. Make wanted changes inside system/vendor folders.
5. Type in terminal ./henry and press 2 and press enter.
6. You should have a rom.zip in the same directory which you can flash in TWRP.
If something goes wrong while unpacking make sure you have Python 3.6
Downloads:
V1.8 (beta): Click here (google drive)
V1.7 (beta): Click here (google drive)
V1.6 (beta): Click here (google drive)
V1.5 (beta): Click here (google drive)
V1.4 (beta): Click here (google drive)
V1.3 (beta): Click here (google drive)
V1.2 (beta): Click here (google drive)
V1.1 (beta): Click here (google drive)
V1 (beta): Click here (google drive)
This tool works on Linux or WSL2 (Windows 10 build 2004 and up)
Changelogs:
V1.8: Maybe fix some issues??
V1.7: update script
V1.6: V1.5 but better
V1.5: Bugfixes
V1.4: Android 11 support & a lot smaller code
V1.3: Fix a bug i accidentally added in V1.2
V1.2: Fix simg2img not working sometime
V1.1: Fix a rare bug with symlinks.
V1: Initial release
Report any issues in the comments and I'll try to help
Enjoy!
XDA:DevDB Information
Henry's unpacker, Tool/Utility for all devices (see above for details)
Contributors
ORIGINALNAME123
Version Information
Status: Beta
Current Beta Version: V1.5
Beta Release Date: 2020-08-09
Created 2020-07-27
Last Updated 2020-10-10I've been able to get LOS 17.1 up and running with everything except cell service. I'm on Verizon in the US. I can't even select Mobile Network in settings. It's grayed out. It worked fine on stock. Any suggestions?XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Service@IProfessor Thank you for the hint to use the HiSuite Proxy SW, it looks really good.
But I have one question.
I searched in the TEAM MT Database for the wanted Firmware. I took the Version SHT-AL09C432B163 (8.0.0.163) (FullOTA-MF).
I get the following files from the filelist: (the links are in this Post, I'm not allowed to make a new entry with external links)
- update.zip
- update_full_SHT-AL09_hw_eu.zip
- update_data_full_public.zip
Can you say me how do I have to insert these three links in the HiSuite Proxy software?
Or where I can find the links I need?
@IProfessor Thank you for the hint to use the HiSuite Proxy SW, it looks really good.
But I have one question.
I searched in the TEAM MT Database for the wanted Firmware. I took the Version SHT-AL09C432B163 (8.0.0.163) (FullOTA-MF).
I get the following files from the filelist: (the links are in this Post, I'm not allowed to make a new entry with external links)
- update.zip
- update_full_SHT-AL09_hw_eu.zip
- update_data_full_public.zip
Can you say me how do I have to insert these three links in the HiSuite Proxy software?
Or where I can find the links I need?
@IProfessor Thank you for the hint to use the HiSuite Proxy SW, it looks really good.
But I have one question.
I searched in the TEAM MT Database for the wanted Firmware. I took the Version SHT-AL09C432B163 (8.0.0.163) (FullOTA-MF).
I get the following files from the filelist: (the links are in this Post, I'm not allowed to make a new entry with external links)
- update.zip
- update_full_SHT-AL09_hw_eu.zip
- update_data_full_public.zip
Can you say me how do I have to insert these three links in the HiSuite Proxy software?
Or where I can find the links I need?
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceAs more people around the world trade in their desktop PCs for smartphones and tablets, businesses are looking for ways to improve their approach to enterprise mobility. For many, this trend presents an opportunity to wring more productivity out of their workforce by allowing employees to use their personal devices on the job. Organizations that employ bring-your-own-device policies often report higher levels of employee satisfaction and performance. To optimize these efforts, however, businesses often need to develop their own software that is customized to meet their staff's specific needs. These circumstances have led to a boom in internal enterprise mobility projects, driving the need for better development and quality assurance practices within companies. Which is why, interest in enterprise mobility will only increase in the foreseeable future.
Mobile device adoption rates continue to be robust, and more resources for in-house development are available than ever before. For instance, last year Samsung announced the debut of its latest software development kit. Similarly, many businesses that wish to take full advantage of this resources and bring newer products to the market will need to bolster their internal programming and QA teams, as in-house projects are better suited to address the specific demands of enterprise end users. Keeping an eye on offshoring trends is a must.
Another trend that company leaders should take note of is the rising interest in offshoring. These practices have seen their popularity increase in recent years, as more organizations look to reduce their operational costs by outsourcing software development or testing responsibilities to overseas teams. This trend may be contributing to the growing number of tech professionals residing in regions outside of North America. According to InfoQ contributor Abel Avram's analysis of a recent IDC study, there are now more than 36 million professional developers, hobbyists and workers with ICT skills spread across the globe. Of those individuals, approximately 11 million work primarily as software developers, with 37 percent residing in the Asia-Pacific region.
Meanwhile, fewer than one-third are currently working in North or South America. While the United States has the largest share of both professional and hobbyist software developers of any single country, China and India are not too far behind, holding the second- and third-place rankings, respectively. With the race to accumulate tech-savvy employees gathering steam, taking advantage of every region's talent pool will be vital moving forward. However, it is no secret that there are many logistical challenges to managing application development and deployment since testing teams are now spread across the world.
Time zone differences, in particular, can prevent individuals from sharing updates and providing new information with programmers and testers located in other countries. If these circumstances are not addressed redundancies and oversights may occur, derailing a company's production schedule. A high-quality test management system will alleviate these concerns, however, by providing a single portal for team members to upload important test cases, scripts, metrics, reports and other information. For example, if software testers located overseas want to share the results of their latest tests with on-premises employees, they can simply upload that information in real time through a test management tool. Those records will then be readily available to in-house programmers. These capabilities reduce operational headaches for QA management and ensure that a production stays on track.
It is true that the world has gone mobile. Businesses have started adopting mobile strategies to stay abreast with the growing technologies. Mobile devices are used by enterprises nowadays to streamline their business operations. It provides employees the flexibility to conduct business operations such as sending emails, reviewing orders, accessing business apps, etc. on the go. While the use of mobile phones in business has tremendous benefits, it also throws up challenges like securing business data and maintaining privacy. Enterprise Mobility Management companies like 42Gears offer platform agnostic solutions to deal with the challenges faced by enterprises wanting to go mobile. It offers device and app provisioning, OS configuration, remote wipe, remote viewing, application management, remote file sharing and more.
Consumption and creation: The future of enterprise mobility
The floodgates have opened. The device era is now. What modern enterprise mobility looks like today, what its challenges are, and where it’s heading — according to recent surveys, research, and interviews with leading mobility experts. Before you deploy your next mobile workflow, here’s what you need to know.
Introduction: Better productivity trumps device management.
A lot has changed since the “bring-your-own-device-to-work” phenomenon (a.k.a. “BYOD” or “IT consumerization”) was first observed nearly a decade ago. For one thing, an estimated 95 percent of workers now bring at least one personal device to work with them, according to a recent Pew Research report. And to help realize full global maturity, high growth markets such as Brazil, Russia, India, Southeast Asia, and the Middle East are quickly following suit.
Consequently, “Enterprises are rapidly becoming more and more mobile, particularly among traveling salesforces, implementation consultants, middle-management, and strategic executives,” says Akhil Chugh, mobility analyst at Adobe Document Cloud. As you can imagine, most people read or respond to emails today on mobile, he adds, so it only makes sense that the majority of related work will soon follow.
The good news is the industry is more than ready to favorably respond. “Enterprise mobility has evolved far beyond its pure device management roots,” says Adam Holtby, senior researcher of enterprise mobility at Ovum. “It’s no longer just an IT initiative — it has become a key competitive factor for organizations and an important enterprise competency.”
But as it often does elsewhere, success will require a change of thinking.
Mobility today: Anytime consumption, limited creation.
We’re halfway there. At least that’s what the latest research and expertise suggest. In other words, we’ve gotten really good in recent years at consuming information and corresponding with coworkers, clients, and stakeholders at any time and from anywhere on our mobile devices.
For instance, 77 percent of companies say that they’re using even more mobile apps than they were just two years ago, according to a 2017 Adobe Study of 1500 enterprise executives. Nearly 70 percent of those are using between two and five enterprise apps to get the job done, particularly in training and communication.
Furthermore, over half of those surveyed cited the “need for instant communication” and an even greater “mobile workforce” as the primary justification for enterprise mobility today. And 61 percent believe that if a company hasn’t deployed enterprise mobile apps, they will be at a competitive disadvantage — which explains why 66 percent are increasing their investment in mobile technology over the next three years.
“The first wave of enterprise mobility was very much centered around enabling people to work untethered from traditional devices such as desktop PCs and laptops,” explains Holtby. “In organizations, mobile devices were often only utilized by senior figures, whereas now employees have greater choice, and mobile technologies are more democratized within organizations.”
In that sense, we’ve arrived.
But old habits are hard to break. “Even though a lot of email and other productivity apps are now available on mobile, end users still restrict their critical or time-intensive document efforts to the desktop,” says Chugh. “Tasks such as commenting on a document, making edits, and drafting still largely happen from nine to five. This behavior frustrates document turnaround times and so far hasn’t been resolved as well as it should have.”
“We are still not used to a mobile first environment,” says Pareekh Jain, mobile analyst at HfS Research. “Mobile is still regarded as an information consumption and communication medium rather than a creation medium. Partly out of habit, we are used to editing documents, spread sheets, presentations in desktop mode rather than on mobile.”
But Chugh and company argue that the latest technologies are surprisingly capable and powerful enough to fully replace what many of us are accustomed to doing exclusively on desktops and laptops. For example, Just Press Record lets users record interview and auto transcribe them — something that was never possible on desktop. Media-rich bulletin boards and group organizational tools such as Evernote and Trello dramatically improve not just mobile collaboration, but collaboration in general. On top of that, more powerful email apps from Outlook, Gmail and others have popularized features such as scheduled emails and shipping features that hasten email management.
People-first creation: How mobility should work.
Even with our collective reticence toward creating full-blown documents and workflows from our phones, the many benefits of enterprise mobility are readily apparent.
To name a few — better worker productivity, availability, and response times. No more having to wait until someone returns to the office. Faster access to information to make quicker decisions. Better rapport with customers and stakeholders. Lower cost. Speedier supply to meet quicker demand. All combined, many companies have even observed higher employee morale with the proliferation of generous Bring your own device policies.
For both workers and employers, that’s encouraging news. “Mobile today is enabling what laptops did 20 years ago in terms of better engagement with customers and a faster enterprise,” says Chugh. “But to achieve this, executives must think about worker mobility with a combined focus on mobile, cloud, and ubiquitous connectivity.”
For example, customer and employee onboarding from the field can now be a paperless process, Chugh says. With the help of tablet or phone camera, crucial information can be uploaded to the cloud to accomplish in two minutes what would have taken two days before.
“You and I and the customer can really be anywhere now,” says Jacob Sharony, principal at Mobius Consulting and early pioneer of barcode inventory technology for UPS and Fedex. “We just need access to wireless, which on the whole is as ubiquitous as electricity and water — a utility instead of an amenity.”
But again, until we start creating important documents from the field, we’re leaving significant amounts of money and opportunity on the table. “Mobility should be embraced as a means to transform the way we work today, as opposed to being viewed as secondary technology that is layered on top of legacy processes and document workflows that we have been using for decades,” Holtby explains.
This can be done by taking an end-to-end view of how mobility might help to realize new operational and productivity efficiencies. “Up until recently, strategic enterprise mobility decisions mainly related to which type of device ownership and management model should be employed,” Holtby adds. “Now, however, enterprise mobility is a practice and set of supporting technologies that continues to advance the organization in a far more strategic fashion.”
Citing his own successes in helping organizations create more with mobile as opposed to solely consuming or communicating with it, Holtby seemingly favors user experience over any perceived or actual security risks, a controversial point we’ll revisit later. “The people-centric approach over a device-centric approach is vital,” he says, “Because the device will change, but the need for employees to work productively, aided by new technologies will be constant.”
This brings us to some of the latest tools of the trade, most notably Adobe Document Cloud, Adobe Sign, and Adobe Acrobat Mobile — the most widely downloaded and OS agnostic PDF app in the world.
“Our primary goal with these three tools is to make it easier for enterprises to empower their employees in terms of access, manipulation, reuse, and document workflows on any device or platform,” Chugh says. “Many of these workflow enhancements and capabilities have long been available in desktop versions of Acrobat and Sign. But these recently updated apps are a testament to our commitment in making mobile creation a first-class citizen for the modern enterprise.”
This is also why all three tools have enterprise mobility management (EMM) capabilities and app-friendly standards baked in. And depending on your company’s needs (or your reluctance to commit to something new), you can do important things like “fill and sign” and “scan” documents for free without a subscription to Document Cloud.
Scalability with security: How organizations can prepare.
Watch Kerri Strug’s leap to victory.
Whatever tools you feel are appropriate and suitable for your organization, there are some key challenges you’ll need to address before realizing a more creative mobile workforce.
First — security. According to a recent IDG survey, more than half of 1600 senior IT security officers reported security incidents and/or data breaches stemming from personal use of mobile devices.
“This is undoubtedly the main concern of enterprise IT departments in regards to mobility,” says Bryan Bassett, mobile research analyst at IDC. Often these two segments of mobility come to a head. “Install too strict a security policy, and productivity suffers,” he explains. “Too lax a security policy, and organizations open themselves up to an increased risk of a breach.”
Generally speaking, a positive employee experience is going to promote productivity, so the key is finding a balance between the wants of employees and their experience and the needs of the company. Unlike Holtby, however, Bassett believes that “security trumps user experience.” Nevertheless, he says enterprise IT leaders can draw their own conclusions while looking for ways to balance the needs of their workers with that of organizational security.
“Either way, it’s safe to say that all organizations can improve existing policies and work-flows to promote a better user experience for employees, especially if increased productivity is driving their mobile investments,” he says.
To that point, Chugh says executives must view creative mobility as an opportunity rather than annoyance or hindrance. “Current mobility management solutions do the basics in terms of getting apps to their employees, but going beyond this (in other words generating more documents from the field) is seen more as a restriction than productivity enabler. Thus, enterprise mobility should focus more on mobile productivity,” as opposed to just keeping the lights on.
Another important issue is scale. Simply put, many enterprises today lack the proper network infrastructure to handle the increased traffic and bottlenecks caused by the addition of substantially more devices, apps, and access points.
Not only that, but Bassett is quick to point out the pesky and complicated existence of multiple document instances. “Changing how we send, receive, and store electronic communications has been a hard habit to kick,” he says. “Mobility and near ubiquitous connectivity has made it very easy to transmit information on a whim.”
It’s so easy now, that we’re often left with multiple digital artifacts of the same or slightly revised documents in our email, on our desktop, or in the corporate cloud. “Granted, cloud storage, and enterprise mobility management software has helped to alleviate this issue to a degree,” Bassett says, “but it remains a persistent problem.”
On top of that, increasing mobile collaboration is a top goal. Whereas before the first wave of enterprise mobility empowered individuals to consume and communicate more, Sharony expects more creative teamwork now. “We need to focus more on collaborative tools, in addition to individual access and creation. Instead of just consuming and communicating 24/7, we should be producing collaborative assets.”
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceAnyone to help me how to go about creating drop-down menus on www.myhospitall.org I failed using the method I was told of using _submenu.
It worked out when I was using a custom theme on blogspot but the native theme isn't able to do using _
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceGeneral Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsYou're busy and don't have time to wait, which is why you need to stop reading this thread and get back to organizing your Pogs. Rate this thread to express how the OnePlus 5 performs when multitasking. A higher rating indicates that the OnePlus 5 keeps many apps in memory so that they don't need to reload, and that when moving between apps, transitions are smooth and performance is excellent.
Then, drop a comment if you have anything to add!For those wanting a phablet at an affordable price, the Honor 4x delivers. Released in October of 2014, the Honor 4x packs a HiSilicon Kirin 620 SoC which features a 1.2 GHz octa-core CPU and a Mali-450 GPU, backed up with 2 GB of RAM. The large 5.5" IPS LCD display has a resolution of 720 x 1280, which equates to a pixel density of ~267 PPI. internal storage comes in at 8 GB, but this is expandable by way of microSD. Cameras include a 5 MP secondary and a 13 MP primary, which utilizes a LED flash. A quad-core Qualcomm variant of this device is available in some regions.Register or Login with Google
hi, is there any way to pass safety net?
Enviado desde mi SM-G955F mediante Tapatalk
Yes
Open EdXposed Manager > Settings (in hamburger menu).
Scroll till the bottom & tick "App List mode", "Force hook modules" & "Pass SafetyNet"
Reboot & you'll be able to pass SafetyNet.
Also make sure to add the Banking apps/other apps which require passing SafetyNet in the Black list (Applications in Hamburger menu).
Sent from my #FlagshipKiller6T using Tapatalk
Does Snapchat detect xposed? Does it cause account to get locked? Is there any walk around?
Does Snapchat detect xposed? Does it cause account to get locked? Is there any walk around?
Yes, but there is the special Snapchat Edxposed in Edxposed Manager. I currently use it and I've never been locked out.
Right now I have magisk and used magisk hide for Snapchat. How exactly do I install edxposed and install Snapchat edxposed now without getting locked? Can you please explain stepwise?
Sure.
Go to Edxposed Manager.
There should be a Snapchat tab among the tabs at the top. Tap that.
There will be a drop down menu where you can choose between the Sandhook and the Yahfa version (I'd recommend Yahfa since it's more stable).
After you select your build, tap on Install/Update.
This will download the zip onto your internal storage (Downloads folder).
Now exit Edxposed Manager and go to Magisk Manager.
Go to Downloads and install the Riru Core module.
Then go to Modules, tap the + icon and look for the Edxposed zip that you downloaded earlier and flash that.
Reboot and profit. The reboot may take some time so please be patient.
Do I have to uninstall Snapchat before installing edxposed? Do I have to log out or take titanium backup?
Nope, but maybe take a backup of Snapchat just in case.The OnePlus 3, available in gold or graphite, is an all-metal phone that is powered by the Qualcomm Snapdragon 820 CPU with 6GB of RAM and 64GB of storage, with no microSD expansion, but with dual-SIM capability. The battery is 3,000mAh and can be charged up to 60% in 30 minutes with the included Dash charger. The AMOLED display is 5.5" and FHD resolution. It's based off of Android 6.0.1 and is powered by OxygenOS which included many enhancements to Android.I am looking for a way to import arguments into came from a c# so does application. I am creating an application but I cannot find a way to allow me to code the arguments to import. All help appreciated.
Sent from my K013 using Tapatalkas with other devices from blu they do not have a public download of there roms. So here is the stock rom pulled from the device with SP-Flash tool.
Both the shipped rom build fingerprint
ro.bootimage.build.fingerprint=BLU/G90/G0310WW:10/QP1A.190711.020/1585383273:user/release-keys
ro.system.build.fingerprint=BLU/G90/G0310WW:10/QP1A.190711.020/1592848714:user/release-keys
I know the first thing to have before modifying android is the method to recover from bad edits. So here they are.
Other works will be stored in this same folder.
https://www.androidfilehost.com/?w=files&flid=315927
First stock rom is Dumped to github, If you need or want specific files, without needing to download whole rom.
https://github.com/mrmazakblu/blu_g0310ww_dump
Stock kernel source:
https://github.com/mrmazakblu/Blu_G9...W_stock_kernal
Device INFO
.App monetization is a problem that app developers have been facing since the medieval times. Now finally there is a simple and zero cost solution. With it app developers can achieve an average revenue 60p-80p per DAU (additional revenue if you are already monetizing). The deployment requires a simple web URL integration in the app. This highly engaging new revenue stream also leads to increased retention. The name is Qureka Lite
What is Qureka Lite and what does it do?
Qureka Lite is a mWeb version of Qureka app that can be easily deployed through URL integration onto the web/ mobile destinations. Qureka app is a top-rated interactive Quiz based game show app on play store with 15 mn+ installs in India, it offers non-monotonous fresh content like Quiz shows, prediction, casual games in innovative formats.
Making money using Qureka Lite is literally effortless and sky is the limit
The ad revenue generated on Qureka Lite is shared with the publishers on 50:50 basis. We target average revenue of 40p per DAU to begin with and grow it to Rs. 1 per DAU in a year’s time. Our publishers usually hit average revenue of 60p+ within one week of going live. So an app with 10,000 DAU’s can go from Rs. 1.2 Lacs of revenue in the first month to Rs. 3 Lac per month in a year’s time. The math is simple.
Engage users like never before. Once they are in they’ll stay for some time
Users play games (Quiz shows & prediction games) on Qureka Lite in your in app browser. The topics of these games range from news, sports, current affairs, entertainment, science, culture and more. Average time spent on these games per day is 25 mins – 30 mins per user because of their highly engaging nature.
It is literally money for nothing
All this comes at absolutely no costs not even hidden. Running cost, server cost and all other cost are borne by Qureka Lite. Money only flows in one direction – to the publisher
User engagement and monetization is a science and we have cracked it
With the backing of Indian Internet Giant – Times Internet, Cool Boots Media (Parent company of Qureka Lite) has become industry leader in user engagement and monetization. With a strong content team, category experts, robust gaming engine and content management algorithm at place the expertise extends to product and design management for a seamless integration flow and user experience.
To know more email us at [email protected]The Galaxy J2 has a 4.7" screen with a 540 x 960 pixel display. The Exynos 3475 chipset has a quad-core 1.3 GHz Cortex-A7 CPU and a Mali-T720 GPU. There are 8GB of storage and 1GB of RAM. The primary camera is 5MP and the selfie camera is 2MP. There is a 2000 mAh battery and the phone comes in white, black and gold.The Huawei Mate 40 Pro is a 6.76" phone with a 1344x2772p resolution display. The Kirin 9000 5G chipset paired with 8GB of RAM and 256GB of storage. The main camera is 50+12+20MP and the selfie camera is 13MP. The battery has a 4400mAh capacity.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceHi, I tired extracting the apk from the Medium news app installed from Google Play, and no matter what tool I used the resulting apk is installing but crashing on launch...
can someone recommend what can I do? did you have to deal with this problem before?EdXposed is a Riru module, trying to provide an ART hooking framework which delivers consistent APIs with the original Xposed, open-source, stable, low invasiveness and fast.
Support Android Oreo, Pie, Q and R, that means you can use Xposed framework in latest Android!
- Stable. EdXposed has updated many versions, and gradually stabilized.
- Non-virtual. Edxposed is the REAL xposed framework, not the virtual framework.
Supported Versions:
Download:
Edxposed has three different builds
- Alpha: Test version with multiple commits. Download Alpha version in [Github Releases]
- Canary: Debug version. Automatically build by CI. Download Canary version in [EdXposed Manager]
Install:
You'd better understand what you are doing and have the ability to recover from brick. Otherwise, please do not use any variant Xposed.
I'm not responsible for anything you do with your phone/tablet/tv/watch/auto/induction cooker.
- Install Magisk v19+ (for Huawei/Honor or OnePlus 7T/7TPro device, need Magisk v20.2+)
- Install Riru-Core v19+ from Magisk repo.
- Install EdXposed from Magisk repo.
- Install EdXposed Manager.
- Reboot.
- Have fun!
Help:
- If the problem is not solved, try to ask in the community
- If the problem persists, please report the problem in GitHub Issues.
For Developers:
Developers are welcomed to write Xposed modules with hooks based on EdXposed Framework. Module written based on EdXposed framework is fully compatible with the original Xposed Framework, so contrary a Xposed Framework-based module will work well with the EdXposed framework too.
We use the module repository of the original Xposed, so you simply upload the module to repository, then you can download your module in EdXposed.
Source Code:
You can find the build tutorial here
- https://github.com/ElderDrivers/EdXposed (the C++ and Java part)
- https://github.com/ElderDrivers/EdXposedManager (Companion app)
- https://github.com/solohsu/XposedInstaller (deprecated Companion app)
- https://github.com/solohsu/EdXpManager (deprecated Companion app)
Credits:
- @MlgmXyysd and @solohsu, the main creators
- @rovo89, created the original Xposed
- @topjohnwu, created the Magisk, makes all these possible.
- XposedBridge, the original Xposed framework APIs
- Riru, provides a way to inject codes into zygote process
- YAHFA, the core ART hooking framework
- dexmaker and dalvikdx, to dynamiclly generate YAHFA hooker classes
- Whale, used for inline hooking
- SandHook, ART hooking framework for SandHook variant
XDA:DevDB Information
EdXposed, Tool/Utility for the Xposed Framework
Contributors
mlgmxyysd, solohsu
Source Code: https://github.com/ElderDrivers/EdXposed
Version Information
Status: Stable
Current Stable Version: 0.4.6.1
Stable Release Date: 2020-03-01
Current Beta Version: 0.5.0.0 (DevTestOnly)
Beta Release Date: 2020-07-18
Created 2020-03-21
Last Updated 2020-07-19The Xiaomi Redmi Note 7 is a 6.3" phone with a 1080x2340p display. The Snapdragon 660 is paired with 4/6GB of RAM and 32/64GB of storage. The main camera is 48+5MP and the selfie camera is 13MP. The battery has a 4000mAh capacity.I'm a well versed Java programmer and have previously learnt some bit of Android Programming from the 1st edition of the Big Nerd Ranch book. But, a lot of time has elapsed since my first reading, so my knowledge of Android Programming is kind of weak.
I would like to setup a study group of aspiring Android Developers who would like to participate via Google Hangouts.
I expect in the study group, that we will read paragraph-by-paragraph and note down important bits.
Having a study group helps in increased retention of study material. Thus this idea.
If you dont have the copy of Big Nerd Ranch Android Programming with you, I am more than willing to offer you a pdf copy.
If you are interested in joining my study group, lets call it "Catfish's Study Group" you need to be on the following timing everyday in a week except Sunday. Each session will be of 3 hours duration:
IST 9PM to 12AM
GMT 3:30PM to 6:30PM
ET 10:30AM to 1:30PM
PT 7:30AM to 10:30AM
Contact me via [email protected]
or my WhatsApp No. +91 8902265616
I plan on beginning the study sessions as soon as I find a few individuals.https://www.samsung.com/us/mobile/mo...e-d3100tbeguj/
As you can read from the dock reviews, it is not usable with the official Tab a cover which makes the dock kind a useless.
Atm I am using some random chinese cover with Tab A and it does not work either with the dock. The slit in the dock is so slim that the cover should be super slim when folded or something like that.
If anyone knows a cover that one doesn't need to be strip off the tab before entering the dock, pls let me know.This tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/I flashed both orangefox and latest twrp, but I get black screen after going into recovery. System boots though.
What do? I have no recovery ATM. I can try going back to my latest version (2.8) but how do I actually manage to run latest versions without getting black screen?
I've been reading that It might be due to matching kernel that is missing, could it be? What should I do in this case?
Thanks!The Xiaomi Mi A2 is a 5.99" phone with a 1080x2160p resolution display. The Snapdragon 660 is paired with 4/6GB of RAM and 32/64/128GB. The main camera is 12+20MP and the selfie camera is 20MP. The battery has a 3000mAh capacity.Blockchain backed apps will effectively help in setting up any successful business. Sectors such as finance, healthcare, banks, real estate, etc., use the technology to store data securely and for effortless management. Avail blockchain app development services from the most experienced experts in the market - Appdupe. We help you develop your business in a short period with our blockchain-based app solutions.
for more info @ appdupe[dot]comFor the posterity :
in TWRP go to advanced > terminal, then create /cache/recovery with
mkdir /cache/recovery
solved the problem for me
Source : https://android.stackexchange.com/qu...-gt-n7100-t03g
Register or Login with Google
For the posterity :- If you don't have any background, consider learning programming using Scratch or Alice. It seems just suitable for kids but actually for everyone who want to think logically.
- If you have some basic background and want to have solid Java background (which I recommend) before moving to Android development, you should start with "Head First Java". They also have "Head First Android", but personally I don't like it so much.
- After you have a solid Java background, you can start learning Android using this free course on Udacity. It has 5 parts that cover everything that you need to make literally any app on Play Store.
- After you completed the above course, let's make your own project. You don't have to learn other courses or textbooks in order to make an app. You should try to make your own app using what you have learned with the above course. When you making your project, you will encounter real-life problems. By solving it (using Google, StackOverflow, XDA, other tech forums, ...), you will learn more than any course or textbook can help you.
I hope you will find this post helpful for you. If anyone has a question, please leave your question belowThe app is free and without ads!
XDA Article
What is it for:
Helps you to use big screens easily with one hand by introducing a computer like cursor controlled with one finger by swiping from edge of the screen.
How to use:
1. Swipe from left or right margin from the bottom half of the screen.
2. Reach the top half of the screen by dragging the tracker using one hand in the bottom half.
3. Touch the tracker to click with the cursor. The tracker will disappear on any action outside the tracker or after a period of time.
TIP: While using the quick cursor, touch with another finger to open the quick settings menu.
Download
Google Play Store link
Screenshots
Telegram Quick Cursor group
If anyone wants to help by testing the internal builds before the release, please join telegram group
Credits
Quick Cursor is an alternative to the already known Reachability Cursor app. I really liked it, and I appreciated the developer attitude and his vision about the app in his replies online. Unfortunately, NiftyUI's last message about the app was on 7 October 2018 and the last app update was on 4 October 2018 and it doesn't work on most Android 10 phones. I do hope that he is ok, and give him a big thumbs up for the idea and the implementation!
Why
I saw a lot of threads and replies on XDA and Reddit for an alternative app for Reachability Cursor for a long time and I needed one too!
Monetization
The app uses the same monetization scheme as Reachability Cursor: it offers an In-App purchase for "PRO" mode which adds some more functionalities (floating tracker mode, long clicks, edge actions) and a lot of customization on each part of the app: cursor, tracker, trigger area, tracker area, cursor area, feedback. Basically this is a support for the developer (me), because the free version should be enough for most use cases.
Help needed
The app should run on Android 7.0 or later, theoretically. I tested it only on 10 devices running Android 9 and Android 10 (Pixel, Samsung, Xiaomi, Oneplus).
I need help to collect some feedback on this early version from more devices, so please send feedback anywhere (here on XDA, Telegram, Reddit, Email, Play store), including the device name and Android version.
I'm more interested in this topics:
- critical bugs that won't let you use the app properly
- if it works ok daily in your case
- if you see any performance impact on your phone
- 90hz or 120hz affected?
- feature requests
- I need these feedback to estimate the current state of the app and how much work I have to do until I can fully release it, not early access, and more polished. I don't work as a full time Android Developer, so I don't have a lot of things necessary to test it well enough on my own (time, phones, knowledge, etc), and don't want to release the app publicly if it is not polished enough.
Thank you!
Changelog
0.9.37 Beta:
0.9.36 Beta:
0.9.35 Beta:
- highlight the Quick Cursor accessibility service on Android settings open
- improve first run of the app
0.9.34 Beta:
0.9.33 Beta:
- implemented an experimental 'limited mode' for those where the app stops working after some time or doesn't work at all
- prepare settings UI for a more advanced mode that supports gesture (swipe, drag, scroll, etc)
0.9.32 Beta:
0.9.31 Beta:
- add description on list preferences for better UI (when keyboard is visible, edge actions, swipe mode, etc)
- change almost all sliders in the settings with a new one
- fix tracker glitch on "hide cursor" edge action
- fix frame drops on "hide cursor" visual feedback (ripple)
0.9.30 Beta:
- add changelog popup on first use after update
- add info when the accessibility service can't send gesture anymore (in some devices)
- fix bug on "hide cursor" edge action
- fix bug on tap not recognized as tap on OnePlus launcher in some scenario
- fix bug with "Hide cursor" edge action when triggered faster than the reveal animation
- fix bug when tracker is tapped when the hide animation is in progress
0.9.29 Beta:
- - fix multiple crashes:
- - on first time use tutorial slide
- - on phone rotate
- - on long click through trigger zone
- - when trying to detect the keyboard open/close
- - on tutorial auto slide
- - when stopping the app
- - on click
0.9.28 Beta:
- fix bug: QC activated while the keyboard was visible on some keyboard apps actions (many SwiftKey actions, share dialog from Google Keyboard, etc)
0.9.27 Beta:
- fix bug: connection to Google Play store remained open in some cases and the "buy pro" dialog was displayed any time the connection was reconnected
- fix bug: show the toast "PRO version activated" more times, in some rare situations, after the PRO was bought
0.9.26 Beta:
- fix bug with buy pro Google Play popup randomly appear
- sorry to all free users that had this bug, this was not intentional to spam the pro version
0.9.25 Beta:
0.9.26 Beta:
- fix bug with buy pro Google Play popup randomly appear in some rare situation on the free version
- sorry to all free users that had this bug, this was not intentional to spam the pro version, it should be fixed now
0.9.25 Beta:
0.9.24 Beta:
- try to fix "Open Settings" from "Quick Settings" on some phones
- general overall development improvements:
- - clean up some old code
- - fix some leaked IntentReceiver
0.9.23 Beta:
- fix crash with raise triggers above keyboard on landscape
- fix QC enabled on landscape on keyboard action
0.9.22 Beta:
0.9.21 Beta:
- disable QC on lock screen
- fix bug with quick settings opening when phone is locked / unlocked
- fix trigger size not saving correctly on simple mode with location bottom
0.9.20 Beta:
- acessibility service enable tutorial screenshots: https://imgur.com/a/8mMsBmP
- add accessibility tutorial for Samsung
- add accessibility tutorial for Xiaomi
0.9.19 Beta:
0.9.18 Beta:
- add tutorial for how to enable accessibility service on generic device
- add first time use tutorial
- add trigger size config on first time use tutorial
- add share button in About section
- fixed bug on advanced mode: cursor height was not saved correctly
0.9.17 Beta:
- add option to disable QC quick settings and fix open by mistake when touching the margins
- possible fix for Android Quick Settings show for 1ms on some phones when tapping the trigger
0.9.16 Beta:
- triggers can be disabled when keyboard is visible
- triggers can be automatically raised above keyboard when it is visible
- improve trigger performance on tap
- fix "hide on outside tap" bug (not everyone affected)
- fix bug in "floating tracker" mode when a long clickable element is behind the small tracker on the edge
0.9.15 Beta:
- draw tracker and cursor over system apps (like Settings) (this already worked on some phones)
- fix tracker "hide on outside tap" config on some phones (Note 10+, and others maybe)
0.9.14 Beta:
0.9.13 Beta:
0.9.12 Beta:
- internal refactor of the code for better development in the future. for those who use the shortcut feature, you need to recreate them
- fix bug with PRO in app purchase. a big change on how PRO IAP is handled in the app, hopefully nothing will be impacted for those who bought pro already
- by fixing the above problems I unblocked the development on new features
0.9.11 Beta:
0.9.10 Beta:
0.9.9 Beta:
- fix navigation bar size bug when using "bottom" position
- add "create a copy" in advanced mode
- add feedback and news channels (telegram, XDA, Reddit, email)
- add vibrations and visual feedback on click settings (both are off by default)
- take into consideration navigation bar height in advanced mode
- change all controls from advanced mode from PX to DP
- fix bug when "inactivity hide" is disabled
0.9.8 Beta:
- make trigger area to not respond to long clicks if a clickable view is behind it
- fix bug when changing back to simple mode
- fix "create new" zone bug in advanced mode
0.9.7 Beta:
- fix overlapping triggers when "Location" is "Bottom"
- add 3 options to support the developer when buying the PRO
0.9.6 Beta:
0.9.5 Beta:
- remove accidental taps of trigger areas (react only to drag or long tap)
- improve click performance (fix some delay issue)
- create shortcut to trigger the cursor from other apps (example: FNG)
- improve accessibility service performance
- improve performance for timer based actions
- increase default trigger size to 16dp (because of no accidental taps)
- fix bug on zone delete
- fix wrong position on preview in advanced mode
- fix bug when changing from floating mode
0.9.4 Beta:
- rename "Move area" to "Tracker area" in swipe zones preview
- preview both trigger zones (left and right) on simple mode
- enable dark theme for all phones
- fix bug with "Override force-dark" from Developer options
- probably fix the edge side action set to nothing
- fix main screen scroll on small devices
XDA:DevDB Information
Quick Cursor: one hand mouse pointer, App for all devices (see above for details)
Contributors
micku7zu
Version Information
Status: Beta
Current Beta Version: 0.9.9 Beta
Beta Release Date: 2020-04-25
Created 2020-04-25
Last Updated 2020-08-28I'm still waiting for access so I can upload the modified file, or perhaps a.vandelay can modify his (and take down original since it's risky).
My phone is a daily driver so I can't play around. I'll probably order a second one though now I've got it with clean 8.1. I'll be testing battery life shortly but it's looking promising there, the logcat is a lot less chatty than the stock which hopefully means less wakelocks.
Be good if you can try a 9.x build. There's lineage builds that might work well.
y'all are incredible... the whole community. I took a leap of faith -- I'm a geek, but have spent very little time on android guts / xda community -- and followed the instructions at the start of this thread, but using the file attached above. I can happily confirm I'm the proud owner of a stock pepito.
I have a US model, with an AT&T SIM. The Verizon message is (of course) gone. Battery life is anecdotally much better. Everything seems to work... 4G, 3G, phone, wifi, bluetooth, camera, mic... I installed a volume control app since that's not in the pull down menu any more. what else is there ?!?
Two things I can think to mention:
1. I do get a message at boot that says something about the device has been modified, but it continues to boot fine regardless. I assume it has to do with the dm-verity (which I think I did correctly), but haven't dug into it yet.
2. If you run Sugar within Virtualbox, be sure to install the Virtualbox "extension pack" that enables the USB 3.0 hub ... that was the key to getting it to work for me.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRemix OS from Jide is a reimagination of Android that provides a desktop-like windowed environment, powered by Android, to grant the benefits of the mobile OS with productivity characteristics of a desktop operating system such as a taskbar, true multi-tasking, and more. It's currently available on hardware made by Jide, such as the Remix Mini, but is also available as a bootable operating system for X86 devices.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceKernel features:
- Build with custom toolchain blu_gcc-10.2 (cortex-a73.cortex-a53 targeted, build from gcc-10.2.0 snapshot with latest bleeding edge components)
- Full -O2 build with device and target flags enhanced, linaro build improvements, etc
- Less is more: stockish OP5 builds based on OnePlusOSS/android_kernel_oneplus_msm8998
- Systemless installer (doesn't touch system partition, OTA friendly), AnyKernel3 backend (compatible with autoflash apps)
- Removed some debug and logging options
- ARM enhanced performance and battery patches
- CVE security patches, general upstream and CAF fixes
- Several CPU Governors (blu_active modded own governor by default - fastlane mode available!)
- No OC, use 300HZ kernel timer frequency
- msm_performance input boost toggle on/off (enabled by default), tweaked cpu_boost driver
- Enhanced TCP methods (westwood is default), Network and Wifi tweaks and updated drivers
- Several I/O control tweaks, added schedulers FIOPS and ZEN v2 is default, tweaked and upstreamed filesystems (F2FS, ExFAT, NTFS, CIFS & NFS)
- Removed verify and doesn't force encryption, patched SafetyNet flags to pass CTS
- Stock thermal driver by default (custom tunables available for ROMs with no thermal daemon)
- Disabled hotplug, also on low battery levels (CTL and BCL)
- Optimized crypto routines
- ZRAM Swap (LZ4) and adaptive LMK on by default
- Vibrator Strength tunable and Gesture Haptic Feedback control (touchpanel and FPR)
- KGSL fixes and reworked GPU driver (goes to idle @ 180MHz)
- adrenoboost enabled by default at low level
- KCAL - Advanced color control for Qualcomm MDSS v2 (RGB calibration and post-processing features)
- KLAPSE support (v5.0)
- Backlight min brightness option
- USB Fast Charge (USB mode up to 900mA with MTP on)
- Battery/Notification LED control
- FS fsync toggle on/off
- Wakelock blockers available
- zx2c4's wireguard support
- CDROM emulation on mass_storage (compatible with DriveDroid 0.10.36+)
- Compatible with Kernel Adiutor, EXKM, FKM and others
FKM download configs: oos | custom
Extras download location
(No mirrors please)
Warning: If you come from other kernel or have any issues, you should dirty flash your ROM before flashing blu_spark zip to avoid problems.
Reflash ROM -> if you want root flash SuperSU or Magisk (default, no plugins/modules) -> flash blu_spark.
If you are already rooted or upgrading between blu_spark versions, just flash the kernel zip. Also uninstall or clean data of any kernel control app you're using.
About bugs and troubleshoots: don't bother to post if a log isn't ready or without steps so the behavior can be replicated. I only active support stock OOS with NO mods whatsoever (apart from root). That includes NO support if using xposed, Magisk with modules, etc.
If you're using custom ROMs (including OOS based ones) or Open Betas you're on your own. I'm only interested on debugging stuff in stock and stable OOS.
Save the SOT and battery stats/screenshots for general threads, here we deal with development, not personal tastes and results.
Also don't spam this thread with LOS or other ROMs stuff like "this don't work, my app doesn't open, etc" , no OT about OTAs, apps, ROM bugs, Recovery/TWRP troubleshoots and other userspace stuff. There's threads for it, use them.
Going back to stock: This kernel installer doesn't change your filesystem. You can backup your boot.img with TWRP before flashing blu_spark if you want to go back to full stock or just dirty flash your full ROM.
If you like my work, donations are always welcome.
Don't forget to hit thanks and rate the thread nicely, it's free
OnePlus 5 development unit donated by OnePlus. Big shouts to them
Very proud of being on the OnePlus Developer Program, special thanks to Adam K. for being such a supportive person.
XDA:DevDB Information
blu_spark kernel for OP5/T unified, Kernel for the OnePlus 5
Contributors
eng.stk
Source Code: https://github.com/engstk/op5
Kernel Special Features: Powered by sparky
Version Information
Status: Stable
Current Stable Version: r209 unified A10
Stable Release Date: 2020-09-18
Current Beta Version: r194 unified pie
Beta Release Date: 2020-04-21
Created 2020-01-16
Last Updated 2020-09-17Mobile app development is slowly becoming a mainstream digital solution and the number of apps on the app stores keeping on increasing rapidly. Today number of businesses are coming up with the need to get mobile apps to build. For them, it poses a critical solution that can be very helpful in expanding their business. Today different technologies and frameworks have come up to meet the ever-changing business needs. The popularity of cross-platform app development is increasing too. However, there is always a point of debate when it comes to choosing the right platform for app development.Many of you all know me from the Oneplus3 forums where i had manually patched the boot images for Dm-Verity and File encryption.
OnePlus has introduced the Parallel App space into almost all their phones from Oneplus 3 till their latest released ones. But the main drawback of it is that it allows only a very small handful of preselected apps only to be installed into the parallel space. Users resort to third party apps to create additional copies of their apps. But these third party apps use up a lot of memory, lag the phone behind and the apps installed into them doesn’t seem like a natural app in their performance. That's a major drawback. Keeping that in mind I have developed a Windows Application which seamlessly install “ANY APP” you wish into the parallel space in OnePlus phones. These apps behave and work seamlessly and fluently as any other stock installed parallel space app because it is installed into the default parallel space that OnePlus uses. Now get ready to use any app in two on your OnePlus phones.
PREREQUISITES:
*Any OnePlus phone(or for that matter any phone where the Parallel user space id is 999)...I plan to update the application in near future if you provide your phone's Parallel space user id (which can be obtained via this application) and details in the XDA forum post. No etas.
*ADB Driver
*OnePlus phone drivers from your phone after connecting it via USB
*Windows 10 is recommended
*.NET Package 4 and above
*Phone must be ROOTED, preferably with Magisk. This application won't work on Non-Rooted phones.
*App for installation can be any app. It can even be an app that is not installed already in the default user space. It should be a compatible apk file that's all. The app normally in parallel space gets updated as you update the original user space app. So if that's what you want then obtain the exact base apk file of the installed app from google play store via different methods (downloading from apkmirror, google paly store downloader) or you can get it via various root explorers, for example like Esfile explorer which allows you to save the base apk file from the installed user apps.
*Whatever the app, however you get it, you should place it in the root of the storage (storage/emulated/0) and rename it as install.apk. Renaming is important.
ALL INSTRUCTIONS HOW TO USE THE APP WILL BE FOUND ON RUNNING THE APPLICATION
Just Download the attached RAR file extract it and Run Parallel App Installer.exe
FAQs:
Q:Why do you need this Application?
A:The answer is simple. Go to the Settings in Oxygen OS and select Parallel Apps. You can see only a few apps which can be installed as parallel apps when you have several apps installed in your phone and the app you need as parallel app is not listed there. My Parallel App Installer is made to bypass this restriction in Oxygen OS so that you can install any app you wish into the DEFAULT ONEPLUS PARALLEL SPACE so that it can run like a normal app on your phone without the need for any third party parallel space creator apps.
Q:What is the need for this app when there are other parallel applications like Island, Shelter, etc.?
A:First of all Island, Shelter etc are android applications that you need to install into your phone. Then these apps create a sandboxed space where the parallel apps are run. My app is a Windows application. You just connect your phone press a few buttons and the app you want is installed INTO THE DEFAULT PARALLEL SPACE THAT ONEPLUS OXYGEN OS USES and your app appear in the launcher. Here there is no need for you to install additional app to run the parallel app. It is installed into the default parallel space. So, no lag, no errors nothing. Everything is in the default parallel space.
Q:What apps can be installed?
A:Virtually any app you wish to. It can even be an app that is not installed already in the default user space. It should be a compatible apk file that's all. The app normally in parallel space gets updated as you update the original user space app. So if that's what you want then obtain the exact base apk file of the installed app from google play store via different methods (downloading from apkmirror, google paly store downloader) or you can get it via various root explorers, for example like Esfile explorer which allows you to save the base apk file from the installed user apps.
Q:Can I install apps that usually don’t natively support parallel app installation?
A:Yes. One such app is Signal which doesn’t allow default parallel space installation. You can even install signal by this application into the default parallel space.
Q:Do I need Root for installation?
A:YES. You need a ROOTED phone for this application to work. It needs elevated shell privileges to install the app to the parallel space. But like some users asked, after installation if you remove the root the installed parallel is not uninstalled.
Q:Does it support other phones than ONEPLUS?
A:For that matter, this Application is based on ADB and Shell commands which are common to all Android OS running Phones. So, it can be very well tried on other phone models too as long as the Parallel Space ID is 999. I plan to update the application in near future if you provide your phone's Parallel space user id (which can be obtained via this application) and details in this XDA Thread. No etas.
Q:Will this app get updates?
A:Depends on how well the app is received by this community and the further need for it. If you are interested so am I.
Q:My antivirus flagged this applications as virus. Is it harmful?
A:Don't be ridiculous. No one is going so open in an XDA thread and distributing a virus around. This application contains scripts for shell and adb commands which can be FALSELY ALARMED by some antiviruses. That's all.
Q:The application doesn't work for me. It has this bug, that bug, real bug....etc...???
A:Really!!! That's why this XDA Thread is for. Post it here with explanation. I will look into it and get it worked...But before posting read the prerequisites for the application well.
XDA:DevDB Information
Parallel App Installer by XENNET, Tool/Utility for all devices (see above for details)
Contributors
Xennet
Version Information
Status: Stable
Current Stable Version: 1.0.0
Stable Release Date: 2020-05-17
Created 2020-05-17
Last Updated 2020-05-18XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceNewest build fixes problems with android 9 and 10 crashing in specific windows of the launcher
Going to test your launcher by curiosity.
Thx !
Register or Login with Google
The app in your GDrive is (always) updated ?
Going to test your launcher by curiosity.
Thx !
Hi, I was wondering if you could add an import feature?
I take a lot of time to setup my whole homescreen and it would be amazing to have an import feature. Thanks
I want to import my nova launcher setup to this launcher.
Hi,
I was more curious and installed it in my android 8.0 with custom system UI colours (non rooted).
when I set as launcher, the system UI get restarted again and again. Finally, it ended up with Factory reset.
beautiful launcher 😍 works great on my old Nokia 8, on my Nova 5T not so much (cause Huawei) I'll watch the progress of this launcher from now on, thank you for this, Pledge doesn't work on the pre- beta
Great launcher but it's a bit buggy for me on One UI. The header text is dark in the settings and also in app options when using dark mode and adaptive icons don't work properly for Samsung apps. The status bar also is dark on home screen and blends in with the wallpaper so it's hard to read. Also when you open the app drawer the shelf doesn't completely hide the app icons (the top portion is still visible). I don't know if that's by design but it looks weird. Search doesn't work (probably because I don't have the Google app installed but if that's the case I wish there was an option to disable it). Creating a widget causes the launcher to freeze, and it only recovers when I clear data and force stop. When you press and hold an icon, even if the side menu shows up partially, if you leave pressing the app, the app will launch. You have to wait for the side menu to completely open. That's not much of an issue once you get used it's behavior. It's an early build so the bugs are expected but I thought I will report them anyways.
That won't happen because this launcher uses a different style and approach to the launcher scene. The most customization you will do in this launcher is color scheme and icon themingSystem requirements
Screanshots
Short description:
Look for software on Huawei servers, the data found integrates common database.
Description:
The program is looking for warehousing and firmware for Huawei's devices. At this point in the common database contains more than 10000different firmware for different devices. In the future, the base will be supplemented by team Team MT and ordinary users who want to find the latest firmware for your device.
Capabilities PC version
- Search firmware for different ranges
- Search firmware in common database
- Proxy server for sending firmware to smartphone
- Built-in firmware loader
- Search for firmware in a common database.
- Downloading, when using a multi-threaded download with 128 threads, the speed reaches 5 megabits per second.
- Unpacking UPDATE.APP from the downloaded firmware.
- Local proxy server for sending firmware to smartphone
To begin your search you must specify the value ranges G g and start the search, if you do not know what range to choose the easiest way to find it by clicking on the tab the total base in the filter field, enter the name of your model from the menu Settings-> About telefone-> Model then click search.
About threads
On streams are divided value v, ie, v n is the number one stream. The more threads, the higher the load on the processor and the network does not make sense to put in 1024 at a low flow speed internet connection, as it will not speed up the search speed of firmware, perhaps even slow down.
Download version for Windows
Latest version (Beta)
Download version for Android
Page for download Firmware Finder (Team MT)
You can help me by sending this post to the theme of their device
Changelog
Version 1.0.0.3Hi, I tired extracting the apk from the Medium news app installed from Google Play, and no matter what tool I used the resulting apk is installing but crashing on launch...
can someone recommend what can I do? did you have to deal with this problem before?The Nook Tablet 7 is an entry-level tablet from Barnes & Noble. It features a 7" IPS display with a resolution of 1024 x 600, giving it 171ppi. It's powered by a MediaTek MT8163 quad-core ARM Cortex-A53 processor, with Mali-M720 MP2 graphics. It comes with 8GB internal storage, with another 128GB available via microSD card. There's a 5MP camera on the rear and a 2MP camera up front. The Nook 7 has a 3000mAh battery, dual-band 802.11a/b/g/n WiFi, Bluetooth 4.0, a mono speaker, and runs on Android 6.0 Marshmallow, giving it full access to the Google Play store.Does this still have "Modifying system files leads to reboot" issue or it's solved ?
Register or Login with Google
[*]Copy the boot.img file to your device.
[*]Download and install the Magisk Manager apk from the offical Magisk Thread.
Soooo... Anyone know if Android 10 on the SM-T590 can be rooted? I find running the latest Android version more important than having root, so I just updated, but having both would be ideal.
<ID:0/007> Added!!
<OSM> Enter CS for MD5..
<OSM> Check MD5.. Do not unplug the cable..
<OSM> Please wait..
<OSM> Checking MD5 finished Sucessfully..
<OSM> Leave CS..
<ID:0/007> Odin engine v(ID:3.1401)..
<ID:0/007> File analysis..
<ID:0/007> Total Binary size: 26 M
<ID:0/007> SetupConnection..
<ID:0/007> Initialzation..
<ID:0/007> Get PIT for mapping..
<ID:0/007> Firmware update start..
<ID:0/007> NAND Write Start!!
<ID:0/007> SingleDownload.
<ID:0/007> boot.img
<ID:0/007> RQT_CLOSE !!
<ID:0/007>
<ID:0/007> Complete(Write) operation failed.
<OSM> All threads completed. (succeed 0 / failed 1)
<ID:0/007> Removed!!I've been using my OP5 since February when I bought a used one off of Swappa. I have found that I actually get better LTE in places that my N5X didn't get good signal (I had voice, but data was about as fast as 2G even though it was on LTE). Now, I get decent speeds in those same areas (higher end 3G probably akin to HSPA speeds).
I would give five stars, but the problem with the 3g network is awful. In my city there are no 4g/lte operators, my internet conection does not work, I have to constantly switch on and of the airplane mode, it's annoying.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceGeneral Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsMore
1 posts
Join Date:Joined:Jan 2020 Less
Web App Development
Hi there,
I have read your requirement carefully that you need a web app for the website.
We have a team of highly skilled developers with experience in web app development and I believe in doing the best quality of work for our clients and our developer always takes care of security features from the beginning of the application development after completion perform rigorous testing. Moreover, I can give a very professional and excellent result for your requirements.
Our Relevant Skills Are:
1. Front-end: Angular, ReactJS, Javascript
2. Back-end: Node.js, RoR, PHP, MySQL, MongoDB, Wordpress, Python
3. Mobile: iOS, Android, Hybrid(Ionic, React Native)
Looking for your prompt response and allows us to have a discussion with you regarding the price and time of the project.
Kind Regards
Andrew
Sr. Business Developer at ArStudiozI am facing an issue where a folder by the name 'migrator' is getting created, at random timings in the sdcard folder.
This started happening around 6 months ago and wasn't too much of problem and I would just delete the folder. It would then be recreated at a later date. Recently, the phone is running out of space and has been slowing down the phone while it is gets created in the background.
I have tried deleting most applications one at a time to find any app that causes the issue, but haven't been successful in finding the cause.
I am rooted with magisk and currently on Oxygen OS 9.0.4
I would appreciate any help to find the root cause and fix the issue.
Thanks in advance!Say "cheese", then rate this thread to express how photos taken with the Samsung Galaxy Tab A series come out. A higher rating indicates that photos offer rich color (without over-saturating), sharp detail (with all subjects in-focus), and appropriate exposure (with even lighting).
Then, drop a comment if you have anything to add!The bottom line is that, you install via Odin the firmware itself and the custom recovery - TWRP , that is, two in one . And after successfully installation firmware via Odin automatically opens immediately TWRP, where I recommend immediately to install SuperSU or latest magisk and then fix or attach below . In result we have a stock firmware with TWRP and root.
Notice. Do factory reset before flashing.
P.S. I tried this mod over current 6.0 rom with installed TWRP. I think if try this mod without installed TWRP you need checked internal memory. If you have 0mb you need to do Format data before flashing supersu and fix.
Downloads : https://www.androidfilehost.com/?fid=673368273298975848
UPDATE. I did mod based on the 8.1 OS firmware
Latest builds no need fix only magisk!
Downloads all builds for SM-T585 and SM-T580(Updatable)
Importantly :
If you have issue with download change your browser to Firefox or use downloader.
Credit:
@followmsi for his awesome TWRPRecently my wife's oneplus 5 was on charge, thankfully in the same room as we were in, when all of a sudden we could smell a plastic burning smell and saw the cable at the usb type c end with a small flame and melting.
I immediately turned off the socket but couldn't remove the cable from the phone due to the heat of it. Thankfully the phone was ok.
I contacted OnePlus immediately where i was told it would be brought to the senior engineers attention. Next day i got an email that a new cable was being sent out but no mention of the serious implications that could have happened or any notice of investigation or notification to other owners which is very poor on OnePlus's part. I couldn't care less about getting a new cable it's about the potential implications to my family and someone else's family.
This is what has prompted me to advise you here to be very cautious whilst charging. This incident occurred with the original cable and charger for the OP5, so please be careful. Do not leave unattended or charging while asleep.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceSo, first of all, at first I thought that it is impossible to rank an app with just a few keyword installs. But, I knew that it would't hurt to try them. So I just signed up at this site: KeyApp.top - Android keywords promotion and ordered my first 100 installs pack(50 daily for 2 days). It is good to know that the installs from this website are genuine US installs, and the price is very low ($0.09per install and 0.15$ for keyword install), but it worth because the website has a self-serve paltform so you can easily create your campaign . So after I bought these installs, had to wait 2 days, Google updates their ranking in this time, and suddenly saw that my app jumped from ranking 99 to 19. The miracle didn't start here. After one month, I checked the ranking of the app, and the ranking remained the same.
Link: KeyApp.top - keywords installs promotion
They provide installs from many Geolocation distribution (30 countries): US , GB , DE , IN , CA , AU , BR...etc;
You can easily boost your keyword ranks on Google Play to top You can see your app on first positions for popular keywords and get more organic traffic to your app. 1-2 days and you will see the result!
I tried their service in many of my Games and i could see result, I targeted via keyword and i got pretty good result.
If you’re new to app promotion with paid incentive installs check out this strategy: day 1 - 300 keyword installs, day 2 - 350 keyword installs, day 3 - 400 keyword installs. This will be enough for you to see the result and significantly go up in rank. Then you can adjust your daily quantity and keep boosting further as top positions need more installs.
If you guys are interested, i'll be more than happy to share with you more strategies and case studies to rank your apps using Keywords install, getting your app from 250 rank to 6th,3rd in the search list depending on the keyword in less than one week.Tested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.The Huawei Mate 30 Pro is a 6.71" phone with a 1440x3120p resolution display. The HiSilicon Kirin 990 chipset is paired with 8GB of RAM and 128GB of storage. The main camera is 40+40+8MP and the selfie camera is 32MP. The battery has a 4500mAh capacity.I just bought 2 days ago the Samsung galaxy tab A 8.0 (2017_ SM-T380 model.
It didn't come with any type of stylus and I read that it being the T series that the S-Pen wont work with it.
Does anyone know of a stylus I can use for it that's in some what of a comparison to the S-Pen?
I know they make these stylus I saw in Best Buy called the Bamboo stylus. I don't know much about them or if they even work with this model of tablet. I had found them in the section with all the iPad accessories.
Thank youI am working with a developer on a mobile app that has a user and a service provider so 2 separate apps. We need to have the ability for the service provider to have an in app wallet and be able to transfer that money from the in app wallet to an account of their choosing at any time.
We are using Braintree for payments but they are telling us that Braintree cannot handle that. I see that Uber uses Braintree.
Does anyone know if it is possible or if there is something else they are using to make this possible
Sent from my iPhone using TapatalkIts Amit,
I recently decided to bring back the dead soul of my old phone with the help of custom ROM's.When I searched for my phone i.e LYF Wind 3(LS_5502) on google i came with no result except for the TWRP Recovery.
By the way, my phone's i.e--LYF Wind 3(LS-5502) android version is lollipop V5.1.1. It's running stock android provided by the LYF company till then no updates,no security patches and no-nothing.
Then I decided to port ROM for my phone with the help of millions of tutorials and guide & also with intense work.
I finally had made a stable custom Rom-----MIUI-Pro Miui 8 on top of lollipop-V5.1.1.
It has following features:----->
- VOLTE Working{Added option to turn on and turn off volte}
- All Miui 8 Features
- Wi-Fi & Hotspot Working
- Bluetooth
- All sensors working
- Gesture-Anywhere feature
- Animation Control
- small DPI
- feature to disable buttons
- Themes Working
- All System app extra-customization
- Added feature to import third party themes
- Notification customization
- Home-screen customisation
- Mi Account{Working}
- App Lock
- Dual Apps
- Weather Mate(M8) intead of normal weather app
- Volume Boost
- Rounded-Corners
- Dolby Atmos Pre-installed
- Pre-Rooted
- Mix Explorer
- Jeejen Home
- Chinese Bloatwares Removed
- One-Handed Mode
- And many many many many many more
*But I faced some bugs like this which i was not able to solve.:--------->
I was not able to completely port camera.
When I start phone everytime(power ON), and open camera it work for a slight second(upto 4-5 seconds)but then after it says ''can't connect to camera''. And after it whenever i launch camera app it says the same.
Except Camera this ROM is smooth and very much stable than the stock one.
I'm using this for quiet a month and had felt no issues
It had better battery backup,batter RAM Management
If any dev is seeing this please help me solving th camera problem described above
And here is the link for the miui pro ROM :------->
https://drive.google.com/file/d/1mo7...w?usp=drivesdk
Note That Gapps are already included.
Procedure for Installing ROM:-------->
1) Download the ROM
2) Boot to twrp and wipe data,system,cache
3)Install the ROM so simple.
4)Enjoy!
SOURCE :
As The oem has not release the kernel source which is againt gpl that android follows.
So I have ported ROM on top of prebuilt stock kernel.
Kernel
Have Fun!!!
And
Once
Again
THANKS!I use visual studio for programming in C++ and am interested in learning to develop for android. I have previously done so in eclipse but it has been 2 years or so and that was in Java. I am interested in programming in C++ and was curious what IDE y'all used.
Thanks,
Fish.I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveI'm trying to integrate excellent frameworks to AOSP to improvement UI and default apps' features.
I heard that there are frameworks like Gionee(Amigo), Meitu(Mate), Prize, FreeMe . I want to get excellent frameworks source code. How can I get it?
Thanks.Today I bring you a collection of new wallpapers to add to your device, ported straight from the OPPO's ColorOS 7+.
This means, most of the wallpapers showcase different effects upon tapping on the desktop, swiping or moving across pages, as well as color changes when it's night time or day time. This is something that fake ports can't achieve, as they limit to just play a screen recording of the wallpaper instead of using the actual GDXLite-based code from the original wallpaper.
Special thanks to @AndyYan for providing me with these to port!
Downloads in the next posts.
XDA:DevDB Information
[8.0+] ColorOS 7 Live Wallpapers ported to any Android device!, Theme for all devices (see above for details)
Contributors
linuxct, AndyYan
Version Information
Status: Stable
Created 2020-09-21
Last Updated 2020-09-21Then, drop a comment if you have anything to add!
Register or Login with Google
no problems at all over 200 photos taken since owning and Im very happy with the quality of the photos.... remember its a phone with a camera most pics will be shared to social media and forgotten about.
OOS 4.5.10 Stock Camera App
Is this with no editing? Great picture.
Yeah no edit auto settings with oos camera2. Can I dirty flash this build from Eric lev builds on 5t lineage 17.1 ?
3. Does this build change twrp recovery ? Or is it only in los18 ?
Register or Login with Google
1. Will this unofficial get OTA updates ?
2. Can I dirty flash this build from Eric lev builds on 5t lineage 17.1 ?
3. Does this build change twrp recovery ? Or is it only in los18 ?
Thanks @T1mb3 for keeping dumpling alive!
What are the odds one could dirty flash this over official LOS16.0?
Alert slider not work in my dumpling after last update.
Thanks for report. I'll look into it.
HOTFIX:
* Alert slider is backDid you get brightness working? Thanks
Register or Login with Google
@virsys
Did you provid us with a new crdroid 10 or LOS 10 update ?
THX for all oft your work in this Tab.
@virsys
Did you provid us with a new crdroid 10 or LOS 10 update ?
THX for all oft your work in this Tab.
Anyone??
I'm trying to help a friend out by updating her Galaxy Tab A for her, but she uses two different banking apps, and it has KNOX on it.
I believe one won't function with root, and I suspect the other won't work with KNOX at 0x1 -- so I think it might be a no-go.
If I install Lineage via twrp that will definitely trip KNOX to 0x1.
If I install it via Flashfire I need root first. Then the flashing of the rom itself won't trip KNOX but the fact that the rom has a custom and not stock kernel will.
I could unroot after that I guess, but that still leaves KNOX tripped and at least one banking app not working, and who knows what else.
Or maybe I'm getting this all wrong?
Any advice would be much appreciated!
@virsys
I think with root and magisk/magisk hide option you can use any banking apps...
yeah though root in itself isn't really the issue, magisk can't hide the fact that KNOX will have been tripped by flashing by a custom rom via a root-enabled flashing app.
so that still puts me back in square one with no way to update this tablet higher than Android 7.1 without the issues I described above
Thanks though!
root, install the twrp and make a full backup, doneXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Google Pixel 2 XL is one of two of the most anticipated phones of 2017 launched by Google. The phone features a 6.0" screen with a 1440x2880 pixel display. The Snapdragon 835 chipset is paired with 4GB of RAM and 64/128GB of storage. The primary 12.2MP camera scores a 98 on the DxOMark camera test, making it the best smartphone camera ever. The selfie camera has an 8MP sensor. The 3520mAh battery comes with fast charging technology.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingThe beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCThe Android 8.0 release includes Project Treble, a major re-architect of the Android OS framework designed to make it easier, faster, and less costly for manufacturers to update devices to a new version of Android. Treble is for all new devices launching with Android 8.0 and beyond.I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveI wonder if anybody here could modify this widget so that it was possible to use with any launcher.
My wife wants this widget on her phone but I've been looking all over the internet and can not find the widget in order to work in any auncher and for this reason I ask for your help.
This is youtube link: https://www.youtube.com/watch?v=7AEulmeG8P4
- Here gives to have an idea of how the widget.
I found the widget and put the link to download if some one can test.
Link to download http://www30.zippyshare.com/v/14124762/file.html
Thanks for you attencion and sorry my english because im portuguese. and a newbie in this things from android.Custom ROM eroor system ui forclose has installed all apk and upgrade to TWRP. So that data apk congratulations do not download back already Install ROM cfw then restore Data fixed eroor(fast time and saved Bandwithe). Format systems;cache same eroor. How is there software for Extract to move DATA backup ? Dekstop, AndroidThe beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCMetropolis 3D City Live Wallpaper
Metropolis is a live wallpaper that streams urban, drone-scanned 3D scenes onto your home screen. It currently has 100+ 3D locations in North America and Europe, including:
Features
- 100+ 3D locations (actually 147 now, a complete list can be found on getmetro.app/collection)
- Camera animations, including phone unlock top-down animation and launcher page swipe rotate animation, as well as the scale and speed slider for animations
- Camera parameters, including dolly zoom (adjustable field of view), brightness, vibrancy, and sharpness
- (Pro only) Custom location in North America and Europe
- (Pro only) Wallpaper brightness can follow dark mode
- (Pro only) Blur after unlock to increase the readability of labels & icons
Download & Giveaway
Google Play Link: https://play.google.com/store/apps/d...zht.metropolis
Or just search Metropolis on Google Play
I would like to share 50 Pro IAP codes on XDA, there is no requirement, just open the spreadsheet, redeem the code, and try all features.
However, if you can leave a comment specifying which code you used, or leave a feedback/rate on Google Play, it would be much appreciated. Link (Used: 50/50):
Performance Concerns
Here is the catch: Metropolis is built with Unity. Yes, that Unity game engine.
Now, before you close this page immediately thinking that's crazy, please read my explanation on why using Unity (might get technical):
Currently, the only 3D city model data source that I, as an indie app dev, can get on the market is the Bing Maps Unity SDK. This Unity SDK shares the same upstream data source with Windows 10 Map app and the incoming Microsoft Flight Simulator (well that is just a speculation). That's the main reason I am using Unity to build Metropolis. (I know there is Google Earth but I cannot rip the model due to copyright issues)
I certainly understand your concerns that Unity might destroy your battery life and available memory, and Metropolis does have a relatively high memory usage in current stages. This is mainly due to the SDK's streaming approach. Unlike Pixel LWP or Super Wallpaper in which the data is already baked into a static scene, Metropolis streams city blocks tile by tile, which comes with additional memory cost and draw-calls.
However, the battery cost should be on par with most 3D live wallpapers, especially if you enable the 'adaptive framerate' option in the app. And I will continue optimizing the app with newer Bing Maps SDK that is more memory-friendly. After all, you can always download the app for free and try it yourself.
(BTW, a fun fact: Xiaomi's Super Wallpaper is also Unity inside)
Contact
If you have issues using Metropolis, please let me know using Google Play feedback or writing to [email protected]Evolution X 5.0 for the Xiaomi K20 Pro / Xiaomi Mi 9T Pro [raphael]
/* * Your warranty is void. Or vaild, probably? * * I am not responsible for bricked devices, dead SD cards, Ebolation X, * thermonuclear war, or the current economic crisis caused by you following * these directions. YOU are choosing to make these modificiations, and if * you point your finger at me for messing up your device, I will LMAO at you. */
Pixel UI, customization and more, we are Evolution X!
- Team Evolution X -
@joeyhuab
@peaktogoo (Now RealAkito)
Reach us on Twitter! @EvolutionXROM
Themes
- Pixel 2019 Wallpapers
- Pixel Theme Picker
Gestures
- AOSP Gestures
WFD doesn't work, OK Google detection isn't working either
DO NOT FLASH GAPPS, ALREADY INCLUDED
First Time Install / Clean Flash
1. Reboot to Recovery
2. Download the proper ZIP for your device
3. Wipe Data/Cache/System when coming from non-AOSP ROMs
4 Flash the proper vendor/firmware for your device variant
5. Flash the ROM
6. Reboot to System and #KeepEvolving
Update / Dirty Flash
1. Reboot to Recovery
2. Download the proper ZIP for your device
3. Flash the ROM
4. Reboot to System and #KeepEvolving
Light Screenshots / Dark Screenshots / Download
Donate to me! / Official Chat / Device Support
Other downloads:
- Android OS version: 11.0_r5
- Security patch level: October 2020
- Build author: Joey Huab
- Source code: https://github.com/Evolution-X
- Kernel Source code: http://bigota.d.miui.com/V11.0.1.0.Q...ba584_10.0.zip
- ROM Developer: joeyhuab
XDA:DevDB Information
Evolution X, ROM for the Redmi K20 Pro
Contributors
joeyhuab, abhishek987, peaktogoo
Source Code: https://github.com/Evolution-X
ROM OS Version: Android 11
ROM Kernel: Linux 4.x
ROM Firmware Required: Latest vendor and firmware
Based On: AOSP
Version Information
Status: Stable
Current Stable Version: 5.0
Stable Release Date: 2020-10-20
Created 2020-10-20
Last Updated 2020-10-20The beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTC* Your warranty is... still valid?
*
* I am not responsible for bricked devices, dead SD cards,
* thermonuclear war, or you getting fired because the alarm app failed. Please
* do some research if you have any concerns about features included in this ROM
* before flashing it! YOU are choosing to make these modifications, and if
* you point the finger at me for messing up your device, I will laugh at you.
*
*/
LineageOS is based on the Android Open Source Project with extra contributions from many people within the Android community. It can be used without any need to have any Google application installed. You will need to provide your own Google Applications package (gapps). LineageOS does still include various hardware-specific code, which is also slowly being open-sourced anyway.
All the source code for LineageOS is available in the LineageOS Github repo (without device tree/kernel/vendor repos). And if you would like to contribute to LineageOS, please visit our Gerrit Code Review. Your changelog is whatever was merged into gerrit."
SM-C5000
Android 10.0
64-bit(better for 4Gb RAM, than 32-bit stock)
What's working:
- Display
- Touchscreen and multitouch
- RIL (Calls, SMS, USSD, Mobile data, LTE, dualsim)
- NFC
- Wi-Fi
- Fingerprint sensor
- Audio
- Sensors
- RGB LED, button backlight
- Screen auto brightness
- SD-card (and adopted storage)
- F2FS, SDcardFS, exFAT file systems
- Data encryption
- Bluetooth
- GPS
- Camera (photo,video,flshlight)
What's NOT working (Know issues):
Installation:
- Install only over C5000ZHU1BRA1 stock ROM
- Unlock (https://forum.xda-developers.com/and...c5000-t3407143)
- Install a compatible Recovery (TWRP > 3.2 https://vasy.ru/TWRP/c5lte/)
- Perform a nandroid backup of your current ROM (Optional)
- Wipe data/factory reset
- Flash LineageOS
- Optional: Install the Google Apps (ARM64 - 10.0) addon http://opengapps.org/
- Reboot
Video Installation Manual by O S M A NC.
Download
Donate
Source code:
- ROM: https://github.com/LineageOS
- Device tree: https://github.com/vm03/android_device_samsung_c5lte
- Kernel: https://github.com/vm03/android_kernel_samsung_c5lte
- Vendor: https://github.com/vm03/proprietary_..._samsung_c5lte
Credits:
XDA:DevDB Information
ROM][UNOFFICIAL][Q] LineageOS 117.1 for Samsung Galaxy C5, ROM for the Android General
Contributors
vm03, vm03
ROM OS Version: Android 10
ROM Kernel: Linux 3.10.x
Based On: LineageOS
Version Information
Status: Beta
Created 2020-04-14
Last Updated 2020-09-24I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveAny GPS / antenna experts able to think of a way to increase GPS strength? I want to use my table as a GPS inside of a really thick metal truck. How could I rig up an antenna of sorts to improve GPS strength?XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceAnd so what exactly does fastlane feature do?
Switching lanes ( clock speeds) fast
Instead of ramping up/down frequency to most or least this try to use all available frequencies.
fastlane is a freq step calculation that works more agressively than the default.
Made for people thay need a performance boost without changing too much tunables around.Play Solar System Quiz, an interesting and educational quiz about the planets of our Solar System! What do you know about them? Find out with the quiz questions!
Our new game for 2020 will allow you to learn a lot of interesting facts about the planets of our solar system.
Knowledge about space is really interesting for both adults and children.
Solar System Quiz is:
- -Free intellectual quiz game about our solar system
- -Source of interesting facts
- -Short description for each answer
- -Simple and complex questions
- -Quiz is a great way to develop your memoryThe Xiaomi Mi A1 is a 5.5" phone with a 1080x1920 pixel display. The Snapdragon 625 chipset is paired with 4GB of RAM and 64GB of storage. The main camera has a dual 12MP setup and the selfie camera is 5MP. The 3080mAh battery has fast charging technology.Released in Q1 2016, the Samsung Galaxy S7 Edge features a 5.5" quad HD Super AMOLED display, featuring the distinctive wrapped display edges, which can be utilized for shortcuts and notifications. It's powered by either a 2.15GHz Qualcomm Snapdragon 820 or 2.3 GHz Exynos 8890 processor, depending on region, and comes with 4GB of RAM. The Galaxy S7 Edge is available with either 32GB or 64GB of internal storage, with up to a further 200GB available with microSD card (which utilizes the second SIM slot on the dual-SIM model). The 26mm rear camera features a 12MP sensor with f/1.7 aperture, with phase detection autofocus and OIS. The 22mm front camera has a 5MP sensor with f/1.7 aperture. The Galaxy S7 Edge runs on a large 3600mAh non-removable battery, with Quick Charge 2.0 and wireless charging. The device is IP68 certified for dust proof and water resistance.*Introducing MIND PROGRAMMER (Awaken the Hidden Power of Your Subconscious Mind)
https://forum.xda-developers.com/and...ammer-t3952977
Below are Github download links of riru core, Edxposed and Ed Xposed Installer App
https://github.com/solohsu/EdXposed/releases
https://github.com/RikkaApps/Riru/releases
https://github.com/solohsu/XposedInstaller/releases
[Most Recent Version of Xposed Modules or Newset Releases are Checked and Listed Below]
️🅡🅔🅟🅞🅡🅣🅔🅓 🅐🅢 🅦🅞🅡🅚🅘🅝🅖 🅜🅞🅓🅤🅛🅔🅢 ️
100fastview
Ampilify
Android Phone Vibrator
App Context
App Debuggable
App Locale 2
AppOps Xposed Re
Black Navigation Bar
BlackNavigationBar for OnePlus 5T
Camera notify
Chromepie
Copytoast
Crappa Links
Custom Text
Dark Tricks
Device ID Masker
DisableFlagSecure
Diverted Call
Download Redirection
Eternal Process Lock
Event Lock
Exi for SwiftKey
FakeGapps
Fingerprint Enabler
Firefds Kit (Samsung Exclusive)
Forced Screen Rotation Mod
FSBI
Gboard tweaker
Glitchify
God Mode
Gravity Box Pie (Intial Development)
Greenify
Holo themer
IFont
Icebox Turner
Instant face unlock (initial pie support)
Keyboard Tweak Animation
Kmod FWA
Lin16
Lockmod (working partially)
Lockscreen Disabler
MIUI AOD Notification Icon
MIUI Tweaks
Max lock
Miniminguard
Niwatori
No Network Indicators
No Play Games
NSFW Gboard
Oneplus AppLock Tweaker
Oreo Album Art Remover
Perfectcolorbar (1.5.2)
Physical Button Music Control
PerAppHacking
Perfect Colorbar (works only with Ed Xposed 0.2.9.8 ver)
Quote Lock
Re-enable screenshot
Resflux
Resolve Activity Tweaks
Root Call SMS Manager
SMS Code Extractor
Scoop
Screenshot Delay Remover - Mod
Secure Settings
Shake To Undo
Skyolin helper (partially working)
Smart Clock
Smart Network (some features work)
Snap Freedom
Statusbar Download Progress
Sudo Hide
TrustMeAlready
Tweaks
Twitter Adfree
UndoForAndroid
Uniformed transitions
WA Tweaker (version 2.6 onwards)
X Messenger Privacy
XOverride Headphone Jack
XInsta
Xperia Keyboard Prediction Toggle
Xprivacy Lua
Xposed Blacklist
Xposed Edge (finally)
Xui Mod
Zoom For Insta (Buggy)
️🅡🅔🅟🅞🅡🅣🅔🅓 🅐🅢 🅘🅝🅒🅞🅜🅑🅐🅣🅘🅑🅛🅔 🅜🅞🅓🅤🅛🅔🅢️
( I have highlighted most demanding modules with sign in this category with hope original or other developers resume the development.
100M+ memory saver
App settings
Blur System UI
Boot Manager
Buttered toast
CustomShare
Enhanced Toast
Fingerprint quick actions
Flat style keyboard
FSCB
InstantFaceUnlock
KT2
Lockscreen clock mods
Neo power menu
Net strength
Network Speed Indicator for OnePlus
No Keyboard Auto Popup
No Lock Home
Notify Clean
Prevent Running
(the module is in continuous development but no support for Ed Xposed till now @liudongmiao @sanshao27)
RootToolsNeo
ScreenOff Animation
(Modified One Crashes System Ui)
Whatsapp Extensions
X Halo Floating Windows
Xposed Additions
XQS Backgrounds
Xstana
Xvoice changer
️🅤🅝🅒🅞🅝🅕🅘🅡🅜🅔🅓 🅜🅞🅓🅤🅛🅔🅢️
(Users can check and report in order to move them into respective Working or Non Working Category )
Action Widget
Always Correct
Android App theme engine
ART Deoptimiser
Complete Action Plus
Flat Style Module
Force Fast Scroll
FM Radio Without Headphones
Force touch detector
Google Offline Voice
G3 TweakToolbox
Installer Opt
HTC One Tweaker
L Tweaks
No More Google Play Services
Remember IME
Swipe Back2
XGram
Xposed Groot
Xposed macro expand
Xstana
WhatsApp Extensions
WhatsApp theme engine
🄼🄾🄳🅄🄻🄴🅂 🄰🅁🄴 🅄🄿🄳🄰🅃🄴🄳 🄴🅅🄴🄽🅃🅄🄰🄻🄻🅈....
STUCK IN BOOTLOOP, VISIT THREAD BELOW
https://forum.xda-developers.com/and...escue-t3908439
Ｘｐｏｓｅｄ Ｎｏｔ Ｉｎｓｔａｌｌｅｄ Ｂｕｇ?
Getting Xposed not installed Just Soft Reboot Inside Xposed Manager AppAPK Mirror Link
Problem:
I have installed it on my Mi Box android Tv. It works flawless. But on every restart, it ask for username and password.
The person who shared this apk has already filled the login details, which is in res/layout/fragment_details.xml.
I want to change the login details there, so that I don't have to type username and password every time, I start Mi Box.
I tried using apktools and Android studio to decompile and repack it with modified xml.
But, modified APK give error, Not installed.
Thanks in advance.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThat won't happen because this launcher uses a different style and approach to the launcher scene. The most customization you will do in this launcher is color scheme and icon theming
Thanks anyway, would have loved to move to this one, but might pass this.
Great work on the UI though! I loved it.The beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCThe beta version will be available in 35 (+/-) days for a specific region..
Register or Login with Google
The certificate was received on T290 and T295 Android Q
The beta version will be available in 35 (+/-) days for a specific region..
So, sometime the end of July, beginning of August.
Odin3_v3.14.4https://disk.yandex.ru/client/disk/Odin3_v3.14.4
Region XEV - Vietnamhttps://yadi.sk/d/40aomqaAbp6C_Q
PDA/AP Version T295XXU3BTFE
CSC Version T295OLM3BTFE
MODEM/CP Version T295XXU3BTFE
Region XEV — Vietnam
Build Date 2020-06-23
Changelist 18961046
OS Q
OS Version 10
None yet here in Philippines. Region is XTCXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceGeneral Information
Hi all! So basically, I just wanted to have a single thread with links to my personal collection of Android stuff, which includes both, stuff I've created and stuff other developers have created (that I use). The only reason behind creating this thread is to make it easier for others to find some things which they might also use with their OnePlus 5s. Obviously, some of the stuff here was developed with the OnePlus 5 in mind, so it might/might not work out-of-the-box with other devices. Therefore, I'll also try and mention if something here can be used universally across different devices or just the OnePlus 5. If you see something here that inspires you, go ahead and mod it, just let me know and give me some credit somewhere if it belongs to me or credit the original creator(s) of the mod, if it doesn't belongs to me. Let's get right to it then!
Links to Individual Posts
The final post contains the file name, version number as well as the MD5 hash of all the downloads provided.
Telegram Notification Channel
I also have a Telegram channel where I post a notification everytime there is an update. Both the channel and this thread are kept up-to-date and in sync. If you're on Telegram, you can join the channel: @shadowstepandroidessentialsRegister or Login with Google
The Samsung Galaxy Grand 2 is a 5.25" smartphone, released in January 2014. The 5.25" TFT display has 720p resolution, which is a step up from it's predecessor, the Galaxy Mega. it also improves on the original by sporting a Qualcomm Snapdragon 400 1.2GHz quad-core processor, and 1.5GB RAM. It has 8GB of internal storage, which can be extended by another 64GB using microSD. The 8MP camera is capable of recording 1080p video, and a 1.9MP camera is present on the front of the device. The battery capacity is a reasonable 2600mAh.No. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- LKT sets random nonsensical build.props that likely don't even exist.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- CAF CPU Boost Tweaks
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16As more people around the world trade in their desktop PCs for smartphones and tablets, businesses are looking for ways to improve their approach to enterprise mobility. For many, this trend presents an opportunity to wring more productivity out of their workforce by allowing employees to use their personal devices on the job. Organizations that employ bring-your-own-device policies often report higher levels of employee satisfaction and performance. To optimize these efforts, however, businesses often need to develop their own software that is customized to meet their staff's specific needs. These circumstances have led to a boom in internal enterprise mobility projects, driving the need for better development and quality assurance practices within companies. Which is why, interest in enterprise mobility will only increase in the foreseeable future.
Mobile device adoption rates continue to be robust, and more resources for in-house development are available than ever before. For instance, last year Samsung announced the debut of its latest software development kit. Similarly, many businesses that wish to take full advantage of this resources and bring newer products to the market will need to bolster their internal programming and QA teams, as in-house projects are better suited to address the specific demands of enterprise end users. Keeping an eye on offshoring trends is a must.
Another trend that company leaders should take note of is the rising interest in offshoring. These practices have seen their popularity increase in recent years, as more organizations look to reduce their operational costs by outsourcing software development or testing responsibilities to overseas teams. This trend may be contributing to the growing number of tech professionals residing in regions outside of North America. According to InfoQ contributor Abel Avram's analysis of a recent IDC study, there are now more than 36 million professional developers, hobbyists and workers with ICT skills spread across the globe. Of those individuals, approximately 11 million work primarily as software developers, with 37 percent residing in the Asia-Pacific region.
Meanwhile, fewer than one-third are currently working in North or South America. While the United States has the largest share of both professional and hobbyist software developers of any single country, China and India are not too far behind, holding the second- and third-place rankings, respectively. With the race to accumulate tech-savvy employees gathering steam, taking advantage of every region's talent pool will be vital moving forward. However, it is no secret that there are many logistical challenges to managing application development and deployment since testing teams are now spread across the world.
Time zone differences, in particular, can prevent individuals from sharing updates and providing new information with programmers and testers located in other countries. If these circumstances are not addressed redundancies and oversights may occur, derailing a company's production schedule. A high-quality test management system will alleviate these concerns, however, by providing a single portal for team members to upload important test cases, scripts, metrics, reports and other information. For example, if software testers located overseas want to share the results of their latest tests with on-premises employees, they can simply upload that information in real time through a test management tool. Those records will then be readily available to in-house programmers. These capabilities reduce operational headaches for QA management and ensure that a production stays on track.
It is true that the world has gone mobile. Businesses have started adopting mobile strategies to stay abreast with the growing technologies. Mobile devices are used by enterprises nowadays to streamline their business operations. It provides employees the flexibility to conduct business operations such as sending emails, reviewing orders, accessing business apps, etc. on the go. While the use of mobile phones in business has tremendous benefits, it also throws up challenges like securing business data and maintaining privacy. Enterprise Mobility Management companies like 42Gears offer platform agnostic solutions to deal with the challenges faced by enterprises wanting to go mobile. It offers device and app provisioning, OS configuration, remote wipe, remote viewing, application management, remote file sharing and more.
Consumption and creation: The future of enterprise mobility
The floodgates have opened. The device era is now. What modern enterprise mobility looks like today, what its challenges are, and where it’s heading — according to recent surveys, research, and interviews with leading mobility experts. Before you deploy your next mobile workflow, here’s what you need to know.
Introduction: Better productivity trumps device management.
A lot has changed since the “bring-your-own-device-to-work” phenomenon (a.k.a. “BYOD” or “IT consumerization”) was first observed nearly a decade ago. For one thing, an estimated 95 percent of workers now bring at least one personal device to work with them, according to a recent Pew Research report. And to help realize full global maturity, high growth markets such as Brazil, Russia, India, Southeast Asia, and the Middle East are quickly following suit.
Consequently, “Enterprises are rapidly becoming more and more mobile, particularly among traveling salesforces, implementation consultants, middle-management, and strategic executives,” says Akhil Chugh, mobility analyst at Adobe Document Cloud. As you can imagine, most people read or respond to emails today on mobile, he adds, so it only makes sense that the majority of related work will soon follow.
The good news is the industry is more than ready to favorably respond. “Enterprise mobility has evolved far beyond its pure device management roots,” says Adam Holtby, senior researcher of enterprise mobility at Ovum. “It’s no longer just an IT initiative — it has become a key competitive factor for organizations and an important enterprise competency.”
But as it often does elsewhere, success will require a change of thinking.
Mobility today: Anytime consumption, limited creation.
We’re halfway there. At least that’s what the latest research and expertise suggest. In other words, we’ve gotten really good in recent years at consuming information and corresponding with coworkers, clients, and stakeholders at any time and from anywhere on our mobile devices.
For instance, 77 percent of companies say that they’re using even more mobile apps than they were just two years ago, according to a 2017 Adobe Study of 1500 enterprise executives. Nearly 70 percent of those are using between two and five enterprise apps to get the job done, particularly in training and communication.
Furthermore, over half of those surveyed cited the “need for instant communication” and an even greater “mobile workforce” as the primary justification for enterprise mobility today. And 61 percent believe that if a company hasn’t deployed enterprise mobile apps, they will be at a competitive disadvantage — which explains why 66 percent are increasing their investment in mobile technology over the next three years.
“The first wave of enterprise mobility was very much centered around enabling people to work untethered from traditional devices such as desktop PCs and laptops,” explains Holtby. “In organizations, mobile devices were often only utilized by senior figures, whereas now employees have greater choice, and mobile technologies are more democratized within organizations.”
In that sense, we’ve arrived.
But old habits are hard to break. “Even though a lot of email and other productivity apps are now available on mobile, end users still restrict their critical or time-intensive document efforts to the desktop,” says Chugh. “Tasks such as commenting on a document, making edits, and drafting still largely happen from nine to five. This behavior frustrates document turnaround times and so far hasn’t been resolved as well as it should have.”
“We are still not used to a mobile first environment,” says Pareekh Jain, mobile analyst at HfS Research. “Mobile is still regarded as an information consumption and communication medium rather than a creation medium. Partly out of habit, we are used to editing documents, spread sheets, presentations in desktop mode rather than on mobile.”
But Chugh and company argue that the latest technologies are surprisingly capable and powerful enough to fully replace what many of us are accustomed to doing exclusively on desktops and laptops. For example, Just Press Record lets users record interview and auto transcribe them — something that was never possible on desktop. Media-rich bulletin boards and group organizational tools such as Evernote and Trello dramatically improve not just mobile collaboration, but collaboration in general. On top of that, more powerful email apps from Outlook, Gmail and others have popularized features such as scheduled emails and shipping features that hasten email management.
People-first creation: How mobility should work.
Even with our collective reticence toward creating full-blown documents and workflows from our phones, the many benefits of enterprise mobility are readily apparent.
To name a few — better worker productivity, availability, and response times. No more having to wait until someone returns to the office. Faster access to information to make quicker decisions. Better rapport with customers and stakeholders. Lower cost. Speedier supply to meet quicker demand. All combined, many companies have even observed higher employee morale with the proliferation of generous Bring your own device policies.
For both workers and employers, that’s encouraging news. “Mobile today is enabling what laptops did 20 years ago in terms of better engagement with customers and a faster enterprise,” says Chugh. “But to achieve this, executives must think about worker mobility with a combined focus on mobile, cloud, and ubiquitous connectivity.”
For example, customer and employee onboarding from the field can now be a paperless process, Chugh says. With the help of tablet or phone camera, crucial information can be uploaded to the cloud to accomplish in two minutes what would have taken two days before.
“You and I and the customer can really be anywhere now,” says Jacob Sharony, principal at Mobius Consulting and early pioneer of barcode inventory technology for UPS and Fedex. “We just need access to wireless, which on the whole is as ubiquitous as electricity and water — a utility instead of an amenity.”
But again, until we start creating important documents from the field, we’re leaving significant amounts of money and opportunity on the table. “Mobility should be embraced as a means to transform the way we work today, as opposed to being viewed as secondary technology that is layered on top of legacy processes and document workflows that we have been using for decades,” Holtby explains.
This can be done by taking an end-to-end view of how mobility might help to realize new operational and productivity efficiencies. “Up until recently, strategic enterprise mobility decisions mainly related to which type of device ownership and management model should be employed,” Holtby adds. “Now, however, enterprise mobility is a practice and set of supporting technologies that continues to advance the organization in a far more strategic fashion.”
Citing his own successes in helping organizations create more with mobile as opposed to solely consuming or communicating with it, Holtby seemingly favors user experience over any perceived or actual security risks, a controversial point we’ll revisit later. “The people-centric approach over a device-centric approach is vital,” he says, “Because the device will change, but the need for employees to work productively, aided by new technologies will be constant.”
This brings us to some of the latest tools of the trade, most notably Adobe Document Cloud, Adobe Sign, and Adobe Acrobat Mobile — the most widely downloaded and OS agnostic PDF app in the world.
“Our primary goal with these three tools is to make it easier for enterprises to empower their employees in terms of access, manipulation, reuse, and document workflows on any device or platform,” Chugh says. “Many of these workflow enhancements and capabilities have long been available in desktop versions of Acrobat and Sign. But these recently updated apps are a testament to our commitment in making mobile creation a first-class citizen for the modern enterprise.”
This is also why all three tools have enterprise mobility management (EMM) capabilities and app-friendly standards baked in. And depending on your company’s needs (or your reluctance to commit to something new), you can do important things like “fill and sign” and “scan” documents for free without a subscription to Document Cloud.
Scalability with security: How organizations can prepare.
Watch Kerri Strug’s leap to victory.
Whatever tools you feel are appropriate and suitable for your organization, there are some key challenges you’ll need to address before realizing a more creative mobile workforce.
First — security. According to a recent IDG survey, more than half of 1600 senior IT security officers reported security incidents and/or data breaches stemming from personal use of mobile devices.
“This is undoubtedly the main concern of enterprise IT departments in regards to mobility,” says Bryan Bassett, mobile research analyst at IDC. Often these two segments of mobility come to a head. “Install too strict a security policy, and productivity suffers,” he explains. “Too lax a security policy, and organizations open themselves up to an increased risk of a breach.”
Generally speaking, a positive employee experience is going to promote productivity, so the key is finding a balance between the wants of employees and their experience and the needs of the company. Unlike Holtby, however, Bassett believes that “security trumps user experience.” Nevertheless, he says enterprise IT leaders can draw their own conclusions while looking for ways to balance the needs of their workers with that of organizational security.
“Either way, it’s safe to say that all organizations can improve existing policies and work-flows to promote a better user experience for employees, especially if increased productivity is driving their mobile investments,” he says.
To that point, Chugh says executives must view creative mobility as an opportunity rather than annoyance or hindrance. “Current mobility management solutions do the basics in terms of getting apps to their employees, but going beyond this (in other words generating more documents from the field) is seen more as a restriction than productivity enabler. Thus, enterprise mobility should focus more on mobile productivity,” as opposed to just keeping the lights on.
Another important issue is scale. Simply put, many enterprises today lack the proper network infrastructure to handle the increased traffic and bottlenecks caused by the addition of substantially more devices, apps, and access points.
Not only that, but Bassett is quick to point out the pesky and complicated existence of multiple document instances. “Changing how we send, receive, and store electronic communications has been a hard habit to kick,” he says. “Mobility and near ubiquitous connectivity has made it very easy to transmit information on a whim.”
It’s so easy now, that we’re often left with multiple digital artifacts of the same or slightly revised documents in our email, on our desktop, or in the corporate cloud. “Granted, cloud storage, and enterprise mobility management software has helped to alleviate this issue to a degree,” Bassett says, “but it remains a persistent problem.”
On top of that, increasing mobile collaboration is a top goal. Whereas before the first wave of enterprise mobility empowered individuals to consume and communicate more, Sharony expects more creative teamwork now. “We need to focus more on collaborative tools, in addition to individual access and creation. Instead of just consuming and communicating 24/7, we should be producing collaborative assets.”
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
OK I've compared and I can't see anything major. The only thing you do have is a few more mount points which I've not had in mine (listed). Where are they from? I think mounting the sdcard (modem firmware) is a bad idea so I'm going to skip that.
/sbl1 emmc /dev/block/bootdevice/by-name/sbl1
#/sbl2 emmc /dev/block/bootdevice/by-name/sbl2
#/sbl3 emmc /dev/block/bootdevice/by-name/sbl3
/tz emmc /dev/block/bootdevice/by-name/tz
/rpm emmc /dev/block/bootdevice/by-name/rpm
/aboot emmc /dev/block/bootdevice/by-name/aboot
#/sbl2b emmc /dev/block/bootdevice/by-name/sbl2b
#/sbl3b emmc /dev/block/bootdevice/by-name/sbl3b
#/tzb emmc /dev/block/bootdevice/by-name/tzb
#/rpmb emmc /dev/block/bootdevice/by-name/rpmb
#/abootb emmc /dev/block/bootdevice/by-name/abootb
#/usb-otg vfat /dev/block/sda1 /dev/block/sda flags=removable;storage;display=USB-OTG
/external_sd vfat /dev/block/mmcblk0p1
/usb-otg auto /dev/block/sda1
So, I have twrp installed, and a fast bootloop almost instantly on start. I haven't been able to solve it thus far. I can get into twrp which is something though.
So far dd is ending up with a corrupt partition and twrp insists on a zip for system flash. Trying to figure out how to convert it.
Actually you said you tried 10 unsuccessfully, so how did you then flash the v8 image?
adb reboot edl
I recommend you take down the twrp and remove the line which mounts the firmware partition as sdcard in case this is what wiped your IMEI. I build my own without this line and IMEI survived.What i'm trying to do right now is download my device’s device specific configuration and kernel to the root of my custom lineage os's source code.
I'm following this guide: https [COLON//] www [DOT] lineageosrom [DOT] com/2017/01/how-to-build-lineageos-rom-for-any [DOT] html
my phone is ulefone armor 5s
Please help me out./* * This ROM can and will kill your cat, deprive you of your social life * and cause problems with your device if you aren't careful. * This firmware contains chemicals known to the State of California * to cause cancer and birth defects or other reproductive harm. * You have been warned. */
- EVEN MORE IMPORTANT:
The ROM will only work with an unlocked bootloader which removes signature enforcement on both SP Flash Tool and whenever the tablet boots up. Links to the hacked preloader, LK and TWRP recovery image can be found here. Flashing these can be a risky proposition so it is advised to do a full EMMC backup of the device prior to modding your Epic. A backup procedure can be found on this blog post.
- IMPORTANT:
You should only flash Magisk via TWRP as updating or installing it via the manager will cause a boot loop. In case you end up with such an issue just flash the ROM again and you should be fine.
Also, this does not come with a kids' mode UI and will cut you off from LeapFrog online services such as the App Centre and the Academy programme. You may however download the LeapFrog Academy app from the Play Store (assuming you installed an OpenGapps package, duh...) Whether it is possible to bring back the kids and parents launcher along with some services through a flashable zip is yet to be determined, but that wouldn't be a priority issue for now.
Installation instructions
- Unlock the bootloader and install TWRP
- Boot to TWRP by pressing volume up + power
- Wipe system, data and cache
- Install the LineageOS zip you just downloaded
- ...
- PROFIT!
Rules
- Please search the thread before asking questions
- Please try to stay on topic, I know it's not always possible
- Please report bugs here
- Report only one issue per bug report
- When reporting bugs please post a logcat and/or dmesg containing pertinent information regarding the issue...
Prerequisites for Installation
- Unlocked Bootloader
- TWRP Installed
Downloads
*** Please do NOT create any mirrors ***
Lineage-14.1 for the LeapFrog Epic
Source Code
- Device Tree: https://github.com/mt8127-tadpole/an..._quanta_narnia
- Kernel Source: https://github.com/mac2612/android_kernel_alcatel_ttab
- Vendor Tree: https://github.com/mt8127-tadpole/an..._quanta_narnia
Thanks
- LineageOS
- Mac2612 for the kernel-side work
- Stricted for the ttab kernel sources
- Diplomatic for his knowledge of MediaTek internals
- ggow because I kanged most of the text on this OP from him :P
XDA:DevDB Information
LineageOS, ROM for the LeapFrog Epic
Contributors
mac2612
blakegriplingph
Kai2000
R0rtiz
Stricted
ROM OS Version: 7.1.2 Nougat
Version Information
Status: Beta
Stable Release Date: TBA?
Created 2020-08-26
Last Updated 2020-09-08Announced in February of 2017 at MWC, the G5 Plus is the premium version of the G5. This phone features a 5.2 inch screen with 1080 x 1920 pixels. The Snapdragon 625 chipset has an octa-core 2.0 GHz Cortex-A53 and an Adreno 506 GPU. The back facing camera has a 12MP sensor while the selfie camera is 5MP. The 3000 mAh battery is equipped with fast charging technology.No. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- LKT sets random nonsensical build.props that likely don't even exist.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- CAF CPU Boost Tweaks
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16I decided to share my creation with you
Your MiX app looks modern and pleasant to use. Hope you like it, please report missing symbols, color or something similar.
This theme was created with the help of HootanParsa and marciozomb13 themepack.. Thanks to both
Screenshots
black V1
white V1
Download
just download frome Attach Files and extract zip select *.mit file and import .
or download from my GdriveThe Honor Magic 2 is a 6.39" phone with a 1080x2340p resolution AMOLED display. The Kirin 980 chipset is paired with 6/8GB of RAM and 128/256GB of storage. The main camera is 16+16+24MP and the selfie camera is 16+2+2MP. The battery has a 3500mAh capacity.Register or Login with Google
Is there any fix for not opening taken pics in the camera app itself (right hand side from camera button)? When I try to open a pic it comes up just a millisecond and closes again. I have always go to gallery app to view or cancel a pic. Latest version from post above installed with xml and dotfix module.
thanks for help!
Use google photos, it should work.
@chwb205 Unless you're using those config files with that version, you have to expect some issues. Different GCam versions have different settings, so a config for GCam 6.x isn't compatible with GCam 7.x. There are even differences between the same base (eg: Arnova's 7.3 vs Nikita's 7.3).
Use the version shadowstep linked on the post above yours. No need to use a config (and you need to remove the dot fix module). Or you can use the latest one with the provided config + module.
Slow motion is always a problem with the modded GCam app, so I don't know if it will work well on this phone.The Nexus 7 is a tablet computer designed and developed by Google in conjunction with Asus. It is the first tablet in the Google Nexus series. The Nexus 7 features a 7-inch (180 mm) display, an Nvidia Tegra 3 quad-core chip, 1 GB of RAM, and 8, 16 or 32 GB of internal storage. Originally released as a WiFi-only tablet, a 3G Cellular version has been released.Artificial intelligence (AI) is speedily turning into one in all the foremost in style topics in each business and science and a lot of leading technical school corporations are showing interest in AI investment. Google’s $400 million acquisition of DeepMind may be a prime example of mainstream AI application. A study conducted by the Mckinsey international Institute discovered that tech giants like Baidu and Google spent between $20 billion to $30 billion on AI last year, with 90th of this spent on R&D and preparation, and 100% on AI acquisitions. The rate at that AI is increasing is gaining momentum. A similar study determined that AI growth caused thrice the maximum amount investment in 2016 – nearly $40 billion – because it did solely 3 years past. Business sectors like health care, education, and finance are investing in AI, but mobile is one of the most promising areas for AI.I have installed a custom rom called Resurrection Remix running Android 7.1.2. I found a feature, under Configurations, where I can change the system animations for the entire operating system, and also prevent apps from overriding transitions.
All the animations are set to 'Default' at this time, but I desire to change the system animations to look like the Samsung Galaxy S7 Edge, or higher S8, S9 or S10. For example, under 'Activity open animation', it can be set to:
- Default
- Fade
- Slide in Right
- Slide in Left
- Slide in Right (No fade)
- Slide in Left (No fade)
- Slide in Bottom
- Slide in Top
- Translucent
- Grow in (Top)
- Grow in (Center)
- Grow in (Bottom)
- Grow in (Left)
- Grow in (Right)
Can anyone indicate, the specific system animations of the Samsung Galaxy S7 or S8 or S9, please?
System Animations
Activity open animation ?
Activity close animation ?
Task open animation ?
Task open behind animation ?
Task close animation ?
Move to front animation ?
Move to back animation ?
Wallpaper open animation ?
Wallpaper close animation ?
Wallpaper intra open animation ?
Wallpaper intra close animation ?
Animation Duration ?
ListView
ListView animation ?
ListView interpolator ?
Thank you very much in advance.Quote:
Originally Posted by bryanGil0410
What could be the top 5 best Ad Networks out there? I'm thinking of adding more because others say they do have more than 3 ad networks.
This will always change depending on the advertiser's campaigns and time of the year. Also, depending on the app's geo, target audience, amount of impressions and DAU, each ad network will provide a different result in different times of the year.
Also, hen you work directly with networks, you spend lots of time adjusting the waterfall manually.
I recommend you to try mediation. With this, you can implement several ad networks at the same time and make them compete, so you will always get the highest paying bid.
Check out Appodeal. And FYI, if you already have a good setup with a particular ad network, you can keep it and still integrate other networks with Appodeal's SDK.XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe website from which you got to this page is protected by Cloudflare. Email addresses on that page have been hidden in order to keep them from being accessed by malicious bots. You must enable Javascript in your browser in order to decode the e-mail address.
If you have a website and are interested in protecting it in a similar way, you can sign up for Cloudflare.The Samsung Galaxy Note 8 is the big comeback after the disastrous issues with the Note 7. The is 6.3" with a 2,960 x 1440 pixel resolution at an aspect ratio of 18.5:9. The Galaxy Note 8 will have the Exynos 8895 SoC in most markets, but the Snapdragon 835 will be used in the United States. There is 6GB of RAM and 64GB of storage. The dual lens rear camera has two 12MP sensors and the selfie camera is 8MP. The battery has a 3,300mAh capacity with wireless an fast charging technology.But last week I bought Xiaomi Mi 10 Youth Edition 5G ( mi 10 lite zoom) china rom but I was surprised to see that this Xiaomi phone doesn't support my CDMA sim that works in all my previous Xiaomi china rom phones
I tried to use DFS CDMA tool but I couldn't connect
And my phone is still locked
What should I do ?!
Please help me 😭After a successful tool for LG G2 and LG G3 owners (AutoRec), but after a long pause, here is something new and I hope useful
Googlefier is a simple tool, designed to help you install GMS on your Huawei/Honor device
Video & Article - please take time to watch the video, answers some open questions
Please read the Q/A on POST #2 < click
Downgrade help is on POST #3 < click
Firmware Downloads (c432 global only) are on POST #4 < click
Troubleshooting is on POST #5 < click
Before asking any questions please read posts 2-5, check if your question has already been answered, in order to keep the thread clean.
Also - try to ask questions in some sense they are understandable
A simple: "IT doesn't work - will be ignored and possibly deleted, because it doesn't add to thread quality", instead you should describe the steps properly, and you will get an answer.
I also encourage all of the members to keep the "alternative downgrade methods" to some other threads, which I will for sure link later. Also please don't spam with firmware links, rather PM me and I will ad it to POST #4, let's try to keep the thread clean. As time goes by, I'll try to add more firmware and cover more of the Q/A and Troubleshooting POST/Section so everyone can help himself / herself by simple power of reading
As always, any donation is highly appreciated and welcome, since a lot of time has been invested into this tool and in research
click ----> DOWNLOAD - click here to download
click ----> Donate - for support and future projects
P.S. Please DON'T reupload without permission
credits:
microG - microg
EloYGomeZTv - microG fork + loginRegister or Login with Google
On the main screen of the module, in the terminal, select option 1 ( edit device fingerprint) should look like this. If not change it within the submenus.
I got the attached..
Ok looks right. If everything else is good, I think Google phone needs to be a system app, set as default phone app, and maybe clear Google play services data, it should pop up in google phone settings where you can enable it.Now on functionality of our App:
Recommendation
A combination with your favourite sync solution (e.g. Syncthing, Nextcloud...) keeping an encrypted copy of your apps and their data on your server or "stable" device could bring a lot of benefits and save you a lot of work while changing ROMs or just cleaning your mobile device.
Community
There's a new room on Matrix and a group on Telegram to discuss the development of the App and test new versions:
OAndBackupX:Matrix.ORG
Telegram
Our Code Of Conduct applies to the communication in the community same as for all contributers.
Encryption
If enabled the data backup will be encrypted with AES 256 based on a password you can set in the settings, which you'll have to use when you want to restore the data. This way you can store your backups more securely, worrying less about their readability.
if you have some java and android knowledge and like to contribute to the project see the following Development Document to see the goals and where a help is needed. Each contribution and communication in the project community should follow our Code Of Conduct
Download
Source Code
Screenshots
Developer @Machiav3lli (Antonios Hazim)
(I am merely creating this thread and in no way the developer or contributor to the app itself, all credit goes to him and others who have contributed )BraveDNS is an anti-internet censorship tool with DNS-based adblocking and a firewall built-in.
The app itself is free to use. We would charge only if users opt to use our DNS resolvers (private beta in 2 to 3 weeks from now) instead of Adguard's (which is the default and free to use). Why'd users want to do that? The BraveDNS resolver would provide for custom blacklists, whitelists, ability to store DNS logs for later analysis, view those logs consolidated from multiple devices in a single interface and so on: Pretty much a pi-hole in the cloud.
Why'd we build this?
As concerned Android users: It absolutely irks us that people who do care enough about privacy still couldn't use privacy-enhancing apps without requiring a degree in computer science. We saw this pattern unfold multiple times and a lot of tools over the years have done a tremendous job of making niche security tools accessible to naive users. We wanted to further that conversation on Android with a vision for what we think such a tool should look like:
1. Anti-censorship: Enable open internet. DNS over HTTPS (and the imminent ESNI standard) is going to effectively break censorship as implemented in a lot of countries without requiring to route the traffic through VPNs. VPNs (and distributed tech like IPFS and mesh networks like Lantern) are still required in countries that employ Deep Packet Inspection. That's something we'd like to tackle in the near future.
2. Anti-surveillance: Expose apps, their activity logs, network logs, and provide some actionable insights to the users on what they could do next. Exodus Privacy does a good job at statically analyzing an app and laying bare the trackers and permissions in-use, whilst the evergreen NetGuard does ever-so-well in revealing an app's connectivity history. We believe, there's a lot more that can be done than simply firewall an app: For instance, you could disable it, uninstall it, remove its permissions, remove the so-called special permissions (like read notification permission, read SMS permission, read app-usage statistics permission etc). Basically, empower the user with whatever control is available without-root in a neat little interface (think CleanMaster vs using the stock Settings app but being actually effective and not lie).
The current version of BraveDNS is a start in the direction laid out above partly because we want such an app ourselves and partly because we feel people deserve more such tools, and we hope to build it with this community's input, because god knows we have been wrong plenty when it comes to "what people really want".
As privacy enthusiasts: We were frustrated that if we wanted to use NetGuard we couldn't use another VPN app, or if we wanted to use a DNS changer like Blokada then we couldn't use NetGuard (though, NetGuard + Private DNS feature alleviates the problem on Android 9+). We wanted something that wasn't as restrictive because we knew it could be built and so we did.
Key points:
1. Easy configuration.
2. Root isn't required.
3. Free and open source (forked from Intra).
4. No built-in trackers or analytics.
5. In continuous development.
Current features:
1. DNS over HTTPS (circumvent censorship and prevent surveillance of DNS logs by ISPs and everyone else).
2. View DNS logs.
2. Ad-block through BraveDNS' free resolver or add your own.
3. Firewall by app categories.
4. Firewall individual apps.
5. Firewall when apps are in the background (not-in-active-use).
6. Firewall when device is locked.
Planned (in order):
0. Code cleanup and bug fixes (it is an early release, so please be kind; the repository is open for pull requests).
1. Connections tracker: Track TCP/UDP connections made by apps not firewalled.
2. Ability to temporary disable Firewall and DNS.
3. Battery Optimization reaper work-around.
4. Firewall based on metered (LTE) or unmetered connection (Wifi).
5. Support for both DNS + Firewall (dual mode) on Android 8+. Currently, the dual mode is supported only on Android 10+.
6. Android 6+ support.
We can't emphasize this enough: Let us know what you'd like to see us build and more importantly what'd make this tool use-able for other Android users who care enough but aren't as tech-savvy.
If you'd like to contribute, please feel free to send pull requests our way.
Thanks.
---
Source: github/celzero/brave-android-app
Website: bravedns.com
Blog: brave.imprint.to
Twitter: twitter.com/bravedns
FAQ: bravedns.com/faq
License: Apache 2.0
Download: via bravedns (In PlayStore in a week from now; f-droid, too, once we figure that out).
---As you can see it is tabbed. Swiping from the left will expand the contacts. It is absolutely simple to flip back and forth between conversations. However while HelloSMS still works, their MMS cloud based solution has been turned off and no longer working. Texting works but MMS does not.
After all of these years, I've been dealing with HelloSMS with no MMS simply because everything else pales in comparison with this tabbed design.
How much would a tabbed SMS app clone be to make or would anyone be willing to jump in where HelloSMS left off?Android-Generic Project - Android for PCs & GSI devices
What is Android-Generic Project?:
Android-Generic is a collection of scripts, manifests & patches that allow for rapid prototyping of Android projects based off AOSP to produce generic images for Android GSI or Linux PC hardware.
For a more in-depth description of the goals and progressions leading up to this project, please read
this blog post
Vision:
To fill you all in on the grand scheme of things with Android-Generic, the plan come in stages.
* Stage 1 is laying the groundwork for all ROMs to build both PC and GSI builds by supplying them with a standard set of minimal patches. Thanks to Android-x86 & PHH-Treble, thats done. now we collect them and make them easy to apply for everyome. DONE
* Stage 2 is collecting variations of the conflicts those standard patches could potentially have and simplifying the process as we go. This is where all the Android ROMs come in STARTED
* Stage 3 is to use the variations of conflict resolutions from each ROM folder to further automate the process and have vendor patches be automatically figured out by trying each resolution until one sticks. STARTED
* Stage 4 is to continue to automate elements of the process until things are almost too easy STARTED
-----------
Development Chats:
Telegram:
GSI/Treble
PC/x86/x86_64
Resources:
Images:
Android-Generic Logos
Basic Project Info
This is a development project for ROM developers that want to add PC or GSI support to their builds.
Prerequisites:
You will need to have synced a ROM and know how to build Android prior to adding this to your build envirnment.
ROMs that have PC builds (so far):
- BlissROM
- AOSP
- Tesla
- WIP - Tipsy
- WIP - Lineage OS
- WIP - Validus
- CarbonROM
- WIP - PixelExperience
ROMs that have GSI builds (so far):
- BlissROM
- AOSP
Please make sure you're well versed in building AOSP: AOSP building instructions before proceeding.
What you need to get started
Follow the link below, and checkout the full project documentation. I'll try to update the readme as often as possible to allow you all to keep up with changes as things are going to ramp up exponentially.
android-generic
Credits
We'd like to say thanks to all these great individuals first:
@phhusson @cwhuang @maurossi @goffioul @me176c-dev @bosconovic @farmerbb @aclegg2011 @eternityson @utzcoz and many others
And these great teams second:
@Google @LineageOS @GZR @OmniROM @SlimROM @ParanoidAndroid and many others, for you still lead the way for Open Innovation in the Android community.
XDA:DevDB Information
Android-Generic Project, Tool/Utility for the Android General
Contributors
electrikjesus, jackeagle
Version Information
Status: Alpha
Created 2020-07-11
Last Updated 2020-08-16XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThis is a unified discussion forum for the Samsung Galaxy Tab A series. The Samsung Galaxy Tab A series is a budget-friendly line of tablets, offering various screen sizes. The latest Qualcomm Snapdragon variants offer a 1.3GHz quad-core CPU, an Adreno 306 GPU and 1.5GB of RAM. Internal storage varies depending on the model selected, but all are expandable with the use of a microSD card. Here members can browse the various threads available for the Samsung Galaxy Tab A series, or obtain general support for their device.Instructions
Prerequisites:
Root permission is required.
You also need these extra binaries installed in a directory of $PATH (such as /system/xbin):
-aapt
-jq
You can download these binaries from the Termux app ( https://play.google.com/store/apps/d...?id=com.termux
)
You will also need busybox installed. Search for how to install it.
Method 1 (automatic) (experimental):
Run InstallReq.sh in Termux *as a normal user* (not as root)
i.e. run this command: bash /path/to/script/InstallReq.sh
It will check if aapt, jq, curl or sqlite3 are missing and automatically download them, then copy them to /system/xbin.
Method 2 (manual):
Run these commands in Termux:
pkg install aapt
pkg install jq
Copy them from /data/data/com.termux/files/usr/bin to a directory of $PATH
Then give them execution permission, e.g. "chmod +x /system/xbin/aapt"
To see what directories are in $PATH, run this command: "echo $PATH"
Note: if you've placed the binaries in /sbin, or you have installed Magisk,
the binaries will be deleted every reboot. You'll have to copy them again.
Note: aapt and jq must be downloaded from Termux and the Termux app must remain installed,
since the dependencies are stored in Termux's data folder.
------------------------------------------------------------
Usage:
-All scripts and txt files must be in the same directory as DisableTrackers.sh
You need a terminal emulator to run these scripts.
Personally I use "Terminal Emulator for Android" ( https://play.google.com/store/apps/d...al.androidterm
)
This terminal emulator lets you add launcher shortcuts. Quite convenient in my opinion.
Termux may also work, but I haven't tested it.
For first time usage, run UpdateExodus.sh first.
i.e. run this command: su -c sh /path/to/script/UpdateExodus.sh
If the script runs successfully, a MergedTrackers.txt will be created.
Then you can run DisableTrackers.sh AS SU to start disabling trackers. (root permission is required)
i.e. run this command: su -c sh /path/to/script/DisableTrackers.sh
By default, only third party apps are checked.
If you want to check for trackers in system apps as well, add 'sys' as the parameter.
i.e. run this command: su -c sh /path/to/script/DisableTrackers.sh sys
Not really recommended since it could theoretically mess up Google Play Services, though I can't confirm since I don't have it installed on my phone.
Note: if you've used version 1.4 or below and don't want the script to process all apps again, run CreateAppDB.sh.
It will create a ProcessedApps.db with records of all currently installed apps.
------------------------------------------------------------
Explanations:
UpdateExodus.sh will download a tracker list from Exodus Privacy, and merge it with CustomTrackers.txt (if it exists)
You can add your own trackers to CustomTrackers.txt. You may also write comments in this format: #(comment here)
DisableTracking.sh will dump a list of components (service/broadcast receiver/activity/content provider) of all installed apps,
compare it against the list of trackers in MergedTrackers.txt, and disable those components if they match.
It will save a list of already processed apps to a database file in the script's directory,
so they will not be processed twice when you run the script again (like maybe you've installed a new app and you want to disable its trackers by running the script).
Apps with trackers will be logged to AppsWithTrackers.txt.
exodustrackers.json is the raw list downloaded from Exodus Privacy.
MergedTrackers.txt contains the merged results of exodustrackers_extracted.txt and CustomTrackers.txt.
ProcessedApps.db contains a list of already processed apps. They will be skipped in the next run of DisableTrackers.sh.
whitelist.txt is a list of apps that will be skipped.Requirements:
- Android 10 Open Beta 1 (prior to OB1, there’s an issue with the caller not being able to hear the Assistant voice properly)
- Root is necessary to make Google Phone a system app and to make the required mods to the XML file
- Either the Pix3lify Magisk module or the Google Dialer Framework module (much lighter) to install the Google Phone app from the Play Store (might have to clear Play Store data/cache), or a patched Google Phone APK
- App Systemizer and Busybox Magisk modules and Terminal Emulator
Preferences Manager Attached Google Call Screening Magisk module (all credit to thehappydinoa, I just updated it for the Call Screening flags on the latest Google Phone app)
Instructions:
- install the beta
- fastboot flash the patch root boot image from here (fastboot flash boot magisk_patched.img)
- install TWRP and re-install Magisk both from Magisk, reboot
- install Busybox and App Systemizer in Magisk
- install Google Phone app using one of the above methods, enable all permissions and set as default Phone app, disable OOS Phone app, Systemize using Terminal Emulator (type su, then systemize, then choose the Phone app and systemize it to /system/priv-app), reboot
in Preferences Manager, enable system apps, scroll down to Phone, go to dialer_phenotype_flags.xml, search for ‘screen’ and set all the call_screen and callscreen flags to true, and search for ‘speak’ and set all the speakeasy and speak_easy flags to true. Install Call Screening Magisk Module, reboot
It seems Google Visual Voicemail seems to work only on certain phones with certain carriers, but not on the GM1917 with T-Mobile. I’ve tried putting the GM1915 software on my GM1917 but still can’t get it to work. It seems to work with GM1915s that have been converted to international firmware and rooted when Google Phone is installed as a system app as above.Register or Login with Google
I just saw these and I'm wondering if anyone has tried them yet. I like the $30 price tag. I currently used a pair of Bluetooth headphones, but there is quite a bit of last when watching videos; it's annoying to see a person say something and then finally hear it. Reminds me to much of the old English dubbed foreign movies. I know we still have the headphone jack, but I'm intrigued to try the USB C as well.You know the story by now after 2 years, lets get started.
GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
Launcher supports work profile apps and dual apps from various oems
Launcher supports Android 10+ gesture system but restricted.
Groups allow users to create organized folders of apps available in the Groups Sheet
Personalized search in the Search Sheet
A revised single screen interface introducing a new layered material design.
Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
Recent Apps don't have a long click listener (no sheets).
The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
Users can block apps from showing badges and priority notifications.
Launcher sheets can be accessed from the launcher menu.
The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
Widgets can be resized by long clicking on them and a resize module will appear (WIP).
The launcher settings will theme itself on Android 10 light or dark mode.
Launcher settings features smart suggestions that appear on certain variables available
Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
General Note:
This is a pre beta of which means parts of the launcher are not even functional yet. I did a pre beta to find errors i couldn't find myself and to get feedback on the progress we currently are at. If you see a page that is blank or something isn't functional, chances are it wasn't ready for the public yet. Please be patient with things.
Common Questions:
Why does GCA Launchers Adaptive icons behave so differently compared to the ones found in stock launchers?
-That is because the icons use a different mechanic and were made from scratch so everyone could enjoy adaptive icons and it not be exclusive to 7.1+ users. My icons can be modified from the icon to the shape override.
Can we get a launcher import option?
-No, not currently. Almost all launchers that exist use the base of Googles Launcher3 which adding an import option for them is easy. I would have to take the database, tear it apart, create a converter and place the data we need were it belongs. We are not there yet.
The System UI seems to behave differently from other apps.
-GCA Launcher has a theme engine similar to pixel launcher and trys to make the choice of a light or dark navbar or statusbar. Using Android10s dark mode may confuse things but eventually il have it all sorted out.
The launcher interface isn't what I expected. Shouldn't it behave like pixel launcher?
-No, it behaves like it should be. How it was designed.
Does it support quickswitch?
-It never will unless Google changes the api for the recents provider. I blame the lawnchair team of this common question as many users have assumed this is a premium feature now and should be supported by all launchers now which isn't the case.
Does this launcher support dark mode from android10?
-yes but we have some work todo yet
Why do things look weird in the launcher settings? Preference category is hard to read and matches the toolbar color.
-Try changing the color scheme in the style settings. This is the GCA theme engine at work.
Ratings:
If you post a rating for GCA Launcher coming from V1, more than likely i will dis regard it. V1 is being deprecated soon and all bugs and errors you will find in V1 on the playstore are being disregarded. V2 is a rewrite with new features and new bugs.
I updated the build earlier to fix something for Android 8 users and ended up screwing something up for Android 9 users so il be keeping tabs on everything as much as possible but I will not be able to do anything if no one says anything. Please provide feedback as much as possible. Thank you in advanced.
Those of you keeping me informed of crashes, thank you, thank you, thank you
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
Shelf apps can be changed by long clicking on a Shelf favorite and their will be a Favorite option to select a different package. This option isn't available in the App Drawer apps so it might be easy to miss.
When changing the icon sizes, make sure your changing the icon size and bot just the text size. Both options are in one dialog.
Id your having a hard time switching out your default launcher, you can use my No'Me app i have listed above. It helps alot.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceXDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of Servicehello to all Users - I have Meizu C9 that have all language in the system lang list but in this list not have Hebrew . Now if i install morelocal to the system I have Hebrew and all Good but when I restart the device the Hebrew is Goon and I need to enter to the more local again and choose again the Hebrew from the list now I need help to change the system file that containing the language list in Samsung model I know how to do it But in this google Operating system I don't know ware is the file that are contain this list if any body know how to change and add more country to this list I be grateful I add a 3 picture to show what I mean thank you to all have a nice day
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceHere you can find how to enable additional features to Floating Feature, Build.prop, Csc Feature!
I am not responsible if this bricks your phone or causes thermonuclear war and ends the world as we know it. You have been warned.
Add these lines in floating_feature, which is located in system/vendor/etc.
¬ Enable Multiwindow tray
<SEC_FLOATING_FEATURE_COMMON_CONFIG_MULTIWINDOW_TRAY>TRUE</SEC_FLOATING_FEATURE_COMMON_CONFIG_MULTIWINDOW_TRAY>
¬ Enable Flagship Launcher Animations
<SEC_FLOATING_FEATURE_LAUNCHER_CONFIG_ANIMATION_TYPE>
¬ Enable High Performance Mode
<SEC_FLOATING_FEATURE_COMMON_SUPPORT_HIGH_PERFORMANCE_MODE>TRUE</SEC_FLOATING_FEATURE_COMMON_SUPPORT_HIGH_PERFORMANCE_MODE>
<SEC_FLOATING_FEATURE_COMMON_CONFIG_DYN_RESOLUTION_CONTROL>WQHD,FHD,HD</SEC_FLOATING_FEATURE_COMMON_CONFIG_DYN_RESOLUTION_CONTROL>
<SEC_FLOATING_FEATURE_SYSTEM_SUPPORT_ENHANCED_CPU_RESPONSIVENESS>TRUE</SEC_FLOATING_FEATURE_SYSTEM_SUPPORT_ENHANCED_CPU_RESPONSIVENESS>
¬ Enable Flagship Edge Ligthining+ Animations
<SEC_FLOATING_FEATURE_COMMON_CONFIG_EDGE>
<SEC_FLOATING_FEATURE_COMMON_CONFIG_EDGE>people,task,circle,panel,-edgefeeds,edgelighting_v2,debug,cornerR:6.2,search,phonecolor,dot_bottom</SEC_FLOATING_FEATURE_COMMON_CONFIG_EDGE>
¬ Enable Spotify as added alarm
<SEC_FLOATING_FEATURE_CLOCK_CONFIG_ALARM_SOUND>spotify</SEC_FLOATING_FEATURE_CLOCK_CONFIG_ALARM_SOUND>
¬ Enable Side Key Function
<SEC_FLOATING_FEATURE_SETTINGS_SUPPORT_FUNCTION_KEY_MENU>TRUE</SEC_FLOATING_FEATURE_SETTINGS_SUPPORT_FUNCTION_KEY_MENU>
¬ Change Device Name to Your Choosed one
<SEC_FLOATING_FEATURE_SETTINGS_CONFIG_BRAND_NAME>
<SEC_FLOATING_FEATURE_SETTINGS_CONFIG_BRAND_NAME>Your Choosed Name</SEC_FLOATING_FEATURE_SETTINGS_CONFIG_BRAND_NAME>
¬ Enable AOD Clock Transition Animation
<SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM>
<SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM>aodversion=7,clearcoveroff,clocktransition,activeclock=4</SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM>
¬ Enable Dolby Atmos without Headsets
<SEC_FLOATING_FEATURE_AUDIO_SUPPORT_DUAL_SPEAKER>TRUE</SEC_FLOATING_FEATURE_AUDIO_SUPPORT_DUAL_SPEAKER>
<SEC_FLOATING_FEATURE_AUDIO_CONFIG_SOUNDALIVE_VERSION>
eq_knob,eq_custom,uhq_switch,uhq_level,adapt,spk_stereo,dvfs_860000,tube,concert
¬ Enable Music Information in AOD
<SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM>
<SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM>aodversion=7,clearcoveroff,musicoff</SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_AOD_ITEM>
¬ Enable Dolby Atmos in Games
<SEC_FLOATING_FEATURE_AUDIO_SUPPORT_DEFAULT_ON_DOLBY_IN_GAME>TRUE</SEC_FLOATING_FEATURE_AUDIO_SUPPORT_DEFAULT_ON_DOLBY_IN_GAME>
¬ Enable Dolby Atmos Game Profiles
<SEC_FLOATING_FEATURE_AUDIO_SUPPORT_DOLBY_GAME_PROFILE>TRUE</SEC_FLOATING_FEATURE_AUDIO_SUPPORT_DOLBY_GAME_PROFILE>
¬ Enable Advanced Screen Capture
<SEC_FLOATING_FEATURE_FRAMEWORK_SUPPORT_SCREEN_CAPTURE_ADVANCED_EDIT_VI>TRUE</SEC_FLOATING_FEATURE_FRAMEWORK_SUPPORT_SCREEN_CAPTURE_ADVANCED_EDIT_VI>
<SEC_FLOATING_FEATURE_FRAMEWORK_SUPPORT_SCREEN_RECORDER>TRUE</SEC_FLOATING_FEATURE_FRAMEWORK_SUPPORT_SCREEN_RECORDER>
<SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_SCREEN_RECORDER_ITEM>-pip</SEC_FLOATING_FEATURE_FRAMEWORK_CONFIG_SCREEN_RECORDER_ITEM>
¬ Enable Wireless PowerShare
<SEC_FLOATING_FEATURE_BATTERY_SUPPORT_HV>TRUE</SEC_FLOATING_FEATURE_BATTERY_SUPPORT_HV>
<SEC_FLOATING_FEATURE_BATTERY_SUPPORT_WIRELESS_HV>TRUE</SEC_FLOATING_FEATURE_BATTERY_SUPPORT_WIRELESS_HV>
<SEC_FLOATING_FEATURE_BATTERY_SUPPORT_WIRELESS_NIGHT_MODE>TRUE</SEC_FLOATING_FEATURE_BATTERY_SUPPORT_WIRELESS_NIGHT_MODE>
<SEC_FLOATING_FEATURE_BATTERY_SUPPORT_WIRELESS_TX>TRUE</SEC_FLOATING_FEATURE_BATTERY_SUPPORT_WIRELESS_TX>
<SEC_FLOATING_FEATURE_COMMON_CONFIG_DEX_MODE>dual,wireless,dexforpc</SEC_FLOATING_FEATURE_COMMON_CONFIG_DEX_MODE>
<SEC_FLOATING_FEATURE_COMMON_SUPPORT_DEX_WIRELESS>TRUE</SEC_FLOATING_FEATURE_COMMON_SUPPORT_DEX_WIRELESS>
<SEC_FLOATING_FEATURE_COMMON_SUPPORT_DEX_MULTI_RATIO>TRUE</SEC_FLOATING_FEATURE_COMMON_SUPPORT_DEX_MULTI_RATIO>
<SEC_FLOATING_FEATURE_COMMON_SUPPORT_DEX_ON_PC>TRUE</SEC_FLOATING_FEATURE_COMMON_SUPPORT_DEX_ON_PC>
¬ Enable Ultra Power Saving
<SEC_FLOATING_FEATURE_COMMON_SUPPORT_ULTRA_POWER_SAVING>TRUE</SEC_FLOATING_FEATURE_COMMON_SUPPORT_ULTRA_POWER_SAVING>
¬ Enable Secure Wifi
<SEC_FLOATING_FEATURE_WLAN_SUPPORT_SECURE_WIFI>TRUE</SEC_FLOATING_FEATURE_WLAN_SUPPORT_SECURE_WIFI>Quote:
Originally Posted by maramsoftware
Maram Soft is one of the Best Mobile App Development Company in India which coverts your ideas to a perfect Android, iOS and Web Application
Thanks for this post. I would also, like to add that there are a lot of companies that act in this field. Developing mobile apps is now like learning a new language to speak. You may add to your list another online app creating tool which is SeattleClouds (seattleclouds.com). It has quickly become my favorite platform for building an app. In just a couple of months I created my own apps for AppStore, Google Play and now I'm working on duplicating these apps for Amazon Store.
Looking forward for the above list to be longer, so that everybody would have the possibility to make the comparison and choose the tools that fit them most.Tested on my OnePlus 7 pro, with everything updated, no special app version for Google Phone or anything like that
I take no responsibility for anything that happens with your device, although this should all be relatively safe and reverseable.
You must be rooted with Magisk, this is mostly done with modules that are available on the official repo.
1. You will Need these Magisk Modules installed
App Systemizer
Google Dialer Framework
MagiskHide Props Config
Google Call Screening or if this doesn't work you can just edit the prefs xml manually with Prefedit . If you do use this module you will also need:
Busybox for Android NDK.
2 I just realized this part was an exact copy of the guide over at gadgethacks[/URL] , and they did a way more detailed job than I could do, so credit where it's due.
Summarized :
Google Phone should be installable from the Play store after a reboot, if not try clearing Play store storage, if that doesn't work, try clearing Play services storage, if that doesn't work, try installing it from Apkmirror.
Systemize Google phone according to the Systemizer, gadgethacks really breaks this down, you need a terminal emulator, and you do a "su" command, and then a "systemize" command, and its pretty straightforward after that, just find it and select it and reboot. I think you might want to disable your stock dialer in your settings as well.
Make sure Google phone has all the permissions granted and is set as your default spam app (Search for spam in your phone settings).
3. Now for the new part, as the one on gadgethacks doesn't work anymore.
Open terminal emulator again, run a "su" command, and a "props" command.
Select device simulation, (You might have to enable it first) and navigate through the menu, to Google Pixel 4(XL). You might have to go all the way back to the main menu, as it only applys half the props, and go into device simulation again and apply all the props ( I skipped display.id as I don't know if that would mess up anything, and I didn't need it).
4. Reboot. Now just wait a little, clear Google Phone Data, Play Services Data (Don't know if this is necessary). After a bit you should be able to go into Google Phone settings and it should say call screen there, I think you need to be on WiFi for it to enable, and it takes a bit, I had to wait for a while and then it started working.The OnePlus 3T is the successor to the OnePlus 3. It offers upgrades in several areas, such as the processor (going from the Snapdragon 820 to the 821), camera (with an improved front-facing camera and improved EIS for the rear-facing camera), and battery (with an increase in capacity from 3000mAh to 3400mAh). The OnePlus 3T is available in Soft Gold and a new Gunmetal Black color configuration. Like its predecessor, the 3T supports Dash Charge and uses OxygenOS.I've started with how it captures the notification content on 4.3+ which can be found on my site here.
I have a few ideas for other posts like the different ways to draw on screen (on the lockscreen, over the status bar etc) but if anyone has anything specific they'd like to know let me know and if it's something that could benefit others I'd be happy to do a post on that too.
(Btw hope this is the right section to post this)The Google Pixel 4 is a 5.7" phone with a 1080x2280p resolution display. The Qualcomm SDM855 Snapdragon 855 chipset is paired with 6GB of RAM and 64/128GB of storage. The main camera is 12.2+16MP and the selfie camera is 8MP. The battery has a 2800mAh capacity.The Sony Xperia Z2 is a high-end Android device released in March 2014. The Z2 is water- and dust-proof with an IP rating of 55 and IP58. The device has a 5.2" IPS LCD display, with a resolution of 1920x1080. it's powered by a Qualcomm Snapdragon 801 processor, with 3GB of RAM, 16GB internal storage and a microSD slot. The Z2 has a 20.7MP camera, with 4K video recording at 60 frames/second. All this is powered by a 3200mAh battery.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceThe Samsung Galaxy Tab S4 is a 10.5" tablet with a 1600x2560p display. The Snapdragon 835 is paired with 4GB of RAM and 64/256GB of storage. The main camera is 13MP and the selfie camera is 8MP. The battery has a 7300mAh capacity.Preamble:
1. Android Q no longer has FDE, just FBE. So, Jaguar is force-encrypt, which means the phone will be encrypted on first boot. Don't use 'no force-encrypt addons', as you will have problems with hardware (WIFI/GPS/Bluetooth etc), as much of the init related code in Q have been re-written to adapt to 'force-encrypt' FBE. There is no reason whatsoever not to encrypt your phone. The only temporary con is that every time before upgrading, you would have to remove your pin code, that is until the Q version of TWRP is available
2. Locked bootloader: The rom will boot and function on locked bootloader with no warning whatsoever (like on stock). However, since Android Q no longer has AVB v1 boot signing (It has been replaced with AVB v2), on device signing is no longer available. That means any kernel modification (such as what Magisk does) will result in a red warning screen and no boot. So, if you want Magisk and Root, unlock your bootloader
Instructions:
1. If you are coming from any Pie rom, including stock, full wipe is required including internal SD card. That means selecting 'Wipe' and 'Format Data' in TWRP, where you'd need to enter 'Yes' to confirm formatting. Such formatting will erase everything on your internal SD card including all previous TWRP backups. So, transfer whatever you need to a PC. After formatting, reboot in TWRP again.
2. Make sure to have at least 9.0.9 firmware. Otherwise, flashing will abort
3. TWRP: wipe System/Data/Vendor/Cache
4. Flash the rom and boot once. After that do whatever you want: Gapps/Magisk, etc. .
DOWNLOADS
October 9, 2020. New release, V14
1. Android r47
2. October security patches
3. Volume Panel location left/right
4. Amoled theme added in keyboard
Dirty flashing is fine.
Download Rom V14: https://androidfilehost.com/?fid=10763459528675559111
September 23, 2020. New release, V13
1. Application Locker implemented - you can lock any app with a fingerprint (Settings/Security/Application locker)
2. Most userdebug overhead removed, including console, so, rom is more fluid now
3. Fix for Jaguar features icons not shown in light theme
Dirty flashing is fine on top of previous release, otherwise, read instructions above. Download rom V13
: https://androidfilehost.com/?fid=8889791610682943691
September 18, 2020. New release, V12.1
1. Device host name could be customized
2. Wired accessories additions
3. Jaguar rom options drawables made light/dark, as in the rest of Settings
4. Glonass gps enabled
5. Device name changed to pass Safetynet without Magisk
Dirty flashing is fine on top of the previous release Download rom V12.1: https://androidfilehost.com/?fid=8889791610682940780
September 9, 2020. New release, V12
1. Google r46
2. September security patches
3. Updated kernel
4. Preventing apps from getting IMSI and Build numbers
5. Disabled Google analytics when Gapps are installed
6. Safetynet should work without Magisk
7. Latest CAF changes
Dirty flashing is fine on top of the previous release Download rom V12
: https://androidfilehost.com/?fid=8889791610682933697
August 9. New release, V11
1. Google r41
2. August security patches
3. Screen stabilization (enabled via Quick tile)
4. Bluetooth playing/media transfer fixed
5. Rom version added in 'about phone'
6. Guest user: Disallow audio recording and disallow app install
Dirty flashing is fine on top of previous release. Download rom V11: https://androidfilehost.com/?fid=8889791610682911588
July 29: New release, V10.4
1. Fixes some third party apps access to media files on internal SD card
2. Fixes some NFC glitches, such as 'can't open secure_element'
Dirty flash is fine on top of the previous release Download rom V10.4
: https://androidfilehost.com/?fid=8889791610682902982
July 24. New release, V10.3
Fixes call recording, as well as other improvements
Dirty flashing is fine on top of the previous release. Otherwise, see instructions Download rom V10.3
: https://androidfilehost.com/?fid=8889791610682899179
July18. New release
1. Bluetooth fix: Keep in mind that codec selection will only work when bluetooth is ON
2. Ringtone audio focus options
3. Sensor access moved to Settings/Privacy/Jaguar permissions
Dirty flashing on top of previous release is fine. Otherwise, read instructions Download rom V10.2: https://androidfilehost.com/?fid=8889791610682894733
July 16. Rom updated:
1. Fix for Cut/Paste issue
2. Separate settings for Background Clipboard Access per app (Settings/Privacy/Jaguar permissions)
3. Overclocked Slimbus (kernel)
Dirty flash on top of the previous release is fine. Otherwise, read instructions Download rom V10.1: https://androidfilehost.com/?fid=8889791610682893361
July 7. Rom updated:
1. Android r40
2. July security patches
3. Kernel to 4.4.228
4. Touch response optimization
5. Completely redone Bluetooth – new codecs including TWS (see options in Development)
6. UI cleanup, where some settings appeared more than once
7. Additional Volte icon
8. Fix battery optimization taking long time to load
9. Redone notification lights
10. Dock settings (Settings/Sound)
11. Hide apps from recents
12. My version of Afwall included, but disabled by default
Dirty flash is fine on top of previous release. Otherwise, read instructions Download rom V10
: https://forum.xda-developers.com/dev...t/dl/?id=32405
June 14. Rome updated:
1. Toggle access to all networks per app (in addition to granulated access)
2. Toggle access to Camera on secure lockscreen (in addition to removing a short cut)
3. Configure each app access to sensors
4. UI redesign: all 'disable on secure lockscreen' features moved to Settings/Security
5. Real battery capacity (in Settings/Battery)
Dirty flashing is OK on top of the previous release. Otherwise, read instructions above. Download rom V9.1: https://forum.xda-developers.com/dev...t/dl/?id=32397
June 6. Rom updated to V9:
1. June security patches
2. Google release 39
3. Screen recording with sound
4. Keyboard back to AOSP+ with an extra row for numbers
5. Most blobs from Oxygen 10 stable
Dirty flash on top of the previous release is fine. Otherwise read instructions. Download rom v9: https://forum.xda-developers.com/dev...t/dl/?id=32391
May 23. Rom updated. V-8.1
1. Rom rebuilt with dexpreopt for speed (100mb larger as a result)
2. Pocket judge driver implemented in kernel
3. Unprivileged userland implemented (in kernel) and disabled
3. Kernel to 4.4.223
4. Keyboard now has gestures
5. Webview updated to V83.xxx
6. Platform, Hardware and Ram info in about phone
7. Some blobs from Oxygen Q beta 3
Dirty flashing on top of the previous release is fine. Otherwise read instructions. Download rom, v-8.1
: https://androidfilehost.com/?fid=4349826312261816992
May 6. Rom updated. V-8
1. May security patches
2. Android r36
3. Kernel updated to 4.4.221
4. Graphics firmware and blobs from Oxygen (not buggy Hydrogen) Q beta
5. Qperformance blob from Oxygen Q to work with Qcom boostframework
6. Notification/alarm/ringtones added from Oxygen Q
Download rom V-8
: https://androidfilehost.com/?fid=4349826312261799767
Dirty flashing on top of the previous release is fine. Otherwise, read instructions above. April 21. Rom updated, V-7.2
1. Face unlock independent from Google apps/services
2. AOD QS tile.
3. Updated system apps.
4. Theme-able icons for Jaguar settings room (forgot to mention it in V7)
Dirty flash is fine on top of the previous release. Otherwise, read instructions. Download rom V-7.2
: https://androidfilehost.com/?fid=4349826312261778372
April 8. Rom updated, V-7
1. Android release 33
2. April security patches
Dirty flash on the previous release is fine Download rom V7
: https://androidfilehost.com/?fid=4349826312261765647
March 29. Rom updated, V-6
1. Theming changed, so now, you have dark and light interfaces with system wide accents of any color
2. Kernel updated to 4.4.217
3. Mobile data panel added (on long click in QS)
Dirty flash on top of the previous release is fine Download rom V-6
: https://androidfilehost.com/?fid=4349826312261757249
March 19. Rom updated, V-5.2
1. AOSP dark mode replaced with DU themes
2. More permissions added for Lawnchair
3. Wallpaper picker updated
Dirty flash on top of the previous release is fine. Download V5.2
: https://androidfilehost.com/?fid=4349826312261750138
March 16. Rom updated to V5.1
1. Option to adjust minimal brightness
2. AGPS switch
3. Switched to Lawnchair as home
4. Blobs updated to 9.0.11
Dirty flash on top of the previous release is fine. Otherwise - clean flash - read directions above Download Rom V5.1: https://androidfilehost.com/?fid=4349826312261747017
March 5. Rom updated. V5
1. Rebased kernel
2. Offline charging
3. March security update and latest Android sources
4. Network traffic dynamic option
5. Night mode automatic (sunset/sunrise)
6. Sound picker backwards compatibility (no more f/c on older apps, when changing notification sounds)
Dirty flashing is fine, if on a previous release. Otherwise, clean flash, see instructions above Download rom V5: https://androidfilehost.com/?fid=4349826312261738133
February 8. Rom updated, V4
1. February security patches and latest Android sources
2. Further simplification of UI
3. Get rid of certain features (font options) to lighten the rom
4. Notification vibration toggle
5. Google calendar crash fixed
Dirty flashing is fine. Otherwise, read instructions above. Download rom V4
: https://forum.xda-developers.com/dev...t/dl/?id=32329
__________________________________________________ __________________________________________________ _______________ January 30. Rom updated, V3
1. Latest Android source
2. Revised UI (lockscreen features are now in 'Display/Lockscreen')
3. Fingerprint additional settings (vibration) are now in 'Security' next to Fingerprint
4. Notification options are now in 'Apps and Notifications'
5. Restored original 'hosts' file to prevent issues with Googleplay download
6. Call recording enabled for all
7. Priv-app permissions for several Google apps are introduced and enforced
8. Gboard is replaced with open source OpenBoard
9. Flashlight blinking on calls removed, as it couldn't be turned off
Credit for OpenBoard to dslul
: https://github.com/dslul/openboard
Dirty flashing over the previous release is fine
Download rom V3: https://forum.xda-developers.com/dev...t/dl/?id=32313
__________________________________________________ __________________________________________________ ________ January 20. Rom updated, V2
1. Redesigned UI. Theming and doze settings moved to Display; Extra battery settings to Battery
2. Lockscreen fonts options
3. New hosts file, which allows connection to googleplay
4. New icon for Private Dns
5. Print services icon now themeable.
Dirty flash is fine.
Download rom V2
: https://forum.xda-developers.com/dev...t/dl/?id=32287
__________________________________________________ __________________________________________________ ______________ Download rom V1
: https://forum.xda-developers.com/dev...t/dl/?id=32261You know the story by now after 2 years, lets get started.
GCA Launcher was inspired by Chromium OS. A single screen launcher offering a minimal but powerful and feature packed homescreen experience. GCA Launcher aims to mimic chromium desktop in several ways but because its a mobile environment, we have standards. GCA includes premium features like icon pack support, icon editing (yes adaptive support), app shortcuts, android profile environment support, Android 11 support right out of the box, these cool app launcher sheets for some extra room for cool things like app groups, search, app editing and more oh and i mentioned support for Android Go and way back to android 5? The Go Custom Android Launcher experience is completely free, no obligations, no troubles, no exceptions. We offer a telegram grouo with support with some really cool and fun users, some really cool ideas we would like to explore and exploring the future of android.
Current Features
Launcher supports work profile apps and dual apps from various oems
Launcher supports Android 10+ gesture system but restricted.
Groups allow users to create organized folders of apps available in the Groups Sheet
Personalized search in the Search Sheet
A revised single screen interface introducing a new layered material design.
Launcher Sheets are a new approach to app menus. Pixel launcher uses pop menus, we will be using Sheets.
The App Drawer secondary tab can be triggered by double tapping the tab layout (beside the tab title). Long click the tab to edit the contents.
The Launcher Shelf (Dock) has been separated from the App Drawer which gives the launcher a layered material interface.
Shelf can now hold up to 12 favorite apps. Favorite apps can be switched out by long clicking on the Shelf Item and switching out the application package in the Sheet Menu. The Shelf can also use a 2 row feature for taller devices and scroll for smaller screens.
The Shelf and App Drawer apps will feature different system shortcuts and features in the app sheet. App Sheets can be opened up by long clicking on an app.
Apps can be customized in the App Sheet and mirror results from the Shelf to the Drawer. Apps can be toggled to use an icon pack, adjust the icon scaling in the Adaptive Icon Shape and adjust how the Adaptive Icon tints itself and use custom titles.
The Shelf features a revised searchbar that can be toggled to the Top, Bottom or Removed completely. The searchbar features a shortcut to open the launcher menu, a global search feature, an assistant shortcut and has an option to store and track the usage of App Shortcuts to feature a recent actions holder.
The App drawer features the pixel launcher carot indicator. It acts as an all apps indicator and button.
The App Drawer has 4 main styles. Vertical Grid, Horizontal Grid, Smart Grid and Smart Vertical List. Smart Grid and Smart List uses Flex Layout Manager to determine the space available for your apps and makes calculations by itself to determine whats best for your device.
The Blacklist is for the Primary Tab of apps that blocks apps. The Whitelist for the secondary tab is to show apps.
The App Drawer is built on a fastscroll functionality. It does not have a drag indicator as of right now. Its built on the idea of being smooth and fast. As the App drawer rises, the Shelf will shrink to allow better access.
Recent Apps now uses Usage Stats Data. This gives Recent Apps a 100% reliable stat and not clutter up the app drawer when its not in use. The list will update on a regular basis.
Recent Apps don't have a long click listener (no sheets).
The Shelf and App Drawer are theme separately based on the launcher theme and style. Android10 dark mode is also considered in this occasion.
The App Drawer has 2 tabs for the user. The primary tab and the secondary tab. Long clicking on a tab will open up the respective Black or White list. Both tabs update and sync respectively
App Shortcuts are generated based on the Android OS and can be found in the app sheets when set to the default launcher(Android 5-7 will have custom shortcuts in the future, developing something currently)
GCA Notification Badges have been rebuilt from the ground up. When enabled in the android notification settings, an apps priority notification will appear in the app sheet when a badge is lit. Users can choose between a pixel like badge or an underline indicator. Apps also have app indicators to indicate specific features for users.
Launcher notifications (updates, firebase messages and alerts) are saved in the notifications window.
Users can block apps from showing badges and priority notifications.
Launcher sheets can be accessed from the launcher menu.
The launcher homescreen can use a single widget. This widget can be swapped out by using the Widget action in the launcher menu or if your on Android 8.x, you can access widgets from an apps system shortcut
Widgets can be resized by long clicking on them and a resize module will appear (WIP).
The launcher settings will theme itself on Android 10 light or dark mode.
Launcher settings features smart suggestions that appear on certain variables available
Launcher features a revised theme system based on Pixel Launcher. As the wallpaper changes, theme system will automatically update its color scheme. The color scheme can be swapped in the theme and style settings. This does not apply to live wallpapers unless a static wallpaper was applied.
The Launcher was built on Android 10 as a focus so different features are locked out based on the operating system your using.
Launcher features an assortment of customization. I will be working on what is called "Focused Customization". It limits how much customization the launcher has to limit on bugs but also brings in important customization we care more of.
GCA Launcher is free but has a feature called Pledges. Pledges are an in app product you can buy to help support development. Pledge prices change over the weekend for a discounted price. Purchasing a Pledge gives you an in app title. Pledges are what made V2 possible. The community can monitor monthly pledges in the activity and the progress we've made.
System Shortcut options that are available (Application Information, Application Usage Stats, Battery Usage, Notification Channels, Sharing, Playstore link, Relaunch application, Uninstall application, Widget preview and clear notifications) Clicking the small arrows above quick scroll through your options.
Long clicking on an Application Shortcut will automatically add it to the recent actions list in the searchbar (for ex: I usually have incognito tab for chrome and my apps from playstore)
The launcher relies on built in gesture system. Currently, this gesture system is not customize able but is in the progress of being so. (Swipe up to open app drawer, swipe down to open statusbar, double tap to open launcher sheet, long click for launcher menu)
GCA Launcher uses my Drywall app as its main wallpaper provider app. Download it as an optional add-on for extra wallpaper management features, otherwise it will allow you to choose your wallpaper app.
Users can adjust the icon size and text size for their app icons
There is a roadmap of features and add-ons on my todo list and I will keep track of it on my own time with milestone updates.
I hope you all enjoy this project as Iv'e been pouring many hours into it. Its been one heck of a challenge for me.
General Note:
This is a pre beta of which means parts of the launcher are not even functional yet. I did a pre beta to find errors i couldn't find myself and to get feedback on the progress we currently are at. If you see a page that is blank or something isn't functional, chances are it wasn't ready for the public yet. Please be patient with things.
Common Questions:
Why does GCA Launchers Adaptive icons behave so differently compared to the ones found in stock launchers?
-That is because the icons use a different mechanic and were made from scratch so everyone could enjoy adaptive icons and it not be exclusive to 7.1+ users. My icons can be modified from the icon to the shape override.
Can we get a launcher import option?
-No, not currently. Almost all launchers that exist use the base of Googles Launcher3 which adding an import option for them is easy. I would have to take the database, tear it apart, create a converter and place the data we need were it belongs. We are not there yet.
The System UI seems to behave differently from other apps.
-GCA Launcher has a theme engine similar to pixel launcher and trys to make the choice of a light or dark navbar or statusbar. Using Android10s dark mode may confuse things but eventually il have it all sorted out.
The launcher interface isn't what I expected. Shouldn't it behave like pixel launcher?
-No, it behaves like it should be. How it was designed.
Does it support quickswitch?
-It never will unless Google changes the api for the recents provider. I blame the lawnchair team of this common question as many users have assumed this is a premium feature now and should be supported by all launchers now which isn't the case.
Does this launcher support dark mode from android10?
-yes but we have some work todo yet
Why do things look weird in the launcher settings? Preference category is hard to read and matches the toolbar color.
-Try changing the color scheme in the style settings. This is the GCA theme engine at work.
Ratings:
If you post a rating for GCA Launcher coming from V1, more than likely i will dis regard it. V1 is being deprecated soon and all bugs and errors you will find in V1 on the playstore are being disregarded. V2 is a rewrite with new features and new bugs.
I updated the build earlier to fix something for Android 8 users and ended up screwing something up for Android 9 users so il be keeping tabs on everything as much as possible but I will not be able to do anything if no one says anything. Please provide feedback as much as possible. Thank you in advanced.
Those of you keeping me informed of crashes, thank you, thank you, thank you
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
I just installed this and have only played with it for a few minutes. A couple things I have noticed.
The status bar icons and time take on the same color as the wallpaper. I installed and ran it with a white background. The status bar icons were white, when I changed to a black background they changed to black as well.
I can't get the size of the icons to save. When I go to settings>theme and style>launcher icon I change the size from small to normal but when you click ok and go back into the setting it says small again.
I also would get where the phone would default back to the stock launcher.
Maybe I didn't play around with it enough but how do you set apps on the dock?
I will mess with it some more tomorrow and let you know if I find anything else.
Also I am on a Pixel 4 XL on March update. Not rooted or unlocked
Shelf apps can be changed by long clicking on a Shelf favorite and their will be a Favorite option to select a different package. This option isn't available in the App Drawer apps so it might be easy to miss.
When changing the icon sizes, make sure your changing the icon size and bot just the text size. Both options are in one dialog.
Id your having a hard time switching out your default launcher, you can use my No'Me app i have listed above. It helps alot.
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWe can do big tier-1/2 installs volume from our existed app network on Google Play.
Looking for interesting SDK for monetization, which can bring $1 from active user per month.
Not interested in standart ad formats, just something which can bring big money, all solutions allowed - we can discuss risks for GPlay ban.
Please, write in PM with numbers and offers.
ThanksThere are many cross-platforms app frameworks existing, but there are those who are competitive and widely used. However, each one of them has some advantages and some disadvantages. Let us analyze the top 5 most competitive cross-platform app frameworks:
1. Flutter
2. Ionic
3. Xamarin
4. Adobe PhoneGap
In the current century, a lot of mobile app development keep increasing every other day. Approximately 1.8 million applications on the Apple App Store and 2.5 million applications are on the Google Play Store. This implies that the applications are expected to keep advancing in the years to come. Any app developer will prefer a cross-platform solution to ease the process of app development.
Here is the list of a framework for cross-platform app development.
React Native
With react native you can create a mobile application for multiple plateform like android, ios, web & windows by using native code again and again.
Flutter
Flutter is another open-source cross-development framework that is largely used by the developers. With Flutter, you can develop mobile applications for android, ios, windows, Linux with a single code.
Xamarin
When it comes to listing out top framework for cross-platform development framework. None of developer will miss mentioning xamarin in their list. One of the open-source frameworks for cross-platform development, developers can build android, ios, watches, macOS app.
Corona SDK
One other best framework which is widely used by a developer to build 2D games & apps for android, ios, kindle, Android TV, Apple TV. It was developed by the corona lab in 2009. It uses the one of fast programming language Lua.
Ionic
Ionic is also one of the open-source frameworks which are widely used by developers to develop a mobile app and progressive web app. Ionic comes with 100+ mobile optimization react to UI components.
jQuery Mobile
Sencha
This is the major & popular framework for cross-platform development. It will be a tough job to find best framework for cross plateform development. If you consider my recommendation I will say react native is one of the best framework to develop cross plateform development. There are lots of big brands that have developed their cross-platform app on react native includes Netflix & Facebook.
Top Frameworks for Cross- Platform App Development
There are several frameworks available for cross-platform mobile app development. So far, in Systango, we worked on numerous cross-platform frameworks, and according to our experience, the top three frameworks for developing a cross-platform mobile app are Xamarin, Flutter and React Native. If you are looking for the top framework or tool for cross-platform development, hopefully, this answer will help you.
Flutter
Flutter is a cross-platform, open-source mobile application development framework. It is the newest framework amongst Xamarin, Flutter and React Native and it has gained a lot of popularity among front-end development.
React Native
Developed by Facebook, React Native is an open-source platform used for cross-platform app development.
It enables users to use React and JavaScript with native platform capabilities to build mobile applications.
Xamarin
Xamarin is an open-source, cross-platform mobile application development framework, founded in 2011, which makes it the oldest of the three.
We have prepared a comprehensice blog which includes proper analysis for all three frameworks.
Many platforms are here with the help of which we can develop apps
Cross platform development platforms:- Ionic, React native, Xamarin, Phonegap, Native script, Flutter, PWA etc...You can use any one from all of them
XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceRegister or Login with Google
Why when I flash this in magisk it succeeds but after I reboot i the module doesn't show in magisk modules?
Why when I flash this in magisk it succeeds but after I reboot i the module doesn't show in magisk modules?We are looking for new beta testers for our decentralized community/messenger app.
https://play.google.com/store/apps/d...peerem.android
We started an open beta test. All you need to test is an Android device and some friends, it's a community app.
No registration needed, just use your existing accounts on Google, Facebook or Twitter.
- Your data is stored only on your own mobile device.
- Peer-to-Peer connections with, of curse, end-to-end encryption.
- Possibility of time limited visibility of chats, pictures or videos.
- You can safely chat with your friends, make phone calls or make video calls.
- Multiple Accounts - separate friend lists can be created.
- Location sharing - see where in the world your friends are, if they allow it.
- And many more ...We've just released the first version of a new tool to compare the installs, uninstalls, retention, ratings, and more.
It uses the data that Google makes available for download to every developer. After importing data, you can easily see trends of your apps over time and compare them to each other.
This is a first beta release, if you're interested in trying it out, head to https://www.appgenius.org/
If you have any feedback, please let us know, or discuss in this thread!
Best regards,
MathijsAny GPS / antenna experts able to think of a way to increase GPS strength? I want to use my table as a GPS inside of a really thick metal truck. How could I rig up an antenna of sorts to improve GPS strength?Well i have to access the getRxBytes(String iface) method of TrafficStats.
I want to make a wrapper to pass a name of the interface and get the RX and TX bytes of it.
Current public are
TrafficStats.getMobileRxBytes();
TrafficStats.getMobileTxBytes();
and
TrafficStats.getTotalRxBytes(); TrafficStats.getTotalTxBytes();
I need
TrafficStats.getRxBytes(String iface);
TrafficStats.getTxBytes(String iface);
i need a wrapper like
public long getInterfaceTxBytes(String interface) {
// hidden API getter
TrafficStats.getTxBytes(interface);
}I've tried all of the ROMs you mentioned and many more (e.g. DerpFest, AICP, NOS, etc.). In my opinion, the lastest RR (10/18 build) offers the most customizations and is stable. PA was stable for me as well but I love the customizations RR provides. OOS with NoLimits was my favorite setup for many years with zero problems. I was just ready to try something different which led me to testing every ROM under the sun. I've successfully landed on RR and if I wanted a stable custom ROM without all of that, I would choose PA or NOS. You can't beat NoLimits for a customized stock OOS experience. It all comes down to what is important to you.
Thanks for all the explanation .
I have some questions my friend
1. This no limits thing ,
This is the first time in 2 years , am coming to hear about this .
My ram management is so shitty in oos 10 , so I would like to use NO LIMITS module and I read about it .
I would like to use NO LIMITS .but I am on blue spark kernel latest.
I would like to know how I should install this module .
Am on OOS 10 with blue spark kernel and Vanced YouTube module .
It's given that I do this in twrp without wiping anything .
And also my ram management is shitty, is any recommendations for setting the kernel to reduce it , make it more performance ?
Thank youHi everyone,
We (at XDA) have been working on something.
This is XDA Labs. The name isn't final, and this is not the "official" launch... but we are (quietly) giving you guys a chance to try it out so we can get some feedback. So....what is it?
First and foremost, it's a speedy way to access the forums (ad-free!). You'll see a lot that's familiar with XDA One, because we merged the code into Labs and made a handful of much-needed improvements.
Second, it's a new way to access all the Xposed modules you love.
And third, it's a way to distribute apps-- and eventually all sorts of stuff that people upload to XDA. It is 100% pro-developer in that 1) we allow all types of apps (including stuff not allowed on Play), 2) we don't remove apps without warning and without communication to the developer, 3) we enable developers to sell apps, receiving 100% of the proceeds directly, 4) we accept Bitcoin payment, which is fast, easy, and low cost, and 5) we utilize alpha, beta and stable release channels so devs can have control in how they distribute apps to users.
If you are a developer and want to add your app, go here: https://labs.xda-developers.com/
Otherwise...use the app, and tell us what you think! Again, Labs is very much Beta right now so keep your expectations in check!
XDA:DevDB Information
XDA Labs, App for all devices (see above for details)
Contributors
blk_jack, svetius, bitpushr, rwestergren
Version Information
Status: Beta
Current Beta Version: 1.1.6
Beta Release Date: 2018-03-19
Created 2015-11-05
Last Updated 2018-03-19Register or Login with Google
The Lyf Wind 3 was first made available for purchase in August 2016. It features a 5.5” 720P IPS LCD display, offering a pixel density of ~267 PPI. Under the hood sits a Qualcomm Snapdragon 410 SoC, which utilises a 1.2 GHz quad-core CPU, an Adreno 306 GPU and 2 GB of system RAM. A dedicated microSD card slot is included, allowing expansion of the 16 GB of internal storage. The primary camera is capable of capturing images at 8 MP, the secondary at 2 MP. The 159g chassis is kept powered-up with a non-removable 2920mAh battery. Here members are free to explore the existing threads available for the Lyf Wind 3, which may include topics such as ROM development, custom recoveries and rooting guides, or simply request general support for their device.For a few years I've had this problem with my Nokia 2330, everything I go to Applications and click on the Games folder, the phone is loading, after loading it shows me a white screen for a split second and then shuts off.
If anyone needs to know exactly what happens lemme know and I will record a video.
The model is Nokia 2330-c2
Ive had this problem for 6 years now, and ive been struggling to fix it for a very long time.
If anyone still has this phone then PLEASE HELP ME FIX IT. The white display problem occurs on other things along with the Games folder. So if you still have the phone then PLEASE help me.
Thanks.We are having our web-based driver ed program put into an app. It's largely done, only we are unable to determine how we can accept payments and the designer is not very helpful in this regard.
There is an outstanding issue here...Our app is for TEENS...we need it so they can enter payment info, their parents can, on their phones.
The PROBLEM is that our app developer says that authorize . net api is old, outdated and unsupported and he won't use it..so he is suggesting we use apple pay and google pay. PROBLEM is, it requires that the payment information be stored on the phone and it's highly unlikely that the teen will have the parents payment info already stored.
How can we get around this and allow people to input their payment information normally? Sadly, our site currently is using paypal for this but it looks horrible in the app and has to be replaced.
If we cannot use Authorize for this... what other methods can we take payments using?For the past couple of months, I've been looking into making a more universal solution to disable dm-verity and forceencrypt. Needing to take different zips, modify them for different devices, and then cross your fingers when you switch between custom and stock roms simply wasn't good enough for me. After lots of searching around, failed attempts, and some guidance by @Xennet, @osm0sis, and @nathanchance (thank you all for your help), I finally got a working solution. Ironically, it was under my nose the whole time.
@topjohnwu figured much of this out a while ago with his magiskboot binary - just modify the fstabs. Magiskboot only works for fstabs in the ramdisk though and dm-verity and forceencrypt are only disabled under certain conditions (when you create a .magisk file with the variables set to false and place it in the proper location). So I made an installker with AK3 by @osm0sis and used a combination of sed patches by @jcadduono in addition to others I found for fstabs not in the ramdisk, modified magiskboot with some extra entries I found need to be removed on some devices, and added some stuff of my own like the creation of .magisk and .supersu files in the right location with the proper contents.
The end result: a zip that will remove dm-verity and/or forceencrypt from all fstabs on your device
It can also remove disk quota if you choose. This may be needed if you have an older twrp and/or want to downgrade to Nougat. More info here: https://source.android.com/devices/storage/faster-stats
Instructions:
The zipname tells the installer what to do. Here are the current options:
- Add 'enfec' or en'forceencrypt' to zipname to keep forceencrypt enabled if present
- Add 'fec' or 'forceencrypt' to zipname to disable forceencrypt (zipname already has this so remove these if you want to keep it enabled)
- Add 'quota' to zipname to disable disc quota
If you're currently encrypted:
- BACKUP YOUR INTERNAL STORAGE TO YOUR PC
- Format data (this is NOT the same as Wipe data) (In TWRP: Wipe -> Format Data)
- Reboot back into recovery
- Follow the directions below for when you're not encrypted
If you're not encrypted: flash all of your stuff, then FLASH THIS ZIP LAST
Some extra details for Slot devices:
Only difference here is the twrp zip and the recovery reboot, main principle is the same - FLASH THIS ZIP LAST
Troubleshooting:
- Take a recovery log after flashing this zip (thanks to @aIecxs for the imgs):
- If the zip isn't patching any fstabs that it should be, then it's possible that the previous zip(s) didn't unmount system and/or vendor properly. Either unmount them in twrp, or just reboot back into recovery and flash this zip again
Compatibility: Any android device
Source: https://github.com/Zackptg5/Disable_...y_ForceEncrypt
DownloadUnlike other OnePlus launcher ports, this includes:
- A fully functional dark mode that respects the system wide setting on any device
- Rounded corners for the recent apps animation & rounded corners for the all apps flyout will respect the rounded corners of your device (If your device has no rounded corners OnePlus launcher will respect that)
- In addition it also includes theming support allowing for the font & accent colour to be customised based on the style you have chosen through styles & wallpepers (if applicable)
Downloads:
- APK - QuickSwitch.OnePlus.4.6.5.RandomAJL.apk
- Magisk - Magisk.OnePlus.4.6.5.RandomAJL.zip
- TWRP for ROM - TWRP.ROM.OnePlus.4.6.5.RandomAJL.zip
- TWRP for GSI - TWRP.GSI.OnePlus.4.6.5.RandomAJL.zip
- Download & install the apk from the downloads section above
- Follow the instructions listed on the QuickSwitch XDA forum
- Download the Magisk zip file from the downloads section above
- In Magisk, install the module by going to Modules section and tapping the plus icon & selecting the file you downloaded
- Reboot
- Set OnePlus launcher as your default Launcher app (Usually in Settings -> Apps and Notifications -> Default apps -> Home app)
- Download the TWRP zip file from the downloads section above
- In TWRP, flash the zip by going to Install and finding & selecting the .zip you downloaded
- Wipe cache/dalvik
- Reboot
- Set OnePlus launcher as your default Launcher app (Usually in Settings -> Apps and Notifications -> Default apps -> Home app)
- Double tap to lock on homescreen (depending on rom / gsi)
- Navigation to parked car has no map view (however location can still be found by clicking the Navigation button)
- Landscape view has buggy home gesture. You can still get home in landscape by first swiping into recent apps
- Android 11 navbar stays in the same location in landscape. (Known issue with Android 10 Launchers in 11)
- You can message me via XDA private messaging if i don't reply here
- Alternativly, if you'd prefere, you can message me on telegram through @RandomAJL
Completely optional butt.. If you'd like to support my work you can donate HERE. It'll be greatly appreciated, thankyaaa!!
paypal.me/ajaylottThis tutorial is only for Qualcomm ZTE Devices.
Unlocking the Bootloader:
Warning: This bootloader unlocking method is not for beginners. It requires at least some knowleage on how to flash ROMS or partitions via QFIL and ADB commands. If you do not understand something here, than the tutorial might not be suitable for you. You can still try it, but at your own risk of course.
Will not work on:
Axon 7
Axon 7 Mini
Axon 9
Axon 10
Axon M
Zmax 2 (Z958)
Anything else that has Oreo, PIE or 10
The unlocking bit on those devices are stored in another partition that can't be easily modifiable
Working on: (Thanks @deadman96385)
Snapdragon 210 Processors:
ZTE Avid Plus (Z828)
ZTE Maven 2 (Z831) (code-name: chapel)
ZTE Maven 3 (Z835) (code-name: draco)
ZTE Majesty Pro Plus (Z899VL) (code-name: elden)
Unknown ZTE (code-name: forbes)
ZTE ZMAX One (Z719DL) (code-name: gemi)
ZTE Tempo X (N9137) (code-name: grayjoylite)
ZTE Grand X View 2 (K81) (code-name: helen)
ZTE Overture 3 (Z851) (code-name: jeff)
ZTE Fanfare 3 (Z852) (code-name: kelly)
ZTE ZFive G LTE (Z557BL) (code-name: lewis)
ZTE ZFive C (Z558VL) (code-name: loft)
Unknown ZTE (code-name: refuge)
ZTE N818S (code-name: sapphire/sapphire4G)
ZTE Blade Vantage (Z839) (code-name: sweet)
Snapdragon 617:
Android 5.1.1
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Imperial Max (Z963U) (code-name: lily)
ZTE Max Duo LTE (Z963VL) (code-name: nancy)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE Max Duo LTE (Z962BL) (code-name: tom)
Android 6.0.1
ZTE ZPAD (K90U) (code-name: gevjon)
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
ZTE Grand X Max 2 (Z988) (code-name: jerry)
ZTE Axon Max (C2016) (code-name: orchid)
ZTE ZMAX Pro (Z981) (code-name: urd)
Android 7.1.1
ZTE AT&T Trek 2 (K88) (code-name: jasmine)
MSM8920/MSM8937/MSM8940/MSM8953 (Qualcomm Snapdragon 427/430/435/625):
ZTE Blade Force/ZTE Warp 8 (N9517) (code-name: warp8)
ZTE Grand X4 (Z956/Z957) (code-name: finacier)
ZTE Blade Spark (Z971) (code-name: peony)
ZTE Blade X (Z965) (code-name: proline)
ZTE Max XL/ZTE Bolton (N9560) (code-name: bolton)
Unknown ZTE (code-name: flame)
ZTE Blade X Max (Z983) (code-name: stollen)
ZTE Blade Max View (Z610DL) (code-name: violet)
ZTE Max Blue LTE (Z986DL) (code-name: florist)
ZTE AT&T Primtime (K92) (code-name: primerose)
Want to watch a video instead?
You will need:
- A Qualcomm ZTE device (I am using a ZTE Avid Plus Z828)
- A PC
- Adb Commands installed
- QFIL 2.0.1.9
- A Hex editor (Like HxD)
Tutorial:
Open QFIL, You should see Qualcomm HS-USB QD-Loader 9008 (COM****)
We are intrested in the /devinfo partition only!
- Click on "Read Data"
- Copy the file we read to somewhere like the desktop and make a backup in case it does not work.
Next, open HxD or any other hex editor
You should see a layout like this:
Edit this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
to this:
41 4E 44 52 4F 49 44 2D 42 4F 4F 54 21 00 00 00
01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
It looks like ZTE did put another ANDROID-BOOT! at this section, they thought I would not see the second one Make sure you edit that second one, otherwise the BL won't be unlocked.
__________________________________________________ _________________________
What will this do?! The two 01s we put in this file will show to the bootloader that it was unlocked before via fastboot. Of course, we are editing it now and it was never unlocked via fastboot. This is enough to fool it
For people who don't know, on all android devices, there is the /devinfo partition that stores the information of the bootloader such as is_unlocked (aboot), is_tampered, is_verified, charger_screen_enabled, display_panel, bootloader_version, radio_version etc.
We have to modify it into saying is_unlocked and is_Critiacal_unlocked
__________________________________________________ __________________________________
(You might need to reopen QFIL)
- Back to the partitions, right-click /devinfo again and click "Manage partition Data" again
- Click "Load image"
- Select the file we modified (Should be a .bin)
- Wait a few seconds and restart your phone and IT SHOULD BOOT SURELY!!
Your bootloader should be unlocked!!
You cannot really tell if the Bootloader is unlocked unfortunatley. But, if TWRP boots or ROOT persists then here is your sign
TWRP is booting!
You can now ROOT, Install custom ROMs, Install Custom Recoveries, kernel modifications & More using QFIL!
You are now free
Credits to aleph security in the Unlocking the bootloader section at the bottom of the page for showing the Hex values to change: https://alephsecurity.com/2018/01/22/qualcomm-edl-2/No. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- LKT sets random nonsensical build.props that likely don't even exist.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- CAF CPU Boost Tweaks
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16we have worked for years, always with the stinky help of the prestigious University of Detroit, analisyng well over a hundred thousand anonimous farts, categorizing all of them and obtaining, as a result, this wonderful app.
The Fartometer is not a bad taste joke, its a bad smell one. Download Fartometer today, have dietary fiber for breakfast and don't stop categorizing your farts. You will become happier and you will never have a constipated face never again. People around you will thank you, except you if they get you in the toilet.
Share your achievements with your friends so they value you for your inside. You will be able to play your fartover and over, being a delight both for you and your listeners.
Download from Google PlayStep 1: Download Sugar. This thread: https://forum.xda-developers.com/and...phone-t4021201, has everything you need to know about Sugar. I ran the upgrade once to download the full stock ROM (make a backup as described). Warning, this erases all of your data.
Step 2: Follow this guide: https://forum.xda-developers.com/and...ource-t3843473, to build a TWRP for the Palm Phone without source. I used the latest TWRP for the Asus Nexus 7 2013 LTE as my base. From your Palm upgrade backup, the recovery image is the one that starts with 'R', about 36MB. Rename your new TWRP image to match the stock recovery and replace it similar to the rooting guide for replacing the boot image.
Update: snoopy20 has shared his TWRP image here: https://forum.xda-developers.com/sho...3&postcount=26
Step 3: Extract the system image you downloaded and rename and replace the stock system image. It's the largest file in your Sugar device folder.
Step 4: Re-run the upgrade in Sugar with your replaced images in place.
Step 5: You're probably stuck in a boot loop. Press and hold the power button until you get into recovery, which is now TWRP. First, I formatted data. Then push or otherwise copy this zip to the device: https://forum.xda-developers.com/and...crypt-t3817389 and install it from TWRP. The stock configuration should be fine, i.e. don't worry about re-naming the zip. Note, do NOT use adb sideload, since that seems to wreck the zip installer's ability to use its own file name to configure itself.
Update: The Universal dm-verity zip may not always work, in particular on AOSP Android 10 images. In this case, you can use another Android device and Magisk Manager to patch the Palm boot image. Push the boot image from your Palm backup (described in Step 1) to the other Android device. It's the mbn file that starts with 'B'. I chose to rename it to boot.img for easier use. Than use Magisk Manager to patch it. Push the modified boot image back to the Palm (in TWRP) and use TWRP to Install->Image it.
Step 6: Reboot! Wipe data and cache for good measure, and you should be set!
All credit goes to the folks from the links above for creating the Treble system image, TWRP guide, and dm-verity script. Thanks to snoopy20 for his TWRP image.
Things that work so far:
* Almost everything
Doesn't work
* Soft key requires an app, such as Key Mapper, to use
* Screen auto brightness is missingThe problem Is that I think the code Is obsolet cus it's not using the sintaxis 'android.x'
I would thank you if you can take a look at this AND can give me solutions. Thank you guys, see you around. 😎No. Well, yes. However, a "kernel optimizer" is a poor way to put it. KTweak performs kernel adjustments based on facts and evidence, unlike other optimizers with poorly written or heavily obfuscated code. For example:
- LSpeed is almost 4000 lines long; completely unnecessary.
- LKT sets random nonsensical build.props that likely don't even exist.
Need I go on?
What's different about KTweak?
Unlike other "kernel optimizers", KTweak is:
- Concice, at around 200 lines long,
- Entirely open source with no compiled components,
- Backed by logic and evidence,
- Designed by an experienced kernel developer,
- Non-intrusive, being completely systemless.
Benchmarks
The following benchmarks were performed on a OnePlus 7 Pro running the stock kernel provided by the OEM on Android 10.
hackbench -pTl 4000 (lower is better)
Without KTweak: ~20-50 seconds on average
With KTweak: ~4-6 seconds on average
perf bench mem memcpy (lower is better) (average of 50 iters)
Without KTweak: 14.01 ms
With KTweak: 10.40 ms
synthmark (voicemark) (higher is better)
Without KTweak: 374.94
With KTweak: 383.556
synthmark (latencymark little) (lower is better)
Without KTweak: 10
With KTweak: 10
synthmark (latencymark big) (lower is better)
Without KTweak: 12
With KTweak: 10
The Tweaks
In order to remain genuine, I have commited to explaining each and every kernel tweak that KTweak applies. Grab your coffee, this could take a while.
kernel.perf_cpu_time_max_percent: 25 --> 5
This is the maximum CPU time long perf event processing can take as a percentage. If this percentage is exceeded (meaning perf event processing used too much CPU time), the polling rate is throttled. This is reduced from 25% to 5%. We can afford inaccuracies with perf events in exchange for more time that a foreground task can use.
kernel.sched_autogroup_enabled: 0 --> 1
The Linux Kernel scheduler (CFS) distributes timeslices to each active task. For example, if the scheduling period is 10ms, and there are 5 tasks running, CFS will give each task 2ms of runtime for that scheduling cycle. However, this means that a SCHED_OTHER task may compete with a SCHED_FIFO task. Autogrouping groups task groups together during scheduling. For example, if the scheduling period is 10ms, and there are 6 SCHED_OTHER tasks running and 4 SCHED_FIFO tasks running, the SCHED_OTHER tasks will get 50% of the runtime and the SCHED_FIFO tasks will get the other 50%. For each task group, the timeslices are once again divided. The SCHED_FIFO tasks will get 12.5% runtime and the SCHED_OTHER tasks will get ~8.3% runtime. This usually offers better interactivity on multithreaded platforms. See scheduling priority documentation: https://man7.org/linux/man-pages/man7/sched.7.html See autogrouping off: https://www.youtube.com/watch?v=uk70SeGA7pg See autogrouping on: https://www.youtube.com/watch?v=prxInRdaNfc
kernel.sched_enable_thread_grouping: 0 --> 1
To my knowledge using the limited documentation of this tunable, this is basically autogrouping for thread groups.
kernel.sched_child_runs_first: 0 --> 1
When forking a child process from the parent, execute the child process before the parent process. This usually shaves down some latency on task initializations, since most of the time the child process is doing some form of heavy lifting.
kernel.sched_downmigrate: 20 20
Do not allow tasks to migrate back down to a lower-power CPU until the estimated CPU utilization would go below 20% on said CPU. This means tasks will stay on higher-performance CPUs for longer than usual.
kernel.sched_upmigrate: 80 80
Similar to the previous tunable, do not allow CPUs to migrate to the higher-performance CPUs unless the utilization goes above 80%.
kernel.sched_group_downmigrate: 20
The same as kernel.sched_downmigrate, except for whole task groups.
kernel.sched_group_upmigrate: 80
The same as kernel.sched_upmigrate, except for whole task groups.
kernel.sched_tunable_scaling: 0
This is more of a precaution than anything. Since the next few tunables will be scheduler timing related, we don't want the scheduler to scale our values for multiple CPUs, as we will be providing CPU-agnostic values.
kernel.sched_latency_ns: 10000000 (10ms)
Set the default scheduling period to 10ms. If this value is set too low, the scheduler will switch contexts too often, spending more time internally than executing the waiting tasks.
kernel.sched_min_granularity_ns: 1000000 (1ms)
Set the minimum task scheduling period to 1ms. With kernel.sched_latency_ns set to 1ms, this means that 10 tasks may execute within the 10ms scheduling period before we exceed it.
kernel.sched_migration_cost_ns: 500000 (0.5ms) --> 1000000 (1ms)
Increase the time that a task is considered to be cache hot. According to RedHat, increasing this tunable reduces the number of task migrations. This should reduce time spent balancing tasks and increase per-task performance. See RedHat: https://www.redhat.com/files/summit/...nux-Part-1.pdf
kernel.sched_min_task_util_for_boost: 25
This value effects if tasks should be migrated to a higher performant CPU if it's utilization is above this amount. Allow tasks to be migrated upwards if the user is triggering a touch boost and the task is above 25% utilization.
kernel.sched_min_task_util_for_colocation: 50
This value is the same as the former, except it occurs when the user is not touching the screen. We shouldn't upmigrate tasks if the user isn't actively interacting with them (i.e. video streaming).
kernel.sched_nr_migrate: 32 --> 64
When migrating tasks between CPUs, allow the scheduler to migrate twice as many as usual. This should increase scheduling latency marginally, but increase the performance of SCHED_OTHER tasks.
kernel.sched_schedstats: 1 --> 0
Disable scheduler statistics accounting. This is just for debugging, but it adds overhead.
kernel.sched_wakeup_granularity_ns: 1000000 (1ms) --> 5000000 (5ms)
Require the current task to be surpassing the new task in vmruntime by 5ms instead of 1ms before preemption occurs. This should reduce jitter due to less frequent task interruptions.
kernel.timer_migration: 1 --> 0
Disable the migration of timers among CPUs. Usually, when a timer is created on one CPU, it would be able to be migrated to another CPU. However, this increases realtime latencies and scheduling interrupts. It can be turned off.
net.ipv4.tcp_ecn: 2 --> 1
Enable Explicit Congestion Notification for incoming and outgoing negotiations. This reduces packet losses.
net.ipv4.tcp_fastopen: 3
Enable data transmission during the SACK exchange point in TCP negotiation. This reduces packet latencies. Enable it for senders and receivers.
net.ipv4.tcp_syncookies: 1 --> 0
This tunable, when enabled, prevents denial of service attacks by allowing connection ACKs to be tracked. However, this is more-or-less unnecessary for a mobile device. It is more applicable for servers. Disable it.
net.ipv4.tcp_timestamps: 1 --> 0
RedHat claims that TCP timestamps may cause performance spikes due to time accounting code on high-performance connections. Disable it. See RedHat: https://access.redhat.com/documentat...ormance_spikes
vm.compact_unevictable_allowed: 1 --> 0
Do not allow compaction of unevictable pages. With this set to 1, more compactions can happen at the cost of small page fault stalls. Turn this off to compact less but avoid aforementioned stalls.
vm.dirty_background_ratio: 5 --> 10
Start writing back dirty pages (pages that have been modified but not yet written to the disk) asynchronously at 10% memory dirtied instead of 5%. Writing dirty pages back too early can be inefficient and overutilize the storage device.
vm.dirty_ratio: 20 --> 30
This tunable is the same as the former, but it is the ceiling for synchronous dirty writeback, meaning all I/O will stall until all dirty pages are written out to the disk. We usually won't need to worry about hitting this value, as the background writeback can catch up before we reach 20% memory dirtied. But as a precaution (i.e. heavy file transfers), increase this value to a 30% ceiling to prevent visible system stalls. We are sacrificing available memory in exchange for a reduced change of a brief system stall.
vm.dirty_expire_centisecs: 300 (3s) --> 1000 (10s)
This is the longest that dirty pages can remain in the system before they are forcefully written out to the disk. By increasing this value, we can allow the dirty background writeback to take its time asynchronously, and avoid unnecessary writebacks that can clog the flusher thread.
vm.dirty_writeback_centisecs: 500 (5s) --> 0 (0s)
Do not periodically writeback data every 5 seconds. Instead, leave it to the dirty background writeback to wake up when the dirty memory of the system hits 10%. This allows the dirty pages to stay in memory for longer, possibly increasing cache locality as the page cache is still available in memory.
vm.extfrag_threshold: 500 --> 750
Compact memory more often, even if the memory allocation was estimated to be due to a low-memory status. This lets us put more data into RAM at the expense of running compation more often. This is a worthy tradeoff, as it reduces memory fragmentation, which is incredibly important for ZRAM.
vm.oom_dump_tasks: 1 --> 0
Do not dump debug information when (or if) we run out of memory. If we have a lot of tasks running, and are OOMing often, then this overhead can add up.
vm.page-cluster: 3 --> 0
Disable reading additional pages from the swap device (in most cases, ZRAM). This is the same philosophy as disabling readahead.
vm.reap_mem_on_sigkill: 0 --> 1
When we kill a task, clean its memory footprint to free up whatever amount of RAM it was consuming.
vm.stat_interval: 1 --> 10
Update /proc/stat information every 10 seconds instead of every second, reducing jitter on loaded systems.
vm.swappiness: 100 --> 80
Swap to ZRAM less often if we don't have to. ZRAM can become expensive due to constant compression and decompression. If we can keep some of the memory uncompressed in regular RAM, we can avoid that overhead.
vm.vfs_cache_pressure: 100 --> 200
This tunable controls the kernel's tendency to reclaim inodes and dentries over page cache. Inodes and dentries are information about file metadata and directory structures, while page cache is the actual cached contents of a file. By increasing this value to 200, we tell the kernel to prefer claiming inodes and dentries over the page cache, increasing the chance of a cache hit when referencing recently used data, while not polluting the RAM with less-important information.
Next Buddy
By scheduling the last woken task first, we can increase cache locality since that task is likely to touch the same data as before.
No Strict Skip Buddy
Usually, the scheduler will always choose to skip tasks that call yield(). However, these yeilding tasks may be of higher importance than the last or next buddy that are available. Do not always skip the skip buddy if we don't have to.
No Nontask Capacity
The scheduler decrements the perceived CPU capacity that longer the CPU has been idle for. This means that an idle CPU may be skipped during task placement, and a task can be grouped with a busier CPU. Disable this to improve task start latency.
TTWU Queue
Allow the scheduler to place tasks on their origin CPU, increasing cache locality if the CPU is non-local (i.e. a cache hit would definitely have been missed).
Governor Tweaks
- CAF CPU Boost Tweaks
I/O
- iostats: 1 --> 0: Disable I/O statistics accounting, which adds overhead.
ZRAM
ZRAM reduces disk wear by reducing disk writes, and also increases cache locality by allowing more data to fit in RAM at once. KTweak configures ZRAM to take up at most half of the available RAM on the system, which is a good ratio of RAM to ZRAM for a mobile device.
Other Notes
You should know that KTweak applies after 60s of uptime as to prevent Android's init from overwriting any values.
Contact
You can find me on telegram at @tytydraco. Feel free to email me at [email protected].
Downloads
All releases and the entire source code for KTweak is available on GitHub:
Downloads
XDA:DevDB Information
KTweak, Tool/Utility for all devices (see above for details)
Contributors
tytydraco, tytydraco
Source Code: https://github.com/tytydraco/ktweak
Version Information
Status: Stable
Current Stable Version: v1.0.7
Stable Release Date: 2020-08-16
Created 2020-08-16
Last Updated 2020-08-16XDA Developers was founded by developers, for developers. It is now a valuable resource for people who want to make the most of their mobile devices, from customizing the look and feel to adding new functionality.Are you a developer? | Terms of ServiceWich properties should I check before installing? And wich commands should I use?
I'm currently checking abis, sdk version, and app version via
-'adb getprop' for device info
-'adb shell dumpsys package' for installed apps on device
-'aapt dump badging' for apk files in my HDD.
OS: Windows 10 1909 x64
Language: C# .NET
IDE: Visual Studio 2013Register or Login with Google
OnePlus 8T
Samsung Galaxy Z Fold2
Samsung Galaxy Note 20 Ultra
Samsung Galaxy Note 20
OnePlus 8 Pro
Huawei P40 Pro
Samsung Galaxy S20
Huawei Mate 30 Pro
OnePlus 7T
Samsung Galaxy Note 10+
Google Pixel 4 XL
OnePlus 7 Pro
OnePlus Nord N100
OnePlus Nord N10 5G
Apple iPhone 12
OPPO Reno4 Z 5G
OPPO Reno4 / 4 Pro 5G
Huawei Mate 40 Pro
Lenovo Legion Duel
Realme 7i/* * Your warranty is now void. * * I am not responsible for bricked devices, dead SD cards, * thermonuclear war, or you getting fired because the alarm app failed. Please * do some research if you have any concerns about features included in this ROM * before flashing it! YOU are choosing to make these modifications, and if * you point the finger at me for messing up your device, I will laugh at you. * */
Known issues
You tell me!
HOW TO INSTALL LINEAGEOS WITH MICROG
Clean flash
- Backup your data (recommended)
- Remove custom encryption pins/passwords (recommended)
- Reboot to TWRP
- Wipe system / data / cache / vendor (do not format data - this will erase the internal memory)
- Flash firmware (if needed), build (also no-verity if you want to run decrypted)
- Flash Magisk for root (if needed)
- Restart
Dirty flash (Update)
- Backup your data (recommended)
- Reboot to TWRP
- Flash new firmware (if needed) and update the build (followed by no-verity if you were decrypted earlier)
- Restart
Do not publish bug reports without specifying logs (logcats) or steps to reproduce the bug.
Download Rom
see microg-signed
TWRP: by codeworkx
TWRP Official
Firmware:firmware
Magisk v22 for Root: release
Magisk Canary for Root:magisk-debug
Support for german users
Learn more about LineageOS for microG here:
https://lineage.microg.org/
Source Link:
https://github.com/lineageos4microg
All credit goes to LineageOS team, crDroid team, codeworkx and neobuddy89.
XDA:DevDB Information
[ROM]UNOFFICIAL[CHEESEBURGER] LINEAGEOS 17.1 WITH MICROG, ROM for the OnePlus 5
Contributors
Exodusnick
Source Code: https://github.com/crdroidandroid/an...neplus_msm8998
ROM OS Version: Android 10
ROM Kernel: Linux 4.x
Based On: LineageOS
Version Information
Status: Stable
Created 2019-06-26
Last Updated 2020-10-24Forum link: https://forums.developer.huawei.com/forumPortal/en/home
Medium link: https://medium.com/huawei-developers
It is a tradition to exchange business cards with new colleges or partners, but keeping physical business cards is not easy at all. To solve this problem, many apps and mini programs providing the electronic business card function have emerged. You must be wondering how to develop such a function for your app.
Try integrating HUAWEI Nearby Service and use its Nearby Message feature to quickly implement the point-to-point business card exchange function. Check out the function demo below.
If you are interested in the implementation details, download the source code from GitHub. You can optimize the code based on your app requirements.
Github demo link: https://github.com/HMS-Core/hms-near...byCardExchange
The development procedure is as follows:
1. Getting Started
If you are already a Huawei developer, skip this step. If you are new to Huawei Mobile Services (HMS), you need to configure app information in AppGallery Connect, enable Nearby Service on the HUAWEI Developers console, and integrate the HMS Core SDK. For details, please refer to the documentation.
2. Adding Permissions
Before using Nearby Message, add the network, Bluetooth, and location permissions. Add the following permissions to the AndroidManifest.xml file of your project:
<uses-permission android:name="android.permission.INTERNET " /> <uses-permission android:name="android.permission.BLUETOOTH" /> <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" /> <!-- The location permission is also required in Android 6.0 or later. --> <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /> <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
2.1 Submitting a Dynamic Permission Application
Ensure that the Bluetooth and location functions are enabled and the device has been connected to the Internet properly. Then submit a dynamic permission application for the location permission.
@Override public void onStart() { super.onStart(); getActivity().getApplication().registerActivityLifecycleCallbacks(this); checkPermission(); } @Override public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) { for (int i = 0; i < permissions.length; ++i) { if (grantResults[i] != 0) { showWarnDialog(Constants.LOCATION_ERROR); } } } private void checkPermission() { if (!BluetoothCheckUtil.isBlueEnabled()) { showWarnDialog(Constants.BLUETOOTH_ERROR); return; } if (!LocationCheckUtil.isLocationEnabled(this.getActivity())) { showWarnDialog(Constants.LOCATION_SWITCH_ERROR); return; } if (!NetCheckUtil.isNetworkAvailable(this.getActivity())) { showWarnDialog(Constants.NETWORK_ERROR); return; } String[] deniedPermission = PermissionUtil.getDeniedPermissions(this.getActivity(), new String[] { Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION }); if (deniedPermission.length > 0) { PermissionUtil.requestPermissions(this.getActivity(), deniedPermission, 10); } }
When a subscribed business card message is detected by the onFound method, display it in the business card searching pop-up; when a business card message is no longer discoverable (onLost), delete it from the business card searching pop-up.
private MessageHandler mMessageHandler = new MessageHandler() { @Override public void onFound(Message message) { CardInfo cardInfo = JsonUtils.json2Object(new String(message.getContent(), Charset.forName("UTF-8")), CardInfo.class); if (cardInfo == null) { return; } mSearchCardDialogFragment.addCardInfo(cardInfo); } @Override public void onLost(Message message) { CardInfo cardInfo = JsonUtils.json2Object(new String(message.getContent(), Charset.forName("UTF-8")), CardInfo.class); if (cardInfo == null) { return; } mSearchCardDialogFragment.removeCardInfo(cardInfo); } }; private void publish(String namespace, String type, int ttlSeconds, OnCompleteListener<Void> listener) { Message message = new Message(JsonUtils.object2Json(mCardInfo).getBytes(Charset.forName("UTF-8")), type, namespace); Policy policy = new Policy.Builder().setTtlSeconds(ttlSeconds).build(); PutOption option = new PutOption.Builder().setPolicy(policy).build(); Nearby.getMessageEngine(getActivity()).put(message, option).addOnCompleteListener(listener); } private void subscribe(String namespace, String type, int ttlSeconds, OnCompleteListener<Void> listener, GetCallback callback) { Policy policy = new Policy.Builder().setTtlSeconds(ttlSeconds).build(); MessagePicker picker = new MessagePicker.Builder().includeNamespaceType(namespace, type).build(); GetOption.Builder builder = new GetOption.Builder().setPolicy(policy).setPicker(picker); if (callback != null) { builder.setCallback(callback); } Nearby.getMessageEngine(getActivity()).get(mMessageHandler, builder.build()).addOnCompleteListener(listener); }
When two users exchange business cards face to face, exchange the business card exchange codes. When the business card message of the remote endpoint is published, subscribe to it.
private boolean onExchangeItemSelected() { PinCodeDialogFragment dialogFragment = new PinCodeDialogFragment(passwrod -> { MyCardFragment.this.publish(passwrod, passwrod, Policy.POLICY_TTL_SECONDS_MAX, result -> { if (!result.isSuccessful()) { String str = "Exchange card fail, because publish my card fail. exception: " + result.getException().getMessage(); Log.e(TAG, str); Toast.makeText(getActivity(), str, Toast.LENGTH_LONG).show(); return; } MyCardFragment.this.subscribe(passwrod, passwrod, Policy.POLICY_TTL_SECONDS_INFINITE, ret -> { if (!ret.isSuccessful()) { MyCardFragment.this.unpublish(passwrod, passwrod, task -> { String str = "Exchange card fail, because subscribe is fail, exception(" + ret.getException().getMessage() + ")"; if (!task.isSuccessful()) { str = str + " and unpublish fail, exception(" + task.getException().getMessage() + ")"; } Log.e(TAG, str); Toast.makeText(getActivity(), str, Toast.LENGTH_LONG).show(); }); return; } mSearchCardDialogFragment.setOnCloseListener(() -> { MyCardFragment.this.unpublish(passwrod, passwrod, task -> { if (!task.isSuccessful()) { Toast.makeText(getActivity(), "Unpublish my card fail, exception: " + task.getException().getMessage(), Toast.LENGTH_LONG).show(); } }); MyCardFragment.this.unsubscribe(task -> { if (!task.isSuccessful()) { Toast.makeText(getActivity(), "Unsubscribe fail, exception: " + task.getException().getMessage(), Toast.LENGTH_LONG).show(); } }); }); mSearchCardDialogFragment.show(getParentFragmentManager(), "Search Card"); }, null); }); }); dialogFragment.show(getParentFragmentManager(), "pin code"); return true; }
When a user adds a business card to favorites, add the card to the favorites list; when a user removes a business card from favorites, remote the card from the favorites list. In addition, store related data locally.
@Override public void onFavorite(CardInfo cardInfo, boolean isFavorite) { if (isFavorite) { mFavoriteMap.put(cardInfo.getId(), cardInfo); } else { mFavoriteMap.remove(cardInfo.getId()); } Set<String> set = new HashSet<>(mFavoriteMap.size()); for (CardInfo card : mFavoriteMap.values()) { set.add(JsonUtils.object2Json(card)); } SharedPreferences sharedPreferences = getContext().getSharedPreferences("data", Context.MODE_PRIVATE); sharedPreferences.edit().putStringSet(Constants.MY_FAVORITES_KEY, set).apply(); }
This demo uses Nearby Message feature of HUAWEI Nearby Service. What Nearby Message is capable of is more than just developing functions for exchanging business cards face-to-face. Here are some examples:
1. Face-to-face teaming in multiplayer sports games
2. Face-to-face round joining in board games
3. Near-field go-Dutch payment function
4. Music sharing
If you are interested and want to learn more, check our development guide at
https://developer.huawei.com/consume...e-introduction[/SIZE]Register or Login with Google
OnePlus 8T
Samsung Galaxy Z Fold2
Samsung Galaxy Note 20 Ultra
Samsung Galaxy Note 20
OnePlus 8 Pro
Huawei P40 Pro
Samsung Galaxy S20
Huawei Mate 30 Pro
OnePlus 7T
Samsung Galaxy Note 10+
Google Pixel 4 XL
OnePlus 7 Pro
OnePlus Nord N100
OnePlus Nord N10 5G
Apple iPhone 12
OPPO Reno4 Z 5G
OPPO Reno4 / 4 Pro 5G
Huawei Mate 40 Pro
Lenovo Legion Duel
Realme 7iThe OnePlus 6T is a 6.4" phone with a 1080 x 2280 pixel display. The Qualcomm Snapdragon 845 chipset is paired with 6/8GB of RAM and 128/256GB of storage. The main camera is 20MP+12MP and the selfie camera is 25MP. The battery has a 3700mAh capacity.